{
  "address": "0x77F5C2E4a1cFe40852384F8bf901926b360a379c",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementSetActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementSigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SignedResolutionEvaluated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "agreementViolation",
      "outputs": [
        {
          "internalType": "contract AgreementViolation",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataSharingAgreement.DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "purpose",
          "type": "string"
        },
        {
          "internalType": "enum DataSharingAgreement.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "providerId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "consumerId",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "copyData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "dataStream",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "signed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkActiveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataSharingAgreement.DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum DataSharingAgreement.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "providerId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerId",
              "type": "string"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signed",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_consumerId",
          "type": "string"
        }
      ],
      "name": "checkAgreementsByConsumer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataSharingAgreement.DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum DataSharingAgreement.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "providerId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerId",
              "type": "string"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signed",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_providerId",
          "type": "string"
        }
      ],
      "name": "checkAgreementsByProvider",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataSharingAgreement.DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum DataSharingAgreement.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "providerId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerId",
              "type": "string"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signed",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            }
          ],
          "internalType": "struct DataSharingAgreement.DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "_purpose",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_providerId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerId",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "copyData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_dataStream",
          "type": "bool"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_proofType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_resolution",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_iat",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_iss",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sub",
          "type": "string"
        }
      ],
      "name": "evaluateSignedResolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataSharingAgreement.DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum DataSharingAgreement.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "providerId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerId",
              "type": "string"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signed",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.Agreement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataSharingAgreement.DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum DataSharingAgreement.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "providerId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerId",
              "type": "string"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signed",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgreementsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum DataSharingAgreement.State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "presentPenaltyChoices",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        }
      ],
      "name": "retrieveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                }
              ],
              "internalType": "struct DataSharingAgreement.DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum DataSharingAgreement.State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "providerId",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerId",
              "type": "string"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct DataSharingAgreement.LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "signed",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "setActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_consumerId",
          "type": "string"
        }
      ],
      "name": "signAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_purpose",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_providerId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerId",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "copyData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "internalType": "struct DataSharingAgreement.LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "_dataStream",
          "type": "bool"
        }
      ],
      "name": "updateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd9f983f97c57c3b903e6efcee5ed5c9f6171d3ad2dd9295cf96a051433e2981b",
  "receipt": {
    "to": null,
    "from": "0x580d142D0c2958d843499553275e427Da4Ab7Eb5",
    "contractAddress": "0x77F5C2E4a1cFe40852384F8bf901926b360a379c",
    "transactionIndex": 0,
    "gasUsed": "5293468",
    "logsBloom": "0x
    "blockHash": "0x3c2b01bbeeaf03ee08b65f676598f0e76de5c36e686311d0f6043fabd7e52cbe",
    "transactionHash": "0xd9f983f97c57c3b903e6efcee5ed5c9f6171d3ad2dd9295cf96a051433e2981b",
    "logs": [],
    "blockNumber": 393601,
    "cumulativeGasUsed": "5293468",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "673564641d6848bef660adec95bd4f72",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementSetActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SignedResolutionEvaluated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"agreementViolation\",\"outputs\":[{\"internalType\":\"contract AgreementViolation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkActiveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_consumerId\",\"type\":\"string\"}],\"name\":\"checkAgreementsByConsumer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_providerId\",\"type\":\"string\"}],\"name\":\"checkAgreementsByProvider\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_dataStream\",\"type\":\"bool\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_resolution\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_iat\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_iss\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sub\",\"type\":\"string\"}],\"name\":\"evaluateSignedResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgreementsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"presentPenaltyChoices\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"}],\"name\":\"retrieveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"}],\"internalType\":\"struct DataSharingAgreement.DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum DataSharingAgreement.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"signed\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"setActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_consumerId\",\"type\":\"string\"}],\"name\":\"signAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_providerId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerId\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct DataSharingAgreement.LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"_dataStream\",\"type\":\"bool\"}],\"name\":\"updateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Agreement.sol\":\"DataSharingAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/Agreement.sol\":{\"content\":\"/*\\r\\n* Copyright (c) Siemens AG, 2020-2022\\r\\n*\\r\\n* Authors:\\r\\n*  Susanne Stahnke <susanne.stahnke@siemens.com>,\\r\\n*  Yvonne Kovacs <yvonne.kovacs@siemens.com> \\r\\n*\\r\\n* This work is licensed under the terms of Apache 2.0.  See\\r\\n* the LICENSE file in the top-level directory.\\r\\n*/\\r\\n\\r\\npragma solidity 0.8.9;\\r\\n\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\nimport \\\"./AgreementViolation.sol\\\";\\r\\n\\r\\ncontract DataSharingAgreement {\\r\\n\\r\\n    AgreementViolation public agreementViolation = new AgreementViolation();\\r\\n\\r\\n    enum State { Created, Active, Updated, Violated, Terminated }\\r\\n\\r\\n    struct Agreement {\\r\\n        uint256 agreementId;\\r\\n        string providerPublicKey;\\r\\n        string consumerPublicKey;\\r\\n        string dataExchangeAgreementHash;\\r\\n        DataOffering dataOffering;\\r\\n        string purpose;\\r\\n        State state;\\r\\n        string providerId;\\r\\n        string consumerId;\\r\\n        uint256[3] agreementDates;\\r\\n        IntendedUse intendedUse;\\r\\n        LicenseGrant licenseGrant;\\r\\n        bool dataStream;\\r\\n        bool signed;\\r\\n    }\\r\\n\\r\\n    struct DataOffering {\\r\\n        string dataOfferingId; \\r\\n        uint256 dataOfferingVersion;\\r\\n    }\\r\\n    \\r\\n    struct IntendedUse {\\r\\n        bool processData;\\r\\n        bool shareDataWithThirdParty;\\r\\n        bool editData;\\r\\n    }\\r\\n    \\r\\n    struct LicenseGrant {\\r\\n        bool copyData;\\r\\n        bool transferable;\\r\\n        bool exclusiveness;\\r\\n        bool revocable;\\r\\n    }\\r\\n\\r\\n    Agreement[] public agreements;\\r\\n\\r\\n    uint256 activeAgreementCount;\\r\\n    mapping (string => uint) providerCount;\\r\\n    mapping (string => uint) consumerCount;\\r\\n    mapping (string => uint) consumerPublicKeyCount;\\r\\n\\r\\n    event AgreementCreated(string providerId, string consumerId, uint256 id);\\r\\n    event AgreementUpdated(string providerId, string consumerId, uint256 id);\\r\\n    event AgreementSigned(string providerId, string consumerId, uint256 id);\\r\\n    event AgreementSetActive(string providerId, string consumerId, uint256 id);\\r\\n    event SignedResolutionEvaluated(string providerId, string consumerId, uint256 id);\\r\\n    event AgreementTerminated(string providerId, string consumerId,uint256 id);\\r\\n\\r\\n    function createAgreement(\\r\\n                            string memory _providerPublicKey,\\r\\n                            string memory _consumerPublicKey,\\r\\n                            string memory _dataExchangeAgreementHash,\\r\\n                            DataOffering memory dataOffering,\\r\\n                            string memory _purpose,\\r\\n                            string memory _providerId,\\r\\n                            string memory _consumerId,\\r\\n                            uint256[] memory dates,\\r\\n                            IntendedUse memory intendedUse,\\r\\n                            LicenseGrant memory licenseGrant,\\r\\n                            bool _dataStream) public {\\r\\n                            \\r\\n        Agreement memory newAgreement;\\r\\n        newAgreement.providerPublicKey = _providerPublicKey;\\r\\n        newAgreement.consumerPublicKey = _consumerPublicKey;\\r\\n        newAgreement.dataExchangeAgreementHash = _dataExchangeAgreementHash;\\r\\n        newAgreement.dataOffering.dataOfferingId = dataOffering.dataOfferingId;\\r\\n        newAgreement.dataOffering.dataOfferingVersion = dataOffering.dataOfferingVersion;\\r\\n        newAgreement.purpose = _purpose;\\r\\n        newAgreement.providerId = _providerId;\\r\\n        newAgreement.consumerId = _consumerId;\\r\\n    \\r\\n        newAgreement.state = State.Created;\\r\\n        newAgreement.agreementDates[0] = dates[0]; \\r\\n     \\r\\n        require ( dates[1] >= newAgreement.agreementDates[0], \\\"Start date must be after creation date.\\\" );\\r\\n        require ( dates[2] > dates[1], \\\"End date must be after start date.\\\" );\\r\\n        newAgreement.agreementDates[1] = dates[1];\\r\\n        newAgreement.agreementDates[2] = dates[2];\\r\\n        \\r\\n        newAgreement.intendedUse.processData = intendedUse.processData;\\r\\n        newAgreement.intendedUse.shareDataWithThirdParty = intendedUse.shareDataWithThirdParty;\\r\\n        newAgreement.intendedUse.editData = intendedUse.editData;\\r\\n        \\r\\n        newAgreement.licenseGrant.copyData = licenseGrant.copyData;\\r\\n        newAgreement.licenseGrant.transferable = licenseGrant.transferable;\\r\\n        newAgreement.licenseGrant.exclusiveness = licenseGrant.exclusiveness;\\r\\n        newAgreement.licenseGrant.revocable = licenseGrant.revocable;\\r\\n        \\r\\n        newAgreement.dataStream = _dataStream;\\r\\n\\r\\n        newAgreement.agreementId = agreements.length;\\r\\n        \\r\\n        agreements.push(newAgreement);\\r\\n\\r\\n        emit AgreementCreated(_providerId, _consumerId, agreements.length - 1);  //newAgreement.agreementId\\r\\n    }\\r\\n    \\r\\n    function updateAgreement(uint256 _id,\\r\\n                            string memory _providerPublicKey,\\r\\n                            string memory _consumerPublicKey,\\r\\n                            string memory _dataOfferingId,\\r\\n                            string memory _purpose,\\r\\n                            string memory _providerId,\\r\\n                            string memory _consumerId,\\r\\n                            uint256[] memory dates,\\r\\n                            IntendedUse memory intendedUse,\\r\\n                            LicenseGrant memory licenseGrant,\\r\\n                            bool _dataStream) public {\\r\\n       \\r\\n        Agreement storage agreement = agreements[_id];  \\r\\n\\r\\n        require (keccak256(abi.encodePacked(agreements[_id].providerId)) == keccak256(abi.encodePacked(_providerId)), \\\"Only the provider of this agreement can update.\\\" ); \\r\\n        \\r\\n        if(agreement.state == State.Active)\\r\\n        {\\r\\n            agreement.purpose = _purpose;\\r\\n     \\r\\n            require ( dates[0] >= agreement.agreementDates[0], \\\"Start date must be after creation date.\\\" );\\r\\n            require ( dates[1] > dates[0], \\\"End date must be after start date.\\\" );\\r\\n            agreement.agreementDates[1] = dates[0];\\r\\n            agreement.agreementDates[2] = dates[1];\\r\\n        \\r\\n            agreement.intendedUse.processData = intendedUse.processData;\\r\\n            agreement.intendedUse.shareDataWithThirdParty = intendedUse.shareDataWithThirdParty;\\r\\n            agreement.intendedUse.editData = intendedUse.editData;\\r\\n        \\r\\n            agreement.licenseGrant.copyData = licenseGrant.copyData;\\r\\n            agreement.licenseGrant.transferable = licenseGrant.transferable;\\r\\n            agreement.licenseGrant.exclusiveness = licenseGrant.exclusiveness;\\r\\n            agreement.licenseGrant.revocable = licenseGrant.revocable;\\r\\n\\r\\n        \\r\\n            agreement.dataStream = _dataStream;\\r\\n\\r\\n            agreement.state = State.Updated;\\r\\n            activeAgreementCount--;\\r\\n            providerCount[_providerId]--;\\r\\n            consumerCount[_consumerId]--;\\r\\n            consumerPublicKeyCount[_consumerPublicKey]--;\\r\\n\\r\\n            emit AgreementUpdated(_providerId, _consumerId, _id);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function signAgreement (uint256 _id, string memory _consumerId) public {\\r\\n        require (keccak256(abi.encodePacked(agreements[_id].consumerId)) == keccak256(abi.encodePacked(_consumerId)), \\\"Only the consumer of this agreement can sign.\\\" );\\r\\n        agreements[_id].signed = true;\\r\\n        string memory providerId = agreements[_id].providerId;\\r\\n        if(agreements[_id].agreementDates[2]>=block.timestamp) {\\r\\n            emit AgreementSigned(providerId,_consumerId, _id);\\r\\n        }\\r\\n    }//data from open industrial platform s7\\r\\n\\r\\n    function setActive (uint256 _id) public{\\r\\n        string memory providerId = agreements[_id].providerId;\\r\\n        string memory consumerId = agreements[_id].consumerId;\\r\\n        if( agreements[_id].signed == true && agreements[_id].agreementDates[1]<=block.timestamp){  \\r\\n            agreements[_id].state = State.Active;\\r\\n            activeAgreementCount++;\\r\\n            providerCount[providerId]++;\\r\\n            consumerCount[consumerId]++;\\r\\n            consumerPublicKeyCount[agreements[_id].consumerPublicKey]++;\\r\\n        }\\r\\n        emit AgreementSetActive(providerId, consumerId, _id);\\r\\n    }\\r\\n\\r\\n    function getAgreement(uint256 id) public view returns (Agreement memory) {\\r\\n        return agreements[id];\\r\\n    }\\r\\n \\r\\n    function getAgreements() public view returns (Agreement[] memory) {\\r\\n        return agreements;\\r\\n    }\\r\\n\\r\\n     function getAgreementsLength() public view returns (uint256) {\\r\\n        return agreements.length;\\r\\n    } \\r\\n\\r\\n     function getState(uint256 id) public view returns (State) {\\r\\n        return agreements[id].state;\\r\\n    } \\r\\n    \\r\\n    function checkActiveAgreements () external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = new Agreement[](activeAgreementCount);\\r\\n        uint counter = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if(agreements[i].state == State.Active) {   \\r\\n                activeAgreements[counter] = agreements[i];\\r\\n                counter++;\\r\\n            }\\r\\n        }\\r\\n        return activeAgreements;\\r\\n    }\\r\\n    \\r\\n    function checkAgreementsByProvider (string memory _providerId) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory providerAgreements = new Agreement[](providerCount[_providerId]);\\r\\n        uint counter = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].providerId)) == keccak256(abi.encodePacked(_providerId))) {\\r\\n                providerAgreements[counter] = agreements[i];\\r\\n                counter++;\\r\\n            }\\r\\n        }\\r\\n        return providerAgreements;\\r\\n    }\\r\\n    \\r\\n    function checkAgreementsByConsumer (string memory _consumerId) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory consumerAgreements = new Agreement[](consumerCount[_consumerId]);\\r\\n        uint counter = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].consumerId)) == keccak256(abi.encodePacked(_consumerId))) {\\r\\n                consumerAgreements[counter] = agreements[i];\\r\\n                counter++;\\r\\n            }\\r\\n        }\\r\\n        return consumerAgreements;\\r\\n    }\\r\\n\\r\\n    function retrieveAgreements (string memory _consumerPublicKey) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory consumerPublicKeyAgreements = new Agreement[](consumerPublicKeyCount[_consumerPublicKey]);\\r\\n        uint counter = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))) {\\r\\n                consumerPublicKeyAgreements[counter] = agreements[i];\\r\\n                counter++;\\r\\n            }\\r\\n        }\\r\\n        return consumerPublicKeyAgreements;\\r\\n      \\r\\n    }\\r\\n\\r\\n    function evaluateSignedResolution(uint256 _agreementId, string memory _proofType, string memory _type, string memory _resolution,\\r\\n                                string memory _dataExchangeId, uint256 _iat, string memory _iss, string memory _sub) public {\\r\\n\\r\\n      agreementViolation.evaluateResolution(_agreementId, _proofType, _type, _resolution, _dataExchangeId, _iat, _iss, _sub);\\r\\n      if(agreementViolation.getPenaltyChoices(_agreementId).length>0){\\r\\n        agreements[_agreementId].state=State.Violated;\\r\\n      }\\r\\n      emit SignedResolutionEvaluated(agreements[_agreementId].providerId, agreements[_agreementId].consumerId, _agreementId);\\r\\n\\r\\n\\t}\\r\\n\\r\\n    function presentPenaltyChoices(uint256 _agreementId) public view returns (string[] memory) { \\r\\n        return agreementViolation.getPenaltyChoices(_agreementId);\\r\\n    }\\r\\n\\r\\n    function terminateAgreement(uint256 _id) public {\\r\\n        if(agreements[_id].agreementDates[2]<=block.timestamp){\\r\\n            if(agreements[_id].state == State.Active){\\r\\n                activeAgreementCount--;\\r\\n                providerCount[agreements[_id].providerId]--;\\r\\n                consumerCount[agreements[_id].consumerId]--;\\r\\n                consumerPublicKeyCount[agreements[_id].consumerPublicKey]--;\\r\\n            }     \\r\\n            agreements[_id].state = State.Terminated;\\r\\n            emit AgreementTerminated(agreements[_id].providerId,agreements[_id].consumerId, _id);\\r\\n        }\\r\\n    }\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x1e1d69f62e173eaf91faf0039e1197da22b69436f8ec91272afe3fe7845fe2be\"},\"contracts/AgreementViolation.sol\":{\"content\":\"// /*\\r\\n\\r\\n// * Copyright (c) Siemens AG, 2020-2022\\r\\n\\r\\n// *\\r\\n\\r\\n// * Authors:\\r\\n\\r\\n// * Susanne Stahnke <susanne.stahnke@siemens.com>,\\r\\n\\r\\n// * Yvonne Kovacs <yvonne.kovacs@siemens.com>\\r\\n\\r\\n// *\\r\\n\\r\\n// * This work is licensed under the terms of Apache 2.0. See\\r\\n\\r\\n// * the LICENSE file in the top-level directory.\\r\\n\\r\\n// */\\r\\n\\r\\n\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\ncontract AgreementViolation {\\r\\n    \\r\\n    enum ViolationType {\\r\\n        PaymentNotCompleted,\\r\\n        DataNotTransferredAsDescribed,\\r\\n        DataNotAsDescribed,\\r\\n        LicenseViolated\\r\\n    }\\r\\n    enum Penalty {\\r\\n        Terminate,\\r\\n        InsurancePaymentByConsumer,\\r\\n        NewTranferDateForProvider,\\r\\n        NewTranferDateForProviderAndReductionOfPayment,\\r\\n        CorrectDataByProvider,\\r\\n        ReductionOfPayment\\r\\n    }\\r\\n\\r\\n\\r\\n    struct Violation {\\r\\n        ViolationType violationType;\\r\\n        string issuerId;\\r\\n    }\\r\\n\\r\\n    struct SignedResolution {\\r\\n        string proofType;\\r\\n        string resolutionType;\\r\\n        string resolution;\\r\\n        string dataExchangeId;\\r\\n        uint256 iat;\\r\\n        string iss;\\r\\n        string sub;\\r\\n    }\\r\\n    \\r\\n    mapping(uint256 => Violation) public violations;\\r\\n\\r\\n    mapping(uint256 => string[]) public agreementIdToPenalty;\\r\\n\\r\\n    \\r\\n    function evaluateResolution(\\r\\n        uint256 _agreementId,\\r\\n        string memory _proofType,\\r\\n        string memory _type,\\r\\n        string memory _resolution,\\r\\n        string memory _dataExchangeId,\\r\\n        uint256 _iat,\\r\\n        string memory _iss,\\r\\n        string memory _sub) public { \\r\\n\\r\\n        SignedResolution memory signedResolution;\\r\\n        signedResolution.proofType = _proofType;\\r\\n        signedResolution.resolutionType = _type;\\r\\n        signedResolution.resolution = _resolution;\\r\\n        signedResolution.dataExchangeId = _dataExchangeId;\\r\\n        signedResolution.iat = _iat;\\r\\n        signedResolution.iss = _iss;   \\r\\n        signedResolution.sub = _sub;\\r\\n\\r\\n        if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"completed\\\"))){\\r\\n                            delete agreementIdToPenalty[_agreementId];\\r\\n             \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"notCompleted\\\"))) { \\r\\n                //Decryption key not published (data tranfer not as described)\\r\\n                issueViolation(_agreementId,ViolationType.DataNotTransferredAsDescribed, signedResolution.sub);\\r\\n                setPenalties(_agreementId);       \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"accepted\\\"))){ \\r\\n                issueViolation(_agreementId,ViolationType.DataNotTransferredAsDescribed, signedResolution.sub);\\r\\n                setPenalties(_agreementId);\\r\\n             }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"denied\\\")))\\r\\n                //The cipherblock can be properly decrypted\\r\\n                 delete agreementIdToPenalty[_agreementId];\\r\\n\\r\\n    }\\r\\n\\r\\n    function getPenaltyChoices(uint256 _agreementId) public view returns (string[] memory){\\r\\n        return agreementIdToPenalty[_agreementId];\\r\\n    }\\r\\n    \\r\\n\\r\\n    function issueViolation(uint256 _agreementId, ViolationType _violationType, string memory _issuerId) private {\\r\\n        violations[_agreementId] = Violation(_violationType, _issuerId);\\r\\n    }\\r\\n\\r\\n    function setPenalties(uint256 _agreementId) private {\\r\\n        agreementIdToPenalty[_agreementId].push(\\\"Terminate\\\");\\r\\n        agreementIdToPenalty[_agreementId].push(\\\"NewTranferDateForProvider\\\");\\r\\n        agreementIdToPenalty[_agreementId].push(\\\"NewTranferDateForProviderAndReductionOfPayment\\\"); \\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0x7601033abb422adbd67b36344793875ba022b4d0556d9de477b10073ae241c57\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052604051620000129062000064565b604051809103906000f0801580156200002f573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b03929092169190911790553480156200005d57600080fd5b5062000072565b610c4c806200522d83390190565b6151ab80620000826000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806383a2fc1c116100b2578063ad9099a211610081578063cf7e924211610066578063cf7e92421461028d578063d526c03014610295578063dd4be34b146102a857600080fd5b8063ad9099a21461024e578063bd14de961461026157600080fd5b806383a2fc1c146101f55780639a02692414610215578063a473ecb314610228578063a63051891461023b57600080fd5b806344c9af28116100ee57806344c9af2814610177578063464da40d146101975780634d9af528146101c25780634f9f6fe6146101d557600080fd5b8063023563d814610120578063063bd15a146101355780631c510ea91461015357806330937f3a14610164575b600080fd5b61013361012e36600461431a565b6102bb565b005b61013d6105ef565b60405161014a9190614585565b60405180910390f35b60015460405190815260200161014a565b61013d6101723660046146ac565b610c44565b61018a61018536600461431a565b611330565b60405161014a91906146e9565b6000546101aa906001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b61013d6101d03660046146ac565b611362565b6101e86101e336600461431a565b611a45565b60405161014a91906146f7565b61020861020336600461431a565b611fb5565b60405161014a9190614711565b61013361022336600461431a565b61203c565b6101336102363660046148f4565b61229d565b610133610249366004614a58565b612703565b61013361025c366004614b0e565b61294a565b61027461026f36600461431a565b612e47565b60405161014a9d9c9b9a99989796959493929190614bbd565b61013d613312565b61013d6102a33660046146ac565b6138a6565b6101336102b6366004614cdb565b613f89565b6000600182815481106102d0576102d0614de5565b906000526020600020906010020160080180546102ec90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461031890614dfb565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b5050505050905060006001838154811061038157610381614de5565b9060005260206000209060100201600901805461039d90614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990614dfb565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b505050505090506001838154811061043057610430614de5565b60009182526020909120600f601090920201015460ff61010090910416151560011480156104955750426001848154811061046d5761046d614de5565b9060005260206000209060100201600a0160016003811061049057610490614de5565b015411155b156105af5760018084815481106104ae576104ae614de5565b60009182526020909120600760109092020101805460ff191660018360048111156104db576104db6143b8565b0217905550600280549060006104f083614e4c565b91905055506003826040516105059190614e67565b908152604051908190036020019020805490600061052283614e4c565b91905055506004816040516105379190614e67565b908152604051908190036020019020805490600061055483614e4c565b919050555060056001848154811061056e5761056e614de5565b906000526020600020906010020160020160405161058c9190614e83565b90815260405190819003602001902080549060006105a983614e4c565b91905055505b7f73fa99700b63889168cb6ab431ceb7bea273066500ef702cb82c586fbd9fba118282856040516105e293929190614ef5565b60405180910390a1505050565b6060600060025467ffffffffffffffff81111561060e5761060e6145e7565b60405190808252806020026020018201604052801561064757816020015b61063461416d565b81526020019060019003908161062c5790505b5090506000805b600154811015610c3c57600180828154811061066c5761066c614de5565b600091825260209091206007601090920201015460ff166004811115610694576106946143b8565b1415610c2a57600181815481106106ad576106ad614de5565b9060005260206000209060100201604051806101c0016040529081600082015481526020016001820180546106e190614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461070d90614dfb565b801561075a5780601f1061072f5761010080835404028352916020019161075a565b820191906000526020600020905b81548152906001019060200180831161073d57829003601f168201915b5050505050815260200160028201805461077390614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461079f90614dfb565b80156107ec5780601f106107c1576101008083540402835291602001916107ec565b820191906000526020600020905b8154815290600101906020018083116107cf57829003601f168201915b5050505050815260200160038201805461080590614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461083190614dfb565b801561087e5780601f106108535761010080835404028352916020019161087e565b820191906000526020600020905b81548152906001019060200180831161086157829003601f168201915b50505050508152602001600482016040518060400160405290816000820180546108a790614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546108d390614dfb565b80156109205780601f106108f557610100808354040283529160200191610920565b820191906000526020600020905b81548152906001019060200180831161090357829003601f168201915b50505050508152602001600182015481525050815260200160068201805461094790614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461097390614dfb565b80156109c05780601f10610995576101008083540402835291602001916109c0565b820191906000526020600020905b8154815290600101906020018083116109a357829003601f168201915b5050509183525050600782015460209091019060ff1660048111156109e7576109e76143b8565b60048111156109f8576109f86143b8565b8152602001600882018054610a0c90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3890614dfb565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050508152602001600982018054610a9e90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610aca90614dfb565b8015610b175780601f10610aec57610100808354040283529160200191610b17565b820191906000526020600020905b815481529060010190602001808311610afa57829003601f168201915b505050918352505060408051606081019182905260209092019190600a84019060039082845b815481526020019060010190808311610b3d5750505091835250506040805160608082018352600d85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855160808082018852600e8a015480851615158352838104851615159783019790975293860483161515818801526301000000909504821615158585015294860193909352600f90950154808316151591850191909152919091041615159101528351849084908110610c1057610c10614de5565b60200260200101819052508180610c2690614e4c565b9250505b80610c3481614e4c565b91505061064e565b509092915050565b60606000600583604051610c589190614e67565b90815260200160405180910390205467ffffffffffffffff811115610c7f57610c7f6145e7565b604051908082528060200260200182016040528015610cb857816020015b610ca561416d565b815260200190600190039081610c9d5790505b5090506000805b600154811015611327576001808281548110610cdd57610cdd614de5565b600091825260209091206007601090920201015460ff166004811115610d0557610d056143b8565b148015610d80575084604051602001610d1e9190614e67565b6040516020818303038152906040528051906020012060018281548110610d4757610d47614de5565b9060005260206000209060100201600201604051602001610d689190614e83565b60405160208183030381529060405280519060200120145b156113155760018181548110610d9857610d98614de5565b9060005260206000209060100201604051806101c001604052908160008201548152602001600182018054610dcc90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610df890614dfb565b8015610e455780601f10610e1a57610100808354040283529160200191610e45565b820191906000526020600020905b815481529060010190602001808311610e2857829003601f168201915b50505050508152602001600282018054610e5e90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8a90614dfb565b8015610ed75780601f10610eac57610100808354040283529160200191610ed7565b820191906000526020600020905b815481529060010190602001808311610eba57829003601f168201915b50505050508152602001600382018054610ef090614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1c90614dfb565b8015610f695780601f10610f3e57610100808354040283529160200191610f69565b820191906000526020600020905b815481529060010190602001808311610f4c57829003601f168201915b5050505050815260200160048201604051806040016040529081600082018054610f9290614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054610fbe90614dfb565b801561100b5780601f10610fe05761010080835404028352916020019161100b565b820191906000526020600020905b815481529060010190602001808311610fee57829003601f168201915b50505050508152602001600182015481525050815260200160068201805461103290614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461105e90614dfb565b80156110ab5780601f10611080576101008083540402835291602001916110ab565b820191906000526020600020905b81548152906001019060200180831161108e57829003601f168201915b5050509183525050600782015460209091019060ff1660048111156110d2576110d26143b8565b60048111156110e3576110e36143b8565b81526020016008820180546110f790614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461112390614dfb565b80156111705780601f1061114557610100808354040283529160200191611170565b820191906000526020600020905b81548152906001019060200180831161115357829003601f168201915b5050505050815260200160098201805461118990614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546111b590614dfb565b80156112025780601f106111d757610100808354040283529160200191611202565b820191906000526020600020905b8154815290600101906020018083116111e557829003601f168201915b505050918352505060408051606081019182905260209092019190600a84019060039082845b8154815260200190600101908083116112285750505091835250506040805160608082018352600d85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855160808082018852600e8a015480851615158352838104851615159783019790975293860483161515818801526301000000909504821615158585015294860193909352600f909501548083161515918501919091529190910416151591015283518490849081106112fb576112fb614de5565b6020026020010181905250818061131190614e4c565b9250505b8061131f81614e4c565b915050610cbf565b50909392505050565b60006001828154811061134557611345614de5565b600091825260209091206007601090920201015460ff1692915050565b606060006003836040516113769190614e67565b90815260200160405180910390205467ffffffffffffffff81111561139d5761139d6145e7565b6040519080825280602002602001820160405280156113d657816020015b6113c361416d565b8152602001906001900390816113bb5790505b5090506000805b6001548110156113275760018082815481106113fb576113fb614de5565b600091825260209091206007601090920201015460ff166004811115611423576114236143b8565b14801561149e57508460405160200161143c9190614e67565b604051602081830303815290604052805190602001206001828154811061146557611465614de5565b90600052602060002090601002016008016040516020016114869190614e83565b60405160208183030381529060405280519060200120145b15611a3357600181815481106114b6576114b6614de5565b9060005260206000209060100201604051806101c0016040529081600082015481526020016001820180546114ea90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461151690614dfb565b80156115635780601f1061153857610100808354040283529160200191611563565b820191906000526020600020905b81548152906001019060200180831161154657829003601f168201915b5050505050815260200160028201805461157c90614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546115a890614dfb565b80156115f55780601f106115ca576101008083540402835291602001916115f5565b820191906000526020600020905b8154815290600101906020018083116115d857829003601f168201915b5050505050815260200160038201805461160e90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461163a90614dfb565b80156116875780601f1061165c57610100808354040283529160200191611687565b820191906000526020600020905b81548152906001019060200180831161166a57829003601f168201915b50505050508152602001600482016040518060400160405290816000820180546116b090614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546116dc90614dfb565b80156117295780601f106116fe57610100808354040283529160200191611729565b820191906000526020600020905b81548152906001019060200180831161170c57829003601f168201915b50505050508152602001600182015481525050815260200160068201805461175090614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461177c90614dfb565b80156117c95780601f1061179e576101008083540402835291602001916117c9565b820191906000526020600020905b8154815290600101906020018083116117ac57829003601f168201915b5050509183525050600782015460209091019060ff1660048111156117f0576117f06143b8565b6004811115611801576118016143b8565b815260200160088201805461181590614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461184190614dfb565b801561188e5780601f106118635761010080835404028352916020019161188e565b820191906000526020600020905b81548152906001019060200180831161187157829003601f168201915b505050505081526020016009820180546118a790614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546118d390614dfb565b80156119205780601f106118f557610100808354040283529160200191611920565b820191906000526020600020905b81548152906001019060200180831161190357829003601f168201915b505050918352505060408051606081019182905260209092019190600a84019060039082845b8154815260200190600101908083116119465750505091835250506040805160608082018352600d85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855160808082018852600e8a015480851615158352838104851615159783019790975293860483161515818801526301000000909504821615158585015294860193909352600f90950154808316151591850191909152919091041615159101528351849084908110611a1957611a19614de5565b60200260200101819052508180611a2f90614e4c565b9250505b80611a3d81614e4c565b9150506113dd565b611a4d61416d565b60018281548110611a6057611a60614de5565b9060005260206000209060100201604051806101c001604052908160008201548152602001600182018054611a9490614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611ac090614dfb565b8015611b0d5780601f10611ae257610100808354040283529160200191611b0d565b820191906000526020600020905b815481529060010190602001808311611af057829003601f168201915b50505050508152602001600282018054611b2690614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5290614dfb565b8015611b9f5780601f10611b7457610100808354040283529160200191611b9f565b820191906000526020600020905b815481529060010190602001808311611b8257829003601f168201915b50505050508152602001600382018054611bb890614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611be490614dfb565b8015611c315780601f10611c0657610100808354040283529160200191611c31565b820191906000526020600020905b815481529060010190602001808311611c1457829003601f168201915b5050505050815260200160048201604051806040016040529081600082018054611c5a90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611c8690614dfb565b8015611cd35780601f10611ca857610100808354040283529160200191611cd3565b820191906000526020600020905b815481529060010190602001808311611cb657829003601f168201915b505050505081526020016001820154815250508152602001600682018054611cfa90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611d2690614dfb565b8015611d735780601f10611d4857610100808354040283529160200191611d73565b820191906000526020600020905b815481529060010190602001808311611d5657829003601f168201915b5050509183525050600782015460209091019060ff166004811115611d9a57611d9a6143b8565b6004811115611dab57611dab6143b8565b8152602001600882018054611dbf90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611deb90614dfb565b8015611e385780601f10611e0d57610100808354040283529160200191611e38565b820191906000526020600020905b815481529060010190602001808311611e1b57829003601f168201915b50505050508152602001600982018054611e5190614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054611e7d90614dfb565b8015611eca5780601f10611e9f57610100808354040283529160200191611eca565b820191906000526020600020905b815481529060010190602001808311611ead57829003601f168201915b505050918352505060408051606081019182905260209092019190600a84019060039082845b815481526020019060010190808311611ef05750505091835250506040805160608082018352600d85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855160808082018852600e8a015480851615158352838104851615159783019790975293860483161515818801526301000000909504821615158585015294860193909352600f909501548083161515918501919091529190910416151591015292915050565b60005460405163179dea8360e31b8152600481018390526060916001600160a01b03169063bcef54189060240160006040518083038186803b158015611ffa57600080fd5b505afa15801561200e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526120369190810190614f2b565b92915050565b426001828154811061205057612050614de5565b9060005260206000209060100201600a0160026003811061207357612073614de5565b01541161229a57600180828154811061208e5761208e614de5565b600091825260209091206007601090920201015460ff1660048111156120b6576120b66143b8565b14156121d157600280549060006120cc83615018565b91905055506003600182815481106120e6576120e6614de5565b90600052602060002090601002016008016040516121049190614e83565b908152604051908190036020019020805490600061212183615018565b919050555060046001828154811061213b5761213b614de5565b90600052602060002090601002016009016040516121599190614e83565b908152604051908190036020019020805490600061217683615018565b919050555060056001828154811061219057612190614de5565b90600052602060002090601002016002016040516121ae9190614e83565b90815260405190819003602001902080549060006121cb83615018565b91905055505b6004600182815481106121e6576121e6614de5565b60009182526020909120600760109092020101805460ff19166001836004811115612213576122136143b8565b02179055507f8fdec0edc19a1eb9147642be05b326b7f5d42bf96f5ba734530bfca33bc8d7e96001828154811061224c5761224c614de5565b90600052602060002090601002016008016001838154811061227057612270614de5565b906000526020600020906010020160090183604051612291939291906150a6565b60405180910390a15b50565b600060018c815481106122b2576122b2614de5565b90600052602060002090601002019050866040516020016122d39190614e67565b6040516020818303038152906040528051906020012060018d815481106122fc576122fc614de5565b906000526020600020906010020160080160405160200161231d9190614e83565b60405160208183030381529060405280519060200120146123ab5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79207468652070726f7669646572206f6620746869732061677265656d60448201527f656e742063616e207570646174652e000000000000000000000000000000000060648201526084015b60405180910390fd5b6001600782015460ff1660048111156123c6576123c66143b8565b14156126f55787516123e190600683019060208b0190614236565b50600a810160000154856000815181106123fd576123fd614de5565b602002602001015110156124635760405162461bcd60e51b815260206004820152602760248201527f53746172742064617465206d757374206265206166746572206372656174696f60448201526637103230ba329760c91b60648201526084016123a2565b8460008151811061247657612476614de5565b60200260200101518560018151811061249157612491614de5565b6020026020010151116124f15760405162461bcd60e51b815260206004820152602260248201527f456e642064617465206d75737420626520616674657220737461727420646174604482015261329760f11b60648201526084016123a2565b8460008151811061250457612504614de5565b602002602001015181600a0160016003811061252257612522614de5565b015584518590600190811061253957612539614de5565b602002602001015181600a0160026003811061255757612557614de5565b01558351600d820180546020808801516040808a015161ffff1994851696151561ff00199081169790971761010093151584021762ff00001916620100009115158202179095558851600e88018054948b0151928b015160608c015195909616911515909716179015159091021763ffff0000191691151590920263ff000000191617630100000091151591909102179055600f8101805460ff19908116841515179091556007820180546002921660018302179055506002805490600061261e83615018565b91905055506003876040516126339190614e67565b908152604051908190036020019020805490600061265083615018565b91905055506004866040516126659190614e67565b908152604051908190036020019020805490600061268283615018565b919050555060058a6040516126979190614e67565b90815260405190819003602001902080549060006126b483615018565b91905055507fe45a4efc7be91ee38226641b8dfb0a53e062696831d4052b7b79903b7d39301187878e6040516126ec93929190614ef5565b60405180910390a15b505050505050505050505050565b806040516020016127149190614e67565b604051602081830303815290604052805190602001206001838154811061273d5761273d614de5565b906000526020600020906010020160090160405160200161275e9190614e83565b60405160208183030381529060405280519060200120146127e75760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c792074686520636f6e73756d6572206f6620746869732061677265656d60448201527f656e742063616e207369676e2e0000000000000000000000000000000000000060648201526084016123a2565b60018083815481106127fb576127fb614de5565b9060005260206000209060100201600f0160016101000a81548160ff02191690831515021790555060006001838154811061283857612838614de5565b9060005260206000209060100201600801805461285490614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461288090614dfb565b80156128cd5780601f106128a2576101008083540402835291602001916128cd565b820191906000526020600020905b8154815290600101906020018083116128b057829003601f168201915b5050505050905042600184815481106128e8576128e8614de5565b9060005260206000209060100201600a0160026003811061290b5761290b614de5565b015410612945577faf3cbb721f27933bb22b42ea3324fba0c7cf12a6fc685cbf705ba7674aaad1b28183856040516105e293929190614ef5565b505050565b61295261416d565b60208181018d9052604082018c9052606082018b90528951608083018051919091528a82015190519091015260a0810188905260e081018790526101008101869052600060c0820181905285518691906129ae576129ae614de5565b60200260200101518161012001516000600381106129ce576129ce614de5565b6020020152610120810151518551869060019081106129ef576129ef614de5565b60200260200101511015612a555760405162461bcd60e51b815260206004820152602760248201527f53746172742064617465206d757374206265206166746572206372656174696f60448201526637103230ba329760c91b60648201526084016123a2565b84600181518110612a6857612a68614de5565b602002602001015185600281518110612a8357612a83614de5565b602002602001015111612ae35760405162461bcd60e51b815260206004820152602260248201527f456e642064617465206d75737420626520616674657220737461727420646174604482015261329760f11b60648201526084016123a2565b84600181518110612af657612af6614de5565b6020026020010151816101200151600160038110612b1657612b16614de5565b6020020152845185906002908110612b3057612b30614de5565b6020026020010151816101200151600260038110612b5057612b50614de5565b6020908102919091019190915284516101408301805191151590915285820151815190151590830152604080870151915191151591810191909152845161016084018051911515909152858301518151901515908401528582015181519015159201919091526060808601519151911515910152821515610180830152600180548084528082018255600091909152825160109091027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019182558383015180518594612c42937fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf701920190614236565b5060408201518051612c5e916002840191602090910190614236565b5060608201518051612c7a916003840191602090910190614236565b506080820151805180516004840191612c9891839160200190614236565b5060209182015160019091015560a08301518051612cbc9260068501920190614236565b5060c082015160078201805460ff19166001836004811115612ce057612ce06143b8565b021790555060e08201518051612d00916008840191602090910190614236565b506101008201518051612d1d916009840191602090910190614236565b50610120820151612d3490600a83019060036142ba565b506101408201518051600d8301805460208085015160409586015115156201000090810262ff00001992151561010090810261ff0019981515891661ffff19978816171793909316179094556101608801518051600e890180549483015198830151606090930151151563010000000263ff000000199315159097029290921663ffff000019981515840291151588169486169490941717969096169190911792909217909355610180850151600f90940180546101a09096015115159091029315159091169390911692909217179055600180547f6435418332f1be3deea10416eedb87e64daa2a2b4a284b051f39244cc3a0dfa69189918991612e38916150cb565b6040516126ec93929190614ef5565b60018181548110612e5757600080fd5b60009182526020909120601090910201805460018201805491935090612e7c90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054612ea890614dfb565b8015612ef55780601f10612eca57610100808354040283529160200191612ef5565b820191906000526020600020905b815481529060010190602001808311612ed857829003601f168201915b505050505090806002018054612f0a90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054612f3690614dfb565b8015612f835780601f10612f5857610100808354040283529160200191612f83565b820191906000526020600020905b815481529060010190602001808311612f6657829003601f168201915b505050505090806003018054612f9890614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054612fc490614dfb565b80156130115780601f10612fe657610100808354040283529160200191613011565b820191906000526020600020905b815481529060010190602001808311612ff457829003601f168201915b5050505050908060040160405180604001604052908160008201805461303690614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461306290614dfb565b80156130af5780601f10613084576101008083540402835291602001916130af565b820191906000526020600020905b81548152906001019060200180831161309257829003601f168201915b50505050508152602001600182015481525050908060060180546130d290614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546130fe90614dfb565b801561314b5780601f106131205761010080835404028352916020019161314b565b820191906000526020600020905b81548152906001019060200180831161312e57829003601f168201915b5050506007840154600885018054949560ff90921694919350915061316f90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461319b90614dfb565b80156131e85780601f106131bd576101008083540402835291602001916131e8565b820191906000526020600020905b8154815290600101906020018083116131cb57829003601f168201915b5050505050908060090180546131fd90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461322990614dfb565b80156132765780601f1061324b57610100808354040283529160200191613276565b820191906000526020600020905b81548152906001019060200180831161325957829003601f168201915b50506040805160608082018352600d88015460ff8082161515845261010080830482161515602080870191909152620100009384900483161515868801528651608081018852600e8d0154808516151582528381048516151592820192909252938104831615159684019690965263010000009095048116151592820192909252600f909801549697919691955081811694509190041690508d565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561389d5783829060005260206000209060100201604051806101c00160405290816000820154815260200160018201805461337490614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546133a090614dfb565b80156133ed5780601f106133c2576101008083540402835291602001916133ed565b820191906000526020600020905b8154815290600101906020018083116133d057829003601f168201915b5050505050815260200160028201805461340690614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461343290614dfb565b801561347f5780601f106134545761010080835404028352916020019161347f565b820191906000526020600020905b81548152906001019060200180831161346257829003601f168201915b5050505050815260200160038201805461349890614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546134c490614dfb565b80156135115780601f106134e657610100808354040283529160200191613511565b820191906000526020600020905b8154815290600101906020018083116134f457829003601f168201915b505050505081526020016004820160405180604001604052908160008201805461353a90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461356690614dfb565b80156135b35780601f10613588576101008083540402835291602001916135b3565b820191906000526020600020905b81548152906001019060200180831161359657829003601f168201915b5050505050815260200160018201548152505081526020016006820180546135da90614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461360690614dfb565b80156136535780601f1061362857610100808354040283529160200191613653565b820191906000526020600020905b81548152906001019060200180831161363657829003601f168201915b5050509183525050600782015460209091019060ff16600481111561367a5761367a6143b8565b600481111561368b5761368b6143b8565b815260200160088201805461369f90614dfb565b80601f01602080910402602001604051908101604052809291908181526020018280546136cb90614dfb565b80156137185780601f106136ed57610100808354040283529160200191613718565b820191906000526020600020905b8154815290600101906020018083116136fb57829003601f168201915b5050505050815260200160098201805461373190614dfb565b80601f016020809104026020016040519081016040528092919081815260200182805461375d90614dfb565b80156137aa5780601f1061377f576101008083540402835291602001916137aa565b820191906000526020600020905b81548152906001019060200180831161378d57829003601f168201915b505050918352505060408051606081019182905260209092019190600a84019060039082845b8154815260200190600101908083116137d05750505091835250506040805160608082018352600d85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855160808082018852600e8a015480851615158352838104851615158389015294850484161515828901526301000000909404831615158186015295870195909552600f9096015480871615159286019290925292900490931615159101529082526001929092019101613336565b50505050905090565b606060006004836040516138ba9190614e67565b90815260200160405180910390205467ffffffffffffffff8111156138e1576138e16145e7565b60405190808252806020026020018201604052801561391a57816020015b61390761416d565b8152602001906001900390816138ff5790505b5090506000805b60015481101561132757600180828154811061393f5761393f614de5565b600091825260209091206007601090920201015460ff166004811115613967576139676143b8565b1480156139e25750846040516020016139809190614e67565b60405160208183030381529060405280519060200120600182815481106139a9576139a9614de5565b90600052602060002090601002016009016040516020016139ca9190614e83565b60405160208183030381529060405280519060200120145b15613f7757600181815481106139fa576139fa614de5565b9060005260206000209060100201604051806101c001604052908160008201548152602001600182018054613a2e90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613a5a90614dfb565b8015613aa75780601f10613a7c57610100808354040283529160200191613aa7565b820191906000526020600020905b815481529060010190602001808311613a8a57829003601f168201915b50505050508152602001600282018054613ac090614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613aec90614dfb565b8015613b395780601f10613b0e57610100808354040283529160200191613b39565b820191906000526020600020905b815481529060010190602001808311613b1c57829003601f168201915b50505050508152602001600382018054613b5290614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613b7e90614dfb565b8015613bcb5780601f10613ba057610100808354040283529160200191613bcb565b820191906000526020600020905b815481529060010190602001808311613bae57829003601f168201915b5050505050815260200160048201604051806040016040529081600082018054613bf490614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613c2090614dfb565b8015613c6d5780601f10613c4257610100808354040283529160200191613c6d565b820191906000526020600020905b815481529060010190602001808311613c5057829003601f168201915b505050505081526020016001820154815250508152602001600682018054613c9490614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613cc090614dfb565b8015613d0d5780601f10613ce257610100808354040283529160200191613d0d565b820191906000526020600020905b815481529060010190602001808311613cf057829003601f168201915b5050509183525050600782015460209091019060ff166004811115613d3457613d346143b8565b6004811115613d4557613d456143b8565b8152602001600882018054613d5990614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613d8590614dfb565b8015613dd25780601f10613da757610100808354040283529160200191613dd2565b820191906000526020600020905b815481529060010190602001808311613db557829003601f168201915b50505050508152602001600982018054613deb90614dfb565b80601f0160208091040260200160405190810160405280929190818152602001828054613e1790614dfb565b8015613e645780601f10613e3957610100808354040283529160200191613e64565b820191906000526020600020905b815481529060010190602001808311613e4757829003601f168201915b505050918352505060408051606081019182905260209092019190600a84019060039082845b815481526020019060010190808311613e8a5750505091835250506040805160608082018352600d85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855160808082018852600e8a015480851615158352838104851615159783019790975293860483161515818801526301000000909504821615158585015294860193909352600f90950154808316151591850191909152919091041615159101528351849084908110613f5d57613f5d614de5565b60200260200101819052508180613f7390614e4c565b9250505b80613f8181614e4c565b915050613921565b6000546040517f88a00ec00000000000000000000000000000000000000000000000000000000081526001600160a01b03909116906388a00ec090613fe0908b908b908b908b908b908b908b908b906004016150e2565b600060405180830381600087803b158015613ffa57600080fd5b505af115801561400e573d6000803e3d6000fd5b50506000805460405163179dea8360e31b8152600481018d90529193506001600160a01b0316915063bcef54189060240160006040518083038186803b15801561405757600080fd5b505afa15801561406b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526140939190810190614f2b565b5111156140e2576003600189815481106140af576140af614de5565b60009182526020909120600760109092020101805460ff191660018360048111156140dc576140dc6143b8565b02179055505b7fac46f93b782753aa8893b24ed8cc9e12cdf5a8f392d332bb85a012b8aab4eab76001898154811061411657614116614de5565b906000526020600020906010020160080160018a8154811061413a5761413a614de5565b90600052602060002090601002016009018a60405161415b939291906150a6565b60405180910390a15050505050505050565b604051806101c00160405280600081526020016060815260200160608152602001606081526020016141b2604051806040016040528060608152602001600081525090565b8152606060208201526040016000815260200160608152602001606081526020016141db6142e7565b8152604080516060810182526000808252602082810182905292820152910190815260408051608081018252600080825260208281018290529282018190526060820152910190815260006020820181905260409091015290565b82805461424290614dfb565b90600052602060002090601f01602090048101928261426457600085556142aa565b82601f1061427d57805160ff19168380011785556142aa565b828001600101855582156142aa579182015b828111156142aa57825182559160200191906001019061428f565b506142b6929150614305565b5090565b82600381019282156142aa57916020028201828111156142aa57825182559160200191906001019061428f565b60405180606001604052806003906020820280368337509192915050565b5b808211156142b65760008155600101614306565b60006020828403121561432c57600080fd5b5035919050565b60005b8381101561434e578181015183820152602001614336565b8381111561435d576000848401525b50505050565b6000815180845261437b816020860160208601614333565b601f01601f19169290920160200192915050565b60008151604084526143a46040850182614363565b602093840151949093019390935250919050565b634e487b7160e01b600052602160045260246000fd5b600581106143ec57634e487b7160e01b600052602160045260246000fd5b9052565b8060005b600381101561435d5781518452602093840193909101906001016143f4565b60006102a082518452602083015181602086015261443382860182614363565b9150506040830151848203604086015261444d8282614363565b915050606083015184820360608601526144678282614363565b91505060808301518482036080860152614481828261438f565b91505060a083015184820360a086015261449b8282614363565b91505060c08301516144b060c08601826143ce565b5060e083015184820360e08601526144c88282614363565b91505061010080840151858303828701526144e38382614363565b92505050610120808401516144fa828701826143f0565b505061014083015161018061452b818701838051151582526020808201511515908301526040908101511515910152565b610160850151805115156101e088015260208101511515610200880152604081015115156102208801526060015115156102408701528401511515610260860152506101a090920151151561028090930192909252919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156145da57603f198886030184526145c8858351614413565b945092850192908501906001016145ac565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715614626576146266145e7565b604052919050565b600067ffffffffffffffff821115614648576146486145e7565b50601f01601f191660200190565b600082601f83011261466757600080fd5b813561467a6146758261462e565b6145fd565b81815284602083860101111561468f57600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156146be57600080fd5b813567ffffffffffffffff8111156146d557600080fd5b6146e184828501614656565b949350505050565b6020810161203682846143ce565b60208152600061470a6020830184614413565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156145da57603f19888603018452614754858351614363565b94509285019290850190600101614738565b600067ffffffffffffffff821115614780576147806145e7565b5060051b60200190565b600082601f83011261479b57600080fd5b813560206147ab61467583614766565b82815260059290921b840181019181810190868411156147ca57600080fd5b8286015b848110156147e557803583529183019183016147ce565b509695505050505050565b8035801515811461480057600080fd5b919050565b60006060828403121561481757600080fd5b6040516060810181811067ffffffffffffffff8211171561483a5761483a6145e7565b604052905080614849836147f0565b8152614857602084016147f0565b6020820152614868604084016147f0565b60408201525092915050565b60006080828403121561488657600080fd5b6040516080810181811067ffffffffffffffff821117156148a9576148a96145e7565b6040529050806148b8836147f0565b81526148c6602084016147f0565b60208201526148d7604084016147f0565b60408201526148e8606084016147f0565b60608201525092915050565b60008060008060008060008060008060006102008c8e03121561491657600080fd5b8b359a5067ffffffffffffffff8060208e0135111561493457600080fd5b6149448e60208f01358f01614656565b9a508060408e0135111561495757600080fd5b6149678e60408f01358f01614656565b99508060608e0135111561497a57600080fd5b61498a8e60608f01358f01614656565b98508060808e0135111561499d57600080fd5b6149ad8e60808f01358f01614656565b97508060a08e013511156149c057600080fd5b6149d08e60a08f01358f01614656565b96508060c08e013511156149e357600080fd5b6149f38e60c08f01358f01614656565b95508060e08e01351115614a0657600080fd5b50614a178d60e08e01358e0161478a565b9350614a278d6101008e01614805565b9250614a378d6101608e01614874565b9150614a466101e08d016147f0565b90509295989b509295989b9093969950565b60008060408385031215614a6b57600080fd5b82359150602083013567ffffffffffffffff811115614a8957600080fd5b614a9585828601614656565b9150509250929050565b600060408284031215614ab157600080fd5b6040516040810167ffffffffffffffff8282108183111715614ad557614ad56145e7565b816040528293508435915080821115614aed57600080fd5b50614afa85828601614656565b825250602083013560208201525092915050565b60008060008060008060008060008060006102008c8e031215614b3057600080fd5b67ffffffffffffffff808d351115614b4757600080fd5b614b548e8e358f01614656565b9b508060208e01351115614b6757600080fd5b614b778e60208f01358f01614656565b9a508060408e01351115614b8a57600080fd5b614b9a8e60408f01358f01614656565b99508060608e01351115614bad57600080fd5b61498a8e60608f01358f01614a9f565b8d815261024060208201526000614bd861024083018f614363565b8281036040840152614bea818f614363565b90508281036060840152614bfe818e614363565b90508281036080840152614c12818d61438f565b905082810360a0840152614c26818c614363565b9050614c3560c084018b6143ce565b82810360e0840152614c47818a614363565b9050828103610100840152614c5c8189614363565b8751151561012085015260208801511515610140850152604088015115156101608501529150614c899050565b84511515610180830152602085015115156101a0830152604085015115156101c083015260609094015115156101e08201529115156102008301521515610220909101529a9950505050505050505050565b600080600080600080600080610100898b031215614cf857600080fd5b88359750602089013567ffffffffffffffff80821115614d1757600080fd5b614d238c838d01614656565b985060408b0135915080821115614d3957600080fd5b614d458c838d01614656565b975060608b0135915080821115614d5b57600080fd5b614d678c838d01614656565b965060808b0135915080821115614d7d57600080fd5b614d898c838d01614656565b955060a08b0135945060c08b0135915080821115614da657600080fd5b614db28c838d01614656565b935060e08b0135915080821115614dc857600080fd5b50614dd58b828c01614656565b9150509295985092959890939650565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680614e0f57607f821691505b60208210811415614e3057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415614e6057614e60614e36565b5060010190565b60008251614e79818460208701614333565b9190910192915050565b6000808354614e9181614dfb565b60018281168015614ea95760018114614eba57614ee9565b60ff19841687528287019450614ee9565b8760005260208060002060005b85811015614ee05781548a820152908401908201614ec7565b50505082870194505b50929695505050505050565b606081526000614f086060830186614363565b8281036020840152614f1a8186614363565b915050826040830152949350505050565b60006020808385031215614f3e57600080fd5b825167ffffffffffffffff80821115614f5657600080fd5b818501915085601f830112614f6a57600080fd5b8151614f7861467582614766565b81815260059190911b83018401908481019088831115614f9757600080fd5b8585015b8381101561500b57805185811115614fb35760008081fd5b8601603f81018b13614fc55760008081fd5b878101516040614fd76146758361462e565b8281528d82848601011115614fec5760008081fd5b614ffb838c8301848701614333565b8652505050918601918601614f9b565b5098975050505050505050565b60008161502757615027614e36565b506000190190565b6000815461503c81614dfb565b808552602060018381168015615059576001811461506d5761509b565b60ff1985168884015260408801955061509b565b866000528260002060005b858110156150935781548a8201860152908301908401615078565b890184019650505b505050505092915050565b6060815260006150b9606083018661502f565b8281036020840152614f1a818661502f565b6000828210156150dd576150dd614e36565b500390565b60006101008a83528060208401526150fc8184018b614363565b90508281036040840152615110818a614363565b905082810360608401526151248189614363565b905082810360808401526151388188614363565b90508560a084015282810360c08401526151528186614363565b905082810360e08401526151668185614363565b9b9a505050505050505050505056fea26469706673582212207def19dad91fe06f4c41d737f74b422195f88f5e66d1bdf10f65a3a184708b2b64736f6c63430008090033608060405234801561001057600080fd5b50610c2c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630af3b7561461005157806388a00ec01461007a578063b995bb951461008f578063bcef5418146100b0575b600080fd5b61006461005f36600461085c565b6100d0565b60405161007191906108da565b60405180910390f35b61008d610088366004610997565b610189565b005b6100a261009d366004610aa1565b61042e565b604051610071929190610ad0565b6100c36100be366004610aa1565b6104d7565b6040516100719190610b0f565b600160205281600052604060002081815481106100ec57600080fd5b9060005260206000200160009150915050805461010890610b71565b80601f016020809104026020016040519081016040528092919081815260200182805461013490610b71565b80156101815780601f1061015657610100808354040283529160200191610181565b820191906000526020600020905b81548152906001019060200180831161016457829003601f168201915b505050505081565b6101c96040518060e00160405280606081526020016060815260200160608152602001606081526020016000815260200160608152602001606081525090565b87815260208082018890526040808301889052606083018790526080830186905260a0830185905260c083018490525161022791017f636f6d706c657465640000000000000000000000000000000000000000000000815260090190565b6040516020818303038152906040528051906020012081604001516040516020016102529190610bac565b60405160208183030381529060405280519060200120141561028a5760008981526001602052604081206102859161074b565b610423565b6040517f6e6f74436f6d706c6574656400000000000000000000000000000000000000006020820152602c016040516020818303038152906040528051906020012081604001516040516020016102e19190610bac565b6040516020818303038152906040528051906020012014156103165761030d8960018360c001516105c3565b6102858961063a565b6040517f6163636570746564000000000000000000000000000000000000000000000000602082015260280160405160208183030381529060405280519060200120816040015160405160200161036d9190610bac565b6040516020818303038152906040528051906020012014156103995761030d8960018360c001516105c3565b6040517f64656e696564000000000000000000000000000000000000000000000000000060208201526026016040516020818303038152906040528051906020012081604001516040516020016103f09190610bac565b6040516020818303038152906040528051906020012014156104235760008981526001602052604081206104239161074b565b505050505050505050565b6000602081905290815260409020805460018201805460ff909216929161045490610b71565b80601f016020809104026020016040519081016040528092919081815260200182805461048090610b71565b80156104cd5780601f106104a2576101008083540402835291602001916104cd565b820191906000526020600020905b8154815290600101906020018083116104b057829003601f168201915b5050505050905082565b606060016000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156105b857838290600052602060002001805461052b90610b71565b80601f016020809104026020016040519081016040528092919081815260200182805461055790610b71565b80156105a45780601f10610579576101008083540402835291602001916105a4565b820191906000526020600020905b81548152906001019060200180831161058757829003601f168201915b50505050508152602001906001019061050c565b505050509050919050565b60405180604001604052808360038111156105e0576105e0610aba565b815260209081018390526000858152908190526040902081518154829060ff1916600183600381111561061557610615610aba565b02179055506020828101518051610632926001850192019061076c565b505050505050565b600081815260016020818152604080842080549384018155845292819020835180850190945260098085527f5465726d696e61746500000000000000000000000000000000000000000000009490920193845261069a939201919061076c565b50600081815260016020818152604080842080549384018155845292819020835180850190945260198085527f4e65775472616e66657244617465466f7250726f766964657200000000000000949092019384526106fb939201919061076c565b506000818152600160208181526040808420805493840181558452818420815160608101909252602e808352930193929091610bc990830139805161074793925060209091019061076c565b5050565b508054600082559060005260206000209081019061076991906107f0565b50565b82805461077890610b71565b90600052602060002090601f01602090048101928261079a57600085556107e0565b82601f106107b357805160ff19168380011785556107e0565b828001600101855582156107e0579182015b828111156107e05782518255916020019190600101906107c5565b506107ec92915061080d565b5090565b808211156107ec5760006108048282610822565b506001016107f0565b5b808211156107ec576000815560010161080e565b50805461082e90610b71565b6000825580601f1061083e575050565b601f016020900490600052602060002090810190610769919061080d565b6000806040838503121561086f57600080fd5b50508035926020909101359150565b60005b83811015610899578181015183820152602001610881565b838111156108a8576000848401525b50505050565b600081518084526108c681602086016020860161087e565b601f01601f19169290920160200192915050565b6020815260006108ed60208301846108ae565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261091b57600080fd5b813567ffffffffffffffff80821115610936576109366108f4565b604051601f8301601f19908116603f0116810190828211818310171561095e5761095e6108f4565b8160405283815286602085880101111561097757600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600080600080610100898b0312156109b457600080fd5b88359750602089013567ffffffffffffffff808211156109d357600080fd5b6109df8c838d0161090a565b985060408b01359150808211156109f557600080fd5b610a018c838d0161090a565b975060608b0135915080821115610a1757600080fd5b610a238c838d0161090a565b965060808b0135915080821115610a3957600080fd5b610a458c838d0161090a565b955060a08b0135945060c08b0135915080821115610a6257600080fd5b610a6e8c838d0161090a565b935060e08b0135915080821115610a8457600080fd5b50610a918b828c0161090a565b9150509295985092959890939650565b600060208284031215610ab357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600060048410610af057634e487b7160e01b600052602160045260246000fd5b83825260406020830152610b0760408301846108ae565b949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610b6457603f19888603018452610b528583516108ae565b94509285019290850190600101610b36565b5092979650505050505050565b600181811c90821680610b8557607f821691505b60208210811415610ba657634e487b7160e01b600052602260045260246000fd5b50919050565b60008251610bbe81846020870161087e565b919091019291505056fe4e65775472616e66657244617465466f7250726f7669646572416e64526564756374696f6e4f665061796d656e74a264697066735822122032630938826e79d15a1c40f8d88e31c9aaf227b480b806a33fa3cd49c2d3e70564736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 10,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreementViolation",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AgreementViolation)1485"
      },
      {
        "astId": 76,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreements",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_struct(Agreement)51_storage)dyn_storage"
      },
      {
        "astId": 78,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "activeAgreementCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 82,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "providerCount",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      {
        "astId": 86,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "consumerCount",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      },
      {
        "astId": 90,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "consumerPublicKeyCount",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_string_memory_ptr,t_uint256)"
      }
    ],
    "types": {
      "t_array(t_struct(Agreement)51_storage)dyn_storage": {
        "base": "t_struct(Agreement)51_storage",
        "encoding": "dynamic_array",
        "label": "struct DataSharingAgreement.Agreement[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AgreementViolation)1485": {
        "encoding": "inplace",
        "label": "contract AgreementViolation",
        "numberOfBytes": "20"
      },
      "t_enum(State)16": {
        "encoding": "inplace",
        "label": "enum DataSharingAgreement.State",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Agreement)51_storage": {
        "encoding": "inplace",
        "label": "struct DataSharingAgreement.Agreement",
        "members": [
          {
            "astId": 18,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 20,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerPublicKey",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 22,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerPublicKey",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 24,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataExchangeAgreementHash",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 27,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOffering",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(DataOffering)56_storage"
          },
          {
            "astId": 29,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "purpose",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 32,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "state",
            "offset": 0,
            "slot": "7",
            "type": "t_enum(State)16"
          },
          {
            "astId": 34,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerId",
            "offset": 0,
            "slot": "8",
            "type": "t_string_storage"
          },
          {
            "astId": 36,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerId",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 40,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementDates",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)3_storage"
          },
          {
            "astId": 43,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "intendedUse",
            "offset": 0,
            "slot": "13",
            "type": "t_struct(IntendedUse)63_storage"
          },
          {
            "astId": 46,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "licenseGrant",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(LicenseGrant)72_storage"
          },
          {
            "astId": 48,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataStream",
            "offset": 0,
            "slot": "15",
            "type": "t_bool"
          },
          {
            "astId": 50,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "signed",
            "offset": 1,
            "slot": "15",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "512"
      },
      "t_struct(DataOffering)56_storage": {
        "encoding": "inplace",
        "label": "struct DataSharingAgreement.DataOffering",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 55,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingVersion",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(IntendedUse)63_storage": {
        "encoding": "inplace",
        "label": "struct DataSharingAgreement.IntendedUse",
        "members": [
          {
            "astId": 58,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "processData",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 60,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "shareDataWithThirdParty",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 62,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "editData",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(LicenseGrant)72_storage": {
        "encoding": "inplace",
        "label": "struct DataSharingAgreement.LicenseGrant",
        "members": [
          {
            "astId": 65,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "copyData",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 67,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "transferable",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 69,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "exclusiveness",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 71,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "revocable",
            "offset": 3,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}