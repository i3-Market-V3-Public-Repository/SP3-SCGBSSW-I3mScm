{
  "address": "0x4d722c3a1Cec5306710637103495dDd9DFAda905",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "chosenPenalty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newEndDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "AgreeOnPenalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string[3]",
          "name": "penaltyChoices",
          "type": "string[3]"
        }
      ],
      "name": "PenaltyChoices",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "publicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "TerminationProposal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "purpose",
          "type": "string"
        },
        {
          "internalType": "enum State",
          "name": "state",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "paidUp",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "processing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "modifying",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "analyzing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingCopy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "reproducing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "distributing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "loaning",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "selling",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "renting",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "furtherLicensing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "leasing",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "pricingModel",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ViolationType",
              "name": "violationType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "issuerId",
              "type": "string"
            },
            {
              "internalType": "string[3]",
              "name": "penaltyChoices",
              "type": "string[3]"
            }
          ],
          "internalType": "struct Violation",
          "name": "violation",
          "type": "tuple"
        },
        {
          "internalType": "bool",
          "name": "termination",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkActiveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "termination",
              "type": "bool"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        }
      ],
      "name": "checkAgreementsByDataOffering",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "termination",
              "type": "bool"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "internalType": "string[2]",
          "name": "_signatures",
          "type": "string[2]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "_purpose",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "paidUp",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "processing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "modifying",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "analyzing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingCopy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "reproducing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "distributing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "loaning",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "selling",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "renting",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "furtherLicensing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "leasing",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "pricingModel",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_chosenPenalty",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newEndDate",
          "type": "uint256"
        }
      ],
      "name": "enforcePenalty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_proofType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_resolution",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_iat",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_iss",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sub",
          "type": "string"
        }
      ],
      "name": "evaluateSignedResolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "termination",
              "type": "bool"
            }
          ],
          "internalType": "struct Agreement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_consumerPublicKeys",
          "type": "string[]"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "getAgreementsByConsumer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "termination",
              "type": "bool"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_providerPublicKeys",
          "type": "string[]"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "getAgreementsByProvider",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "termination",
              "type": "bool"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgreementsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        }
      ],
      "name": "notifyConsentRevoked",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_publicKey",
          "type": "string"
        }
      ],
      "name": "requestAgreementTermination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        }
      ],
      "name": "retrieveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "termination",
              "type": "bool"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "retrievePricingModel",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x29eb49588e5c0e0a7129bc411ce45d3d3b2975f5ab1de3f4d7cee9641cb3c5ee",
  "receipt": {
    "to": null,
    "from": "0x580d142D0c2958d843499553275e427Da4Ab7Eb5",
    "contractAddress": "0x4d722c3a1Cec5306710637103495dDd9DFAda905",
    "transactionIndex": 0,
    "gasUsed": "4516646",
    "logsBloom": "0x
    "blockHash": "0xaf729142e4536d000d3efa14889ea05505645449aa6be3754d61123716a17992",
    "transactionHash": "0x29eb49588e5c0e0a7129bc411ce45d3d3b2975f5ab1de3f4d7cee9641cb3c5ee",
    "logs": [],
    "blockNumber": 616421,
    "cumulativeGasUsed": "4516646",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "7b4b6dda4242265662469b37d10c2508",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"chosenPenalty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEndDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"AgreeOnPenalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"name\":\"PenaltyChoices\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"publicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"TerminationProposal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkActiveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"}],\"name\":\"checkAgreementsByDataOffering\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"_signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_chosenPenalty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newEndDate\",\"type\":\"uint256\"}],\"name\":\"enforcePenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_resolution\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_iat\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_iss\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sub\",\"type\":\"string\"}],\"name\":\"evaluateSignedResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"internalType\":\"struct Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_consumerPublicKeys\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"getAgreementsByConsumer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_providerPublicKeys\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"getAgreementsByProvider\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgreementsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"}],\"name\":\"notifyConsentRevoked\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_publicKey\",\"type\":\"string\"}],\"name\":\"requestAgreementTermination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"}],\"name\":\"retrieveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"termination\",\"type\":\"bool\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"retrievePricingModel\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Agreement.sol\":\"DataSharingAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/Agreement.sol\":{\"content\":\"// /*\\r\\n\\r\\n// * Copyright (c) Siemens AG, 2020-2022\\r\\n\\r\\n// *\\r\\n\\r\\n// * Authors:\\r\\n\\r\\n// * Susanne Stahnke <susanne.stahnke@siemens.com>,\\r\\n\\r\\n// * Yvonne Kovacs <yvonne.kovacs@siemens.com>\\r\\n\\r\\n// *\\r\\n\\r\\n// * This work is licensed under the terms of Apache 2.0. See\\r\\n\\r\\n// * the LICENSE file in the top-level directory.\\r\\n\\r\\n// */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\n\\r\\nenum State {\\r\\n    Active,\\r\\n    Violated,\\r\\n    Terminated\\r\\n}\\r\\n\\r\\nstruct Agreement {\\r\\n    uint256 agreementId;\\r\\n    string providerPublicKey;\\r\\n    string consumerPublicKey;\\r\\n    string dataExchangeAgreementHash;\\r\\n    string[2] signatures;\\r\\n    DataOffering dataOffering;\\r\\n    string purpose;\\r\\n    State state;\\r\\n    uint256[3] agreementDates;\\r\\n    IntendedUse intendedUse;\\r\\n    LicenseGrant licenseGrant;\\r\\n    TypeOfData typeOfData;\\r\\n    PricingModel pricingModel;\\r\\n    Violation violation;\\r\\n    bool termination;\\r\\n}\\r\\n\\r\\nstruct TypeOfData {\\r\\n    bool dataStream;\\r\\n    bool personalData;\\r\\n}\\r\\n\\r\\nstruct DataOffering {\\r\\n    string dataOfferingId;\\r\\n    uint256 dataOfferingVersion;\\r\\n    string title;\\r\\n}\\r\\n\\r\\nstruct IntendedUse {\\r\\n    bool processData;\\r\\n    bool shareDataWithThirdParty;\\r\\n    bool editData;\\r\\n}\\r\\n\\r\\nstruct LicenseGrant {\\r\\n    bool transferable;\\r\\n    bool exclusiveness;\\r\\n    bool paidUp;\\r\\n    bool revocable;\\r\\n    bool processing;\\r\\n    bool modifying;\\r\\n    bool analyzing;\\r\\n    bool storingData;\\r\\n    bool storingCopy;\\r\\n    bool reproducing;\\r\\n    bool distributing;\\r\\n    bool loaning;\\r\\n    bool selling;\\r\\n    bool renting;\\r\\n    bool furtherLicensing;\\r\\n    bool leasing;\\r\\n}\\r\\n\\r\\nstruct PricingModel {\\r\\n    string paymentType;\\r\\n    uint256 price;\\r\\n    string currency;\\r\\n    uint256 fee;\\r\\n    PaymentOnSubscription paymentOnSubscription;\\r\\n    bool isFree;\\r\\n}\\r\\n\\r\\nstruct PaymentOnSubscription {\\r\\n    string timeDuration;\\r\\n    string repeat;\\r\\n}\\r\\n\\r\\nenum ViolationType {\\r\\n    NotViolated,\\r\\n    PaymentNotCompleted,\\r\\n    DataNotTransferredAsDescribed,\\r\\n    DataNotAsDescribed,\\r\\n    LicenseViolated\\r\\n}\\r\\n\\r\\nstruct Violation {\\r\\n    ViolationType violationType;\\r\\n    string issuerId;\\r\\n    string[3] penaltyChoices;\\r\\n}\\r\\n\\r\\nstruct Counter {\\r\\n    uint256 activeAgreementCount;\\r\\n    mapping (string => uint) providerCount;\\r\\n    mapping (string => uint) providerActiveCount;\\r\\n    mapping (string => uint) consumerCount;\\r\\n    mapping (string => uint) consumerActiveCount;\\r\\n    mapping (string => uint) dataOfferingCount;\\r\\n}\\r\\n\\r\\nstruct SignedResolution {\\r\\n    string proofType;\\r\\n    string resolutionType;\\r\\n    string resolution;\\r\\n    string dataExchangeId;\\r\\n    uint256 iat;\\r\\n    string iss;\\r\\n    string sub;\\r\\n}\\r\\n\\r\\nlibrary AgreementViolationLibrary {\\r\\n\\r\\n    function evaluateResolution(\\r\\n        Agreement storage agreement,\\r\\n        string memory _proofType,\\r\\n        string memory _type,\\r\\n        string memory _resolution,\\r\\n        string memory _dataExchangeId,\\r\\n        uint256 _iat,\\r\\n        string memory _iss,\\r\\n        string memory _sub,\\r\\n        Counter storage counter) public {\\r\\n\\r\\n        SignedResolution memory signedResolution;\\r\\n        signedResolution.proofType = _proofType;\\r\\n        signedResolution.resolutionType = _type;\\r\\n        signedResolution.resolution = _resolution;\\r\\n        signedResolution.dataExchangeId = _dataExchangeId;\\r\\n        signedResolution.iat = _iat;\\r\\n        signedResolution.iss = _iss;   \\r\\n        signedResolution.sub = _sub;\\r\\n\\r\\n        if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"completed\\\"))){\\r\\n            delete agreement.violation.penaltyChoices;   \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"notCompleted\\\"))) { \\r\\n                issueViolation(agreement, ViolationType.DataNotTransferredAsDescribed, signedResolution.sub); \\r\\n                agreement.state = State.Violated; \\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerActiveCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n                \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"accepted\\\"))){ \\r\\n                issueViolation(agreement, ViolationType.DataNotTransferredAsDescribed, signedResolution.sub); \\r\\n                agreement.state = State.Violated; \\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerActiveCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n             }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"denied\\\"))){\\r\\n                delete agreement.violation.penaltyChoices;  \\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function issueViolation(Agreement storage agreement, ViolationType _violationType, string memory _issuerId) private {\\r\\n        agreement.violation = Violation(_violationType, _issuerId, [\\\"Terminate\\\", \\\"NewEndDateForAgreement\\\", \\\"NewEndDateForAgreementAndReductionOfPayment\\\"]);\\r\\n    }\\r\\n\\r\\n     function getViolation(Agreement storage agreement) public view returns (Violation memory){\\r\\n        return agreement.violation;\\r\\n    }\\r\\n   \\r\\n    function enforcePenalty (Agreement storage agreement, string memory _chosenPenalty, uint256 _price, uint256 _fee,\\r\\n                             uint256 _newEndDate, Counter storage counter) public {\\r\\n\\r\\n        if(agreement.violation.violationType == ViolationType.DataNotTransferredAsDescribed){\\r\\n                if (keccak256(abi.encodePacked(_chosenPenalty)) == \\\"NewEndDateForAgreement\\\"){\\r\\n                    require(_newEndDate > block.timestamp, \\\"New end date must be after current date\\\");\\r\\n                    agreement.agreementDates[2] = _newEndDate;\\r\\n                }\\r\\n                else if (keccak256(abi.encodePacked(_chosenPenalty)) == (keccak256(abi.encodePacked(\\\"NewEndDateForAgreementAndReductionOfPayment\\\")))){\\r\\n                    require(_newEndDate > block.timestamp, \\\"New end date must be after current date.\\\");\\r\\n                    agreement.agreementDates[2] = _newEndDate;\\r\\n                    agreement.pricingModel.price = _price;\\r\\n                    agreement.pricingModel.fee = _fee;\\r\\n                }\\r\\n            agreement.state = State.Active;\\r\\n            counter.activeAgreementCount++;\\r\\n            counter.providerActiveCount[agreement.providerPublicKey]++;\\r\\n            counter.consumerActiveCount[agreement.consumerPublicKey]++; \\r\\n        }    \\r\\n    }\\r\\n}\\r\\n    \\r\\nlibrary AgreementLib {\\r\\n\\r\\n    function createAgreement(\\r\\n        string memory _providerPublicKey,\\r\\n        string memory _consumerPublicKey,\\r\\n        string memory _dataExchangeAgreementHash,\\r\\n        string[2] memory _signatures,\\r\\n        DataOffering memory dataOffering,\\r\\n        string memory _purpose,\\r\\n        uint256[] memory dates,\\r\\n        IntendedUse memory intendedUse,\\r\\n        LicenseGrant memory licenseGrant,\\r\\n        PricingModel memory pricingModel,\\r\\n        TypeOfData memory typeOfData,\\r\\n        Counter storage counter\\r\\n    ) internal returns (Agreement memory agreement)\\r\\n    {\\r\\n        agreement.providerPublicKey = _providerPublicKey;\\r\\n        agreement.consumerPublicKey = _consumerPublicKey;\\r\\n        agreement.dataExchangeAgreementHash = _dataExchangeAgreementHash;\\r\\n        agreement.signatures = _signatures;\\r\\n        agreement.dataOffering.dataOfferingId = dataOffering.dataOfferingId;\\r\\n        agreement.dataOffering.dataOfferingVersion = dataOffering.dataOfferingVersion;\\r\\n        agreement.dataOffering.title = dataOffering.title;\\r\\n        agreement.purpose = _purpose;\\r\\n\\r\\n        agreement.state = State.Active;\\r\\n        agreement.agreementDates[0] = dates[0];\\r\\n        agreement.agreementDates[1] = dates[1];\\r\\n\\r\\n        require(\\r\\n            dates[1] >= agreement.agreementDates[0],\\r\\n            \\\"Start date must be after creation date.\\\"\\r\\n        );\\r\\n        require(dates[2] > dates[1], \\\"End date must be after start date.\\\");\\r\\n        agreement.agreementDates[2] = dates[2];\\r\\n        agreement.intendedUse = intendedUse;\\r\\n        agreement.licenseGrant = licenseGrant;\\r\\n        agreement.pricingModel = pricingModel;\\r\\n\\r\\n        agreement.typeOfData.dataStream = typeOfData.dataStream;\\r\\n        agreement.typeOfData.personalData = typeOfData.personalData;\\r\\n       \\r\\n        counter.activeAgreementCount++;\\r\\n        counter.providerCount[_providerPublicKey]++;\\r\\n        counter.consumerCount[_consumerPublicKey]++; \\r\\n        counter.providerActiveCount[_providerPublicKey]++;\\r\\n        counter.consumerActiveCount[_consumerPublicKey]++; \\r\\n        counter.dataOfferingCount[dataOffering.dataOfferingId]++;\\r\\n    \\r\\n    }\\r\\n\\r\\n    function terminateAgreement(Agreement storage agreement, Counter storage counter) public {\\r\\n        if(agreement.agreementDates[2]<=block.timestamp || agreement.termination){ \\r\\n            if(agreement.state == State.Active){\\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerActiveCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n            }     \\r\\n            agreement.state = State.Terminated;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary GetAgreementsLibrary {\\r\\n     function getAgreementsByConsumer(Agreement[] storage agreements, string[] memory _consumerPublicKeys, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        uint256 k = 0;\\r\\n        uint256 length = 0;\\r\\n        Agreement[] memory consumerAgreements;\\r\\n        if(active) {\\r\\n            for(uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                length += counter.consumerActiveCount[_consumerPublicKeys[j]];\\r\\n            consumerAgreements = new Agreement[](length); \\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                     if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKeys[j]))){\\r\\n                        console.log(i);\\r\\n                        consumerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }  \\r\\n        }\\r\\n        else {\\r\\n            for(uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                length += counter.consumerCount[_consumerPublicKeys[j]];\\r\\n            consumerAgreements = new Agreement[](length);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                     if (keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKeys[j]))){\\r\\n                        consumerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }\\r\\n        }\\r\\n        return consumerAgreements;\\r\\n    }\\r\\n\\r\\n    function getAgreementsByProvider(Agreement[] storage agreements, string[] memory _providerPublicKeys, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        uint256 k = 0;\\r\\n        uint256 length = 0;\\r\\n        Agreement[] memory providerAgreements;\\r\\n        if(active) {\\r\\n            for(uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                length += counter.providerActiveCount[_providerPublicKeys[j]];\\r\\n            providerAgreements = new Agreement[](length); \\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                     if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKeys[j]))){\\r\\n                        console.log(i);\\r\\n                        providerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }  \\r\\n        }\\r\\n        else {\\r\\n            for(uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                length += counter.providerCount[_providerPublicKeys[j]];\\r\\n            providerAgreements = new Agreement[](length);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                     if (keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKeys[j]))){\\r\\n                        providerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }\\r\\n        }\\r\\n        return providerAgreements;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary RetrieveAgreementsLibrary {\\r\\n\\r\\n    function checkActiveAgreements (Agreement[] storage agreements, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = new Agreement[](counter.activeAgreementCount); \\r\\n        uint k = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if(agreements[i].state == State.Active) {   \\r\\n                activeAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return activeAgreements;\\r\\n    }\\r\\n    \\r\\n    // function checkAgreementsByConsumer(Agreement[] storage agreements, string memory _consumerPublicKey, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n    //     uint256 k = 0;\\r\\n    //     Agreement[] memory consumerAgreements;\\r\\n    //     if(active) {\\r\\n    //         consumerAgreements = new Agreement[](counter.consumerActiveCount[_consumerPublicKey]); \\r\\n    //         for (uint i = 0; i < agreements.length; i++)\\r\\n    //             if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))){\\r\\n    //                 consumerAgreements[k++] = agreements[i];\\r\\n    //             }  \\r\\n    //     }\\r\\n    //     else {\\r\\n    //         consumerAgreements = new Agreement[](counter.consumerCount[_consumerPublicKey]);\\r\\n    //         for (uint i = 0; i < agreements.length; i++)\\r\\n    //             if (keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))){\\r\\n    //                 consumerAgreements[k++] = agreements[i];\\r\\n    //             }\\r\\n    //     }\\r\\n    //     return consumerAgreements;\\r\\n    // }\\r\\n\\r\\n    // function checkAgreementsByProvider (Agreement[] storage agreements, string memory _providerPublicKey, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n    //     uint256 k = 0;\\r\\n    //     Agreement[] memory providerAgreements;\\r\\n    //     if(active) {\\r\\n    //         providerAgreements = new Agreement[](counter.providerActiveCount[_providerPublicKey]);\\r\\n    //         for (uint i = 0; i < agreements.length; i++)\\r\\n    //             if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKey))){\\r\\n    //                 providerAgreements[k++] = agreements[i];\\r\\n    //             }  \\r\\n    //     }\\r\\n    //     else {\\r\\n    //         providerAgreements = new Agreement[](counter.providerCount[_providerPublicKey]);\\r\\n    //         for (uint i = 0; i < agreements.length; i++)\\r\\n    //             if (keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKey))){\\r\\n    //                 providerAgreements[k++] = agreements[i];\\r\\n    //             }\\r\\n    //     }\\r\\n    //     return providerAgreements;\\r\\n    // }\\r\\n\\r\\n\\r\\n    function checkAgreementsByDataOffering (Agreement[] storage agreements, string memory _dataOffering, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory dataOfferingAgreements = new Agreement[](counter.dataOfferingCount[_dataOffering]);\\r\\n        uint k = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (keccak256(abi.encodePacked(agreements[i].dataOffering.dataOfferingId)) == keccak256(abi.encodePacked(_dataOffering))) {\\r\\n                dataOfferingAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return dataOfferingAgreements;\\r\\n    }\\r\\n\\r\\n      \\r\\n    function retrieveAgreements (Agreement[] storage agreements, string memory _consumerPublicKey, Counter storage counter) external view returns (Agreement[] memory, uint256 k) {\\r\\n\\r\\n        Agreement[] memory consumerPublicKeyAgreements = new Agreement[](counter.consumerActiveCount[_consumerPublicKey]);\\r\\n     \\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (agreements[i].state == State.Active && agreements[i].agreementDates[1]<=block.timestamp && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))) {\\r\\n                consumerPublicKeyAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return (consumerPublicKeyAgreements, k);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DataSharingAgreement {\\r\\n\\r\\n    using AgreementLib for Agreement;\\r\\n\\r\\n    using AgreementLib for Counter;\\r\\n    \\r\\n    using RetrieveAgreementsLibrary for Agreement;\\r\\n\\r\\n    using GetAgreementsLibrary for Agreement;\\r\\n    \\r\\n    using AgreementViolationLibrary for Agreement;\\r\\n\\r\\n    Counter counter;\\r\\n\\r\\n    Agreement[] public agreements;\\r\\n\\r\\n    mapping(uint256 => string[]) agreementIdToPenalties;   \\r\\n\\r\\n    event AgreementActive(string providerPublicKey, string consumerPublicKey, uint256 id);\\r\\n    event PenaltyChoices(string consumerPublicKey, uint256 id, string[3] penaltyChoices);\\r\\n    event AgreeOnPenalty(string providerPublicKey, string consumerPublicKey, uint256 id, string chosenPenalty, uint256 newEndDate, uint256 price, uint256 fee);\\r\\n    event TerminationProposal(string publicKey, uint256 id);\\r\\n    event AgreementTerminated(string providerPublicKey, string consumerPublicKey,uint256 id);\\r\\n\\r\\n    function createAgreement(\\r\\n        string memory _providerPublicKey,\\r\\n        string memory _consumerPublicKey,\\r\\n        string memory _dataExchangeAgreementHash,\\r\\n        string[2] memory _signatures,\\r\\n        DataOffering memory dataOffering,\\r\\n        string memory _purpose,\\r\\n        uint256[] memory dates,\\r\\n        IntendedUse memory intendedUse,\\r\\n        LicenseGrant memory licenseGrant,\\r\\n        PricingModel memory pricingModel,\\r\\n        TypeOfData memory typeOfData\\r\\n    ) public {\\r\\n        Agreement memory agreement = AgreementLib.createAgreement(\\r\\n            _providerPublicKey,\\r\\n            _consumerPublicKey,\\r\\n            _dataExchangeAgreementHash,\\r\\n            _signatures,\\r\\n            dataOffering,\\r\\n            _purpose,\\r\\n            dates,\\r\\n            intendedUse,\\r\\n            licenseGrant,\\r\\n            pricingModel,\\r\\n            typeOfData,\\r\\n            counter\\r\\n        );\\r\\n        agreement.agreementId = agreements.length;\\r\\n        agreements.push(agreement);\\r\\n        emit AgreementActive(_providerPublicKey, _consumerPublicKey, agreements.length - 1);\\r\\n    }\\r\\n\\r\\n    function getAgreement(uint256 id) public view returns (Agreement memory) {\\r\\n        return agreements[id];\\r\\n    }\\r\\n\\r\\n    function getAgreementsLength() public view returns (uint256) {\\r\\n        return agreements.length;\\r\\n    } \\r\\n\\r\\n    function getState(uint256 id) public view returns (State) {\\r\\n        return agreements[id].state;\\r\\n    } \\r\\n\\r\\n    function checkActiveAgreements() public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = RetrieveAgreementsLibrary.checkActiveAgreements(agreements, counter);\\r\\n        return activeAgreements;\\r\\n    }\\r\\n\\r\\n    // function checkAgreementsByProvider(string memory _providerPublicKey, bool active) public view returns(Agreement[] memory) {\\r\\n    //     Agreement[] memory agreementsByProvider = RetrieveAgreementsLibrary.checkAgreementsByProvider(agreements, _providerPublicKey, active, counter);\\r\\n    //     return agreementsByProvider;\\r\\n    // }\\r\\n\\r\\n     function getAgreementsByProvider(string[] memory _providerPublicKeys, bool active) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByProvider = GetAgreementsLibrary.getAgreementsByProvider(agreements,_providerPublicKeys, active, counter);\\r\\n        return agreementsByProvider;\\r\\n    }\\r\\n   \\r\\n    function getAgreementsByConsumer(string[] memory _consumerPublicKeys, bool active) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByConsumer = GetAgreementsLibrary.getAgreementsByConsumer(agreements,_consumerPublicKeys, active, counter);\\r\\n        return agreementsByConsumer;\\r\\n    }\\r\\n\\r\\n    // function checkAgreementsByConsumer(string memory _consumerPublicKey, bool active) public view returns(Agreement[] memory) {\\r\\n    //     Agreement[] memory agreementsByConsumer = RetrieveAgreementsLibrary.checkAgreementsByConsumer(agreements,_consumerPublicKey, active, counter);\\r\\n    //     return agreementsByConsumer;\\r\\n    // }\\r\\n\\r\\n     function checkAgreementsByDataOffering(string memory _dataOfferingId) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByDataOffering = RetrieveAgreementsLibrary.checkAgreementsByDataOffering(agreements,_dataOfferingId, counter);\\r\\n        return agreementsByDataOffering;\\r\\n    }\\r\\n\\r\\n    function retrieveAgreements(string memory _consumerPublicKey) external view returns (Agreement[] memory, uint256 k) {\\r\\n        return RetrieveAgreementsLibrary.retrieveAgreements(agreements,_consumerPublicKey, counter);\\r\\n    }\\r\\n\\r\\n    function evaluateSignedResolution(uint256 _agreementId, string memory _proofType, string memory _type, string memory _resolution,\\r\\n                                string memory _dataExchangeId, uint256 _iat, string memory _iss, string memory _sub) public{ \\r\\n\\r\\n      AgreementViolationLibrary.evaluateResolution(agreements[_agreementId], _proofType, _type, _resolution, _dataExchangeId, _iat, _iss, _sub, counter);\\r\\n      emit PenaltyChoices(agreements[_agreementId].consumerPublicKey, _agreementId, agreements[_agreementId].violation.penaltyChoices);\\r\\n    }\\r\\n\\r\\n    function retrievePricingModel(uint256 _agreementId) public view returns (PricingModel memory){\\r\\n        return agreements[_agreementId].pricingModel;\\r\\n    }\\r\\n\\r\\n     function requestAgreementTermination(uint256 agreementId, string memory _publicKey) public {\\r\\n        require(keccak256(abi.encodePacked(agreements[agreementId].providerPublicKey)) == keccak256(abi.encodePacked(_publicKey)) || keccak256(abi.encodePacked(agreements[agreementId].consumerPublicKey)) == keccak256(abi.encodePacked(_publicKey)));\\r\\n        agreements[agreementId].termination = true; \\r\\n        if(keccak256(abi.encodePacked(agreements[agreementId].providerPublicKey)) == keccak256(abi.encodePacked(_publicKey)))\\r\\n            emit TerminationProposal(agreements[agreementId].consumerPublicKey, agreements[agreementId].agreementId);\\r\\n        else\\r\\n            emit TerminationProposal(agreements[agreementId].providerPublicKey, agreements[agreementId].agreementId);\\r\\n    }\\r\\n\\r\\n\\r\\n    function terminateAgreement(uint256 _agreementId) public{ \\r\\n      AgreementLib.terminateAgreement(agreements[_agreementId], counter);\\r\\n      if(agreements[_agreementId].state == State.Terminated){\\r\\n            emit AgreementTerminated(agreements[_agreementId].providerPublicKey, agreements[_agreementId].consumerPublicKey, _agreementId); \\r\\n      }\\r\\n\\t}\\r\\n\\r\\n    function enforcePenalty ( uint256 _id, string memory _chosenPenalty, uint256 _price, uint256 _fee, uint256 _newEndDate) public {\\r\\n        require((agreements[_id].state == State.Violated), \\\"Agreement must be violated in order to enforce penalty\\\");\\r\\n        if(keccak256(abi.encodePacked(_chosenPenalty)) == keccak256(abi.encodePacked(\\\"Terminate\\\"))){\\r\\n            agreements[_id].termination = true;\\r\\n            terminateAgreement(_id);\\r\\n        }\\r\\n        else{\\r\\n            AgreementViolationLibrary.enforcePenalty (agreements[_id], _chosenPenalty, _price, _fee, _newEndDate, counter);\\r\\n            emit AgreeOnPenalty(agreements[_id].providerPublicKey, agreements[_id].consumerPublicKey,\\r\\n                 agreements[_id].agreementId, _chosenPenalty, _newEndDate,_price, _fee);\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    function notifyConsentRevoked( string memory _dataOfferingId) public view returns (string[] memory) {    \\r\\n        string[] memory consumers = new string[](counter.dataOfferingCount[_dataOfferingId]); \\r\\n        uint256 k = 0; \\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (keccak256(abi.encodePacked(agreements[i].dataOffering.dataOfferingId)) == keccak256(abi.encodePacked(_dataOfferingId))) {\\r\\n                consumers[k++]=agreements[i].consumerPublicKey; \\r\\n            }\\r\\n        }\\r\\n        return consumers;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x11f124f4ae5dd63e05bbb90bd467e54d8d1f40b18553d797a8ba7b480dfbde31\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c80634f9f6fe611610097578063bd14de9611610066578063bd14de9614610236578063d8414b0214610262578063dd4be34b14610275578063ee4b2db51461028857600080fd5b80634f9f6fe6146101db578063667a8beb146101fb5780639a02692414610210578063b5bdf36b1461022357600080fd5b806330937f3a116100d357806330937f3a1461016757806332893afb1461018857806344c9af28146101a85780634dffbf0d146101c857600080fd5b8063063bd15a1461010557806311403a80146101235780631371b64a146101365780631c510ea914610156575b600080fd5b61010d61029b565b60405161011a9190613848565b60405180910390f35b61010d610131366004613a19565b610334565b610149610144366004613adc565b6103d3565b60405161011a9190613af5565b60065460405190815260200161011a565b61017a610175366004613b08565b610691565b60405161011a929190613b3d565b61019b610196366004613b08565b61072f565b60405161011a9190613b5f565b6101bb6101b6366004613adc565b61091c565b60405161011a9190613bc1565b61010d6101d6366004613b08565b61094e565b6101ee6101e9366004613adc565b6109ea565b60405161011a9190613bcf565b61020e610209366004613be2565b6114c3565b005b61020e61021e366004613adc565b61175f565b61020e610231366004613c44565b6118c1565b610249610244366004613adc565b611b45565b60405161011a9d9c9b9a99989796959493929190613c8b565b61010d610270366004613a19565b6124a8565b61020e610283366004613d97565b6124eb565b61020e6102963660046142dc565b612611565b604051632e4e974560e21b81526006600482015260006024820181905260609173__$75e7f22b9b402b73b18aa123ef2235f582$__9063b93a5d149060440160006040518083038186803b1580156102f257600080fd5b505af4158015610306573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261032e9190810190614bc6565b92915050565b6060600073__$2d66fcc483cad6bd344cfa2bce294ad753$__630abfe6d66006868660006040518563ffffffff1660e01b81526004016103779493929190614bfb565b60006040518083038186803b15801561038f57600080fd5b505af41580156103a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103cb9190810190614bc6565b949350505050565b6103db612f4d565b600682815481106103ee576103ee614c74565b90600052602060002090601e02016011016040518060c001604052908160008201805461041a90614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461044690614c8a565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b50505050508152602001600182015481526020016002820180546104b690614c8a565b80601f01602080910402602001604051908101604052809291908181526020018280546104e290614c8a565b801561052f5780601f106105045761010080835404028352916020019161052f565b820191906000526020600020905b81548152906001019060200180831161051257829003601f168201915b50505050508152602001600382015481526020016004820160405180604001604052908160008201805461056290614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461058e90614c8a565b80156105db5780601f106105b0576101008083540402835291602001916105db565b820191906000526020600020905b8154815290600101906020018083116105be57829003601f168201915b505050505081526020016001820180546105f490614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461062090614c8a565b801561066d5780601f106106425761010080835404028352916020019161066d565b820191906000526020600020905b81548152906001019060200180831161065057829003601f168201915b5050509190925250505081526006919091015460ff16151560209091015292915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__631b6bcbbf60068560006040518463ffffffff1660e01b81526004016106d293929190614cc5565b60006040518083038186803b1580156106ea57600080fd5b505af41580156106fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107269190810190614cee565b91509150915091565b6060600080600501836040516107459190614d35565b90815260200160405180910390205467ffffffffffffffff81111561076c5761076c61385b565b60405190808252806020026020018201604052801561079f57816020015b606081526020019060019003908161078a5790505b5090506000805b60065481101561091357846040516020016107c19190614d35565b60405160208183030381529060405280519060200120600682815481106107ea576107ea614c74565b90600052602060002090601e020160060160000160405160200161080e9190614d51565b604051602081830303815290604052805190602001201415610901576006818154811061083d5761083d614c74565b90600052602060002090601e0201600201805461085990614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461088590614c8a565b80156108d25780601f106108a7576101008083540402835291602001916108d2565b820191906000526020600020905b8154815290600101906020018083116108b557829003601f168201915b50505050508383806108e390614dd9565b9450815181106108f5576108f5614c74565b60200260200101819052505b8061090b81614dd9565b9150506107a6565b50909392505050565b60006006828154811061093157610931614c74565b60009182526020909120600a601e90920201015460ff1692915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__63e41ecb3b60068560006040518463ffffffff1660e01b815260040161098f93929190614cc5565b60006040518083038186803b1580156109a757600080fd5b505af41580156109bb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109e39190810190614bc6565b9392505050565b6109f2612f9e565b60068281548110610a0557610a05614c74565b90600052602060002090601e0201604051806101e001604052908160008201548152602001600182018054610a3990614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6590614c8a565b8015610ab25780601f10610a8757610100808354040283529160200191610ab2565b820191906000526020600020905b815481529060010190602001808311610a9557829003601f168201915b50505050508152602001600282018054610acb90614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610af790614c8a565b8015610b445780601f10610b1957610100808354040283529160200191610b44565b820191906000526020600020905b815481529060010190602001808311610b2757829003601f168201915b50505050508152602001600382018054610b5d90614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8990614c8a565b8015610bd65780601f10610bab57610100808354040283529160200191610bd6565b820191906000526020600020905b815481529060010190602001808311610bb957829003601f168201915b5050509183525050604080518082019091526020909101906004830160026000835b82821015610c9b578382018054610c0e90614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3a90614c8a565b8015610c875780601f10610c5c57610100808354040283529160200191610c87565b820191906000526020600020905b815481529060010190602001808311610c6a57829003601f168201915b505050505081526020019060010190610bf8565b50505050815260200160068201604051806060016040529081600082018054610cc390614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610cef90614c8a565b8015610d3c5780601f10610d1157610100808354040283529160200191610d3c565b820191906000526020600020905b815481529060010190602001808311610d1f57829003601f168201915b5050505050815260200160018201548152602001600282018054610d5f90614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8b90614c8a565b8015610dd85780601f10610dad57610100808354040283529160200191610dd8565b820191906000526020600020905b815481529060010190602001808311610dbb57829003601f168201915b5050505050815250508152602001600982018054610df590614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2190614c8a565b8015610e6e5780601f10610e4357610100808354040283529160200191610e6e565b820191906000526020600020905b815481529060010190602001808311610e5157829003601f168201915b5050509183525050600a82015460209091019060ff166002811115610e9557610e95613404565b6002811115610ea657610ea6613404565b815260408051606081019182905260209092019190600b84019060039082845b815481526020019060010190808311610ec65750505091835250506040805160608082018352600e85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855161020081018752600f89015480841615158252828104841615158288015293840483161515818801526301000000840483161515818601526401000000008404831615156080808301919091526501000000000085048416151560a0830152660100000000000085048416151560c08084019190915267010000000000000086048516151560e0840152680100000000000000008604851615158385015269010000000000000000008604851615156101208401526a0100000000000000000000860485161515610140840152600160581b860485161515610160840152600160601b860485161515610180840152600160681b8604851615156101a0840152600160701b8604851615156101c0840152600160781b909504841615156101e0830152878901919091528651808801885260108a01548085161515825292909204909216151594810194909452918501929092528251918201909252601184018054929093019290918290829061109c90614c8a565b80601f01602080910402602001604051908101604052809291908181526020018280546110c890614c8a565b80156111155780601f106110ea57610100808354040283529160200191611115565b820191906000526020600020905b8154815290600101906020018083116110f857829003601f168201915b505050505081526020016001820154815260200160028201805461113890614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461116490614c8a565b80156111b15780601f10611186576101008083540402835291602001916111b1565b820191906000526020600020905b81548152906001019060200180831161119457829003601f168201915b5050505050815260200160038201548152602001600482016040518060400160405290816000820180546111e490614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461121090614c8a565b801561125d5780601f106112325761010080835404028352916020019161125d565b820191906000526020600020905b81548152906001019060200180831161124057829003601f168201915b5050505050815260200160018201805461127690614c8a565b80601f01602080910402602001604051908101604052809291908181526020018280546112a290614c8a565b80156112ef5780601f106112c4576101008083540402835291602001916112ef565b820191906000526020600020905b8154815290600101906020018083116112d257829003601f168201915b5050509190925250505081526006919091015460ff9081161515602092830152918352604080516060810190915260188501805494909201939092839116600481111561133e5761133e613404565b600481111561134f5761134f613404565b815260200160018201805461136390614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461138f90614c8a565b80156113dc5780601f106113b1576101008083540402835291602001916113dc565b820191906000526020600020905b8154815290600101906020018083116113bf57829003601f168201915b505050918352505060408051606081019091526020909101906002830160036000835b828210156114a257838201805461141590614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461144190614c8a565b801561148e5780601f106114635761010080835404028352916020019161148e565b820191906000526020600020905b81548152906001019060200180831161147157829003601f168201915b5050505050815260200190600101906113ff565b505050915250508152601d919091015460ff16151560209091015292915050565b6001600686815481106114d8576114d8614c74565b60009182526020909120600a601e90920201015460ff16600281111561150057611500613404565b146115785760405162461bcd60e51b815260206004820152603660248201527f41677265656d656e74206d7573742062652076696f6c6174656420696e206f7260448201527f64657220746f20656e666f7263652070656e616c74790000000000000000000060648201526084015b60405180910390fd5b604051685465726d696e61746560b81b602082015260290160405160208183030381529060405280519060200120846040516020016115b79190614d35565b604051602081830303815290604052805190602001201415611618576001600686815481106115e8576115e8614c74565b60009182526020909120601e90910201601d01805460ff19169115159190911790556116138561175f565b611758565b73__$fd670a7a8cf286bc46dd07184f1e6a9adc$__63cb5893c96006878154811061164557611645614c74565b90600052602060002090601e02018686868660006040518763ffffffff1660e01b815260040161167a96959493929190614df4565b60006040518083038186803b15801561169257600080fd5b505af41580156116a6573d6000803e3d6000fd5b505050507f6a5b41877c1e19e7405feb10468979239b83616b44fef14f87bc82641810bcde600686815481106116de576116de614c74565b90600052602060002090601e02016001016006878154811061170257611702614c74565b90600052602060002090601e02016002016006888154811061172657611726614c74565b90600052602060002090601e0201600001548785888860405161174f9796959493929190614ea9565b60405180910390a15b5050505050565b73__$b6264364eb2f1db0035d8bfd2272b8857e$__632cd1c6566006838154811061178c5761178c614c74565b90600052602060002090601e020160006040518363ffffffff1660e01b81526004016117c2929190918252602082015260400190565b60006040518083038186803b1580156117da57600080fd5b505af41580156117ee573d6000803e3d6000fd5b50600292506117fb915050565b6006828154811061180e5761180e614c74565b60009182526020909120600a601e90920201015460ff16600281111561183657611836613404565b14156118be577f8fdec0edc19a1eb9147642be05b326b7f5d42bf96f5ba734530bfca33bc8d7e96006828154811061187057611870614c74565b90600052602060002090601e02016001016006838154811061189457611894614c74565b90600052602060002090601e0201600201836040516118b593929190614f08565b60405180910390a15b50565b806040516020016118d29190614d35565b60405160208183030381529060405280519060200120600683815481106118fb576118fb614c74565b90600052602060002090601e020160010160405160200161191c9190614d51565b6040516020818303038152906040528051906020012014806119ac57508060405160200161194a9190614d35565b604051602081830303815290604052805190602001206006838154811061197357611973614c74565b90600052602060002090601e02016002016040516020016119949190614d51565b60405160208183030381529060405280519060200120145b6119b557600080fd5b6001600683815481106119ca576119ca614c74565b90600052602060002090601e0201601d0160006101000a81548160ff02191690831515021790555080604051602001611a039190614d35565b6040516020818303038152906040528051906020012060068381548110611a2c57611a2c614c74565b90600052602060002090601e0201600101604051602001611a4d9190614d51565b604051602081830303815290604052805190602001201415611aed577f5b110f233309bfcc0428fef61705787d5e6e67380b4a0ec71654cf1de0496a6d60068381548110611a9d57611a9d614c74565b90600052602060002090601e020160020160068481548110611ac157611ac1614c74565b90600052602060002090601e020160000154604051611ae1929190614f3e565b60405180910390a15050565b7f5b110f233309bfcc0428fef61705787d5e6e67380b4a0ec71654cf1de0496a6d60068381548110611b2157611b21614c74565b90600052602060002090601e020160010160068481548110611ac157611ac1614c74565b60068181548110611b5557600080fd5b60009182526020909120601e90910201805460018201805491935090611b7a90614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba690614c8a565b8015611bf35780601f10611bc857610100808354040283529160200191611bf3565b820191906000526020600020905b815481529060010190602001808311611bd657829003601f168201915b505050505090806002018054611c0890614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3490614c8a565b8015611c815780601f10611c5657610100808354040283529160200191611c81565b820191906000526020600020905b815481529060010190602001808311611c6457829003601f168201915b505050505090806003018054611c9690614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc290614c8a565b8015611d0f5780601f10611ce457610100808354040283529160200191611d0f565b820191906000526020600020905b815481529060010190602001808311611cf257829003601f168201915b50505050509080600601604051806060016040529081600082018054611d3490614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6090614c8a565b8015611dad5780601f10611d8257610100808354040283529160200191611dad565b820191906000526020600020905b815481529060010190602001808311611d9057829003601f168201915b5050505050815260200160018201548152602001600282018054611dd090614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611dfc90614c8a565b8015611e495780601f10611e1e57610100808354040283529160200191611e49565b820191906000526020600020905b815481529060010190602001808311611e2c57829003601f168201915b50505050508152505090806009018054611e6290614c8a565b80601f0160208091040260200160405190810160405280929190818152602001828054611e8e90614c8a565b8015611edb5780601f10611eb057610100808354040283529160200191611edb565b820191906000526020600020905b815481529060010190602001808311611ebe57829003601f168201915b505050600a8401546040805160608082018352600e88015460ff818116151584526101008083048216151560208087019190915262010000938490048316151586880152865161020081018852600f8d0154808516151582528381048516151582840152948504841615158189015263010000008504841615159581019590955264010000000084048316151560808601526501000000000084048316151560a0860152660100000000000084048316151560c08087019190915267010000000000000085048416151560e0870152680100000000000000008504841615158684015269010000000000000000008504841615156101208701526a0100000000000000000000850484161515610140870152600160581b850484161515610160870152600160601b850484161515610180870152600160681b8504841615156101a0870152600160701b8504841615156101c0870152600160781b909404831615156101e08601528651808801885260108d015480851615158252929092048316151590820152855192830190955260118a018054999a919096169893975091955092939092918290829061208f90614c8a565b80601f01602080910402602001604051908101604052809291908181526020018280546120bb90614c8a565b80156121085780601f106120dd57610100808354040283529160200191612108565b820191906000526020600020905b8154815290600101906020018083116120eb57829003601f168201915b505050505081526020016001820154815260200160028201805461212b90614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461215790614c8a565b80156121a45780601f10612179576101008083540402835291602001916121a4565b820191906000526020600020905b81548152906001019060200180831161218757829003601f168201915b5050505050815260200160038201548152602001600482016040518060400160405290816000820180546121d790614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461220390614c8a565b80156122505780601f1061222557610100808354040283529160200191612250565b820191906000526020600020905b81548152906001019060200180831161223357829003601f168201915b5050505050815260200160018201805461226990614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461229590614c8a565b80156122e25780601f106122b7576101008083540402835291602001916122e2565b820191906000526020600020905b8154815290600101906020018083116122c557829003601f168201915b5050509190925250505081526006919091015460ff9081161515602090920191909152604080516060810190915260188401805493949391929091839116600481111561233157612331613404565b600481111561234257612342613404565b815260200160018201805461235690614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461238290614c8a565b80156123cf5780601f106123a4576101008083540402835291602001916123cf565b820191906000526020600020905b8154815290600101906020018083116123b257829003601f168201915b505050918352505060408051606081019091526020909101906002830160036000835b8282101561249557838201805461240890614c8a565b80601f016020809104026020016040519081016040528092919081815260200182805461243490614c8a565b80156124815780601f1061245657610100808354040283529160200191612481565b820191906000526020600020905b81548152906001019060200180831161246457829003601f168201915b5050505050815260200190600101906123f2565b50505091525050601d9091015460ff168d565b6060600073__$2d66fcc483cad6bd344cfa2bce294ad753$__63d0aed2c16006868660006040518563ffffffff1660e01b81526004016103779493929190614bfb565b73__$fd670a7a8cf286bc46dd07184f1e6a9adc$",
  "libraries": {
    "AgreementLib": "0x91723B01D19111573d2a21967a7227677C847A10",
    "AgreementViolationLibrary": "0x5AB30585805B1F7Df3c4000e7179B5D434a7Daf2",
    "RetrieveAgreementsLibrary": "0xd87a65a499B84CB08AD2B7Ae04951C6975Aaf380",
    "GetAgreementsLibrary": "0x621Ff939Fa681a7884C45F24De60D60698d5c66c"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1561,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "counter",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)158_storage"
      },
      {
        "astId": 1565,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreements",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Agreement)48_storage)dyn_storage"
      },
      {
        "astId": 1570,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreementIdToPenalties",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_array(t_string_storage)2_storage": {
        "base": "t_string_storage",
        "encoding": "inplace",
        "label": "string[2]",
        "numberOfBytes": "64"
      },
      "t_array(t_string_storage)3_storage": {
        "base": "t_string_storage",
        "encoding": "inplace",
        "label": "string[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Agreement)48_storage)dyn_storage": {
        "base": "t_struct(Agreement)48_storage",
        "encoding": "dynamic_array",
        "label": "struct Agreement[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)6": {
        "encoding": "inplace",
        "label": "enum State",
        "numberOfBytes": "1"
      },
      "t_enum(ViolationType)125": {
        "encoding": "inplace",
        "label": "enum ViolationType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Agreement)48_storage": {
        "encoding": "inplace",
        "label": "struct Agreement",
        "members": [
          {
            "astId": 8,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 10,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerPublicKey",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerPublicKey",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 14,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataExchangeAgreementHash",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "signatures",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)2_storage"
          },
          {
            "astId": 21,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOffering",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(DataOffering)60_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "purpose",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 26,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "state",
            "offset": 0,
            "slot": "10",
            "type": "t_enum(State)6"
          },
          {
            "astId": 30,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementDates",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)3_storage"
          },
          {
            "astId": 33,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "intendedUse",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(IntendedUse)67_storage"
          },
          {
            "astId": 36,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "licenseGrant",
            "offset": 0,
            "slot": "15",
            "type": "t_struct(LicenseGrant)100_storage"
          },
          {
            "astId": 39,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "typeOfData",
            "offset": 0,
            "slot": "16",
            "type": "t_struct(TypeOfData)53_storage"
          },
          {
            "astId": 42,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "pricingModel",
            "offset": 0,
            "slot": "17",
            "type": "t_struct(PricingModel)114_storage"
          },
          {
            "astId": 45,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "violation",
            "offset": 0,
            "slot": "24",
            "type": "t_struct(Violation)135_storage"
          },
          {
            "astId": 47,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "termination",
            "offset": 0,
            "slot": "29",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "960"
      },
      "t_struct(Counter)158_storage": {
        "encoding": "inplace",
        "label": "struct Counter",
        "members": [
          {
            "astId": 137,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "activeAgreementCount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 141,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerCount",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 145,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerActiveCount",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 149,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerCount",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 153,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerActiveCount",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 157,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingCount",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(DataOffering)60_storage": {
        "encoding": "inplace",
        "label": "struct DataOffering",
        "members": [
          {
            "astId": 55,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 57,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingVersion",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 59,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(IntendedUse)67_storage": {
        "encoding": "inplace",
        "label": "struct IntendedUse",
        "members": [
          {
            "astId": 62,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "processData",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 64,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "shareDataWithThirdParty",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 66,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "editData",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(LicenseGrant)100_storage": {
        "encoding": "inplace",
        "label": "struct LicenseGrant",
        "members": [
          {
            "astId": 69,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "transferable",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 71,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "exclusiveness",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 73,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paidUp",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 75,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "revocable",
            "offset": 3,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 77,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "processing",
            "offset": 4,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 79,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "modifying",
            "offset": 5,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 81,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "analyzing",
            "offset": 6,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 83,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "storingData",
            "offset": 7,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "storingCopy",
            "offset": 8,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 87,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "reproducing",
            "offset": 9,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 89,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "distributing",
            "offset": 10,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 91,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "loaning",
            "offset": 11,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 93,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "selling",
            "offset": 12,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 95,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "renting",
            "offset": 13,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 97,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "furtherLicensing",
            "offset": 14,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 99,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "leasing",
            "offset": 15,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(PaymentOnSubscription)119_storage": {
        "encoding": "inplace",
        "label": "struct PaymentOnSubscription",
        "members": [
          {
            "astId": 116,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "timeDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 118,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "repeat",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(PricingModel)114_storage": {
        "encoding": "inplace",
        "label": "struct PricingModel",
        "members": [
          {
            "astId": 102,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paymentType",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 104,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "currency",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 108,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "fee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 111,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paymentOnSubscription",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(PaymentOnSubscription)119_storage"
          },
          {
            "astId": 113,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "isFree",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(TypeOfData)53_storage": {
        "encoding": "inplace",
        "label": "struct TypeOfData",
        "members": [
          {
            "astId": 50,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataStream",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 52,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "personalData",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Violation)135_storage": {
        "encoding": "inplace",
        "label": "struct Violation",
        "members": [
          {
            "astId": 128,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "violationType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ViolationType)125"
          },
          {
            "astId": 130,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "issuerId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 134,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "penaltyChoices",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)3_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}