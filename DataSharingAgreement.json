{
  "address": "0x77faAac1807c41322eF128124434510E70ed5021",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "chosenPenalty",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newEndDate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "AgreeOnPenalty",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementActive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string[3]",
          "name": "penaltyChoices",
          "type": "string[3]"
        }
      ],
      "name": "PenaltyChoices",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "purpose",
          "type": "string"
        },
        {
          "internalType": "enum State",
          "name": "state",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "paidUp",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "processing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "modifying",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "analyzing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingCopy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "reproducing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "distributing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "loaning",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "selling",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "renting",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "furtherLicensing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "leasing",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "pricingModel",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ViolationType",
              "name": "violationType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "issuerId",
              "type": "string"
            },
            {
              "internalType": "string[3]",
              "name": "penaltyChoices",
              "type": "string[3]"
            }
          ],
          "internalType": "struct Violation",
          "name": "violation",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkActiveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        }
      ],
      "name": "checkAgreementsByDataOffering",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "internalType": "string[2]",
          "name": "_signatures",
          "type": "string[2]"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "_purpose",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "paidUp",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "processing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "modifying",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "analyzing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "storingCopy",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "reproducing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "distributing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "loaning",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "selling",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "renting",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "furtherLicensing",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "leasing",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "pricingModel",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_chosenPenalty",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newEndDate",
          "type": "uint256"
        }
      ],
      "name": "enforcePenalty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_proofType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_resolution",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_iat",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_iss",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sub",
          "type": "string"
        }
      ],
      "name": "evaluateSignedResolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_consumerPublicKeys",
          "type": "string[]"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "getAgreementsByConsumer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string[]",
          "name": "_providerPublicKeys",
          "type": "string[]"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "getAgreementsByProvider",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgreementsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        }
      ],
      "name": "notifyConsentRevoked",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        }
      ],
      "name": "retrieveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "internalType": "string[2]",
              "name": "signatures",
              "type": "string[2]"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "paidUp",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "processing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "modifying",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "analyzing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "storingCopy",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "reproducing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "distributing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "loaning",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "selling",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "renting",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "furtherLicensing",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "leasing",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "retrievePricingModel",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "terminate",
          "type": "bool"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9800435e09fcfe8a7b0b3b6f58093a39ccee5a178f829919c367e7384f41ba79",
  "receipt": {
    "to": null,
    "from": "0x580d142D0c2958d843499553275e427Da4Ab7Eb5",
    "contractAddress": "0x77faAac1807c41322eF128124434510E70ed5021",
    "transactionIndex": 0,
    "gasUsed": "4401266",
    "logsBloom": "0x
    "blockHash": "0xc6569a1682728b22973e711a5a2406d298eb13accbe510652503d2ae62b63e29",
    "transactionHash": "0x9800435e09fcfe8a7b0b3b6f58093a39ccee5a178f829919c367e7384f41ba79",
    "logs": [],
    "blockNumber": 690051,
    "cumulativeGasUsed": "4401266",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "1753c0bdc1d2a13c0eea5fda0126fea8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"chosenPenalty\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEndDate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"AgreeOnPenalty\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementTerminated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"name\":\"PenaltyChoices\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkActiveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"}],\"name\":\"checkAgreementsByDataOffering\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"_signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_chosenPenalty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newEndDate\",\"type\":\"uint256\"}],\"name\":\"enforcePenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_resolution\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_iat\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_iss\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sub\",\"type\":\"string\"}],\"name\":\"evaluateSignedResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_consumerPublicKeys\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"getAgreementsByConsumer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_providerPublicKeys\",\"type\":\"string[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"getAgreementsByProvider\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgreementsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"}],\"name\":\"notifyConsentRevoked\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"}],\"name\":\"retrieveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"internalType\":\"string[2]\",\"name\":\"signatures\",\"type\":\"string[2]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"paidUp\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"processing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"modifying\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"analyzing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storingCopy\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reproducing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"distributing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"loaning\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"selling\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renting\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"furtherLicensing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leasing\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"retrievePricingModel\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"terminate\",\"type\":\"bool\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Agreement.sol\":\"DataSharingAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/Agreement.sol\":{\"content\":\"// /*\\r\\n\\r\\n// * Copyright (c) Siemens AG, 2020-2022\\r\\n\\r\\n// *\\r\\n\\r\\n// * Authors:\\r\\n\\r\\n// * Susanne Stahnke <susanne.stahnke@siemens.com>,\\r\\n\\r\\n// * Yvonne Kovacs <yvonne.kovacs@siemens.com>\\r\\n\\r\\n// *\\r\\n\\r\\n// * This work is licensed under the terms of Apache 2.0. See\\r\\n\\r\\n// * the LICENSE file in the top-level directory.\\r\\n\\r\\n// */\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\n\\r\\nenum State {\\r\\n    Active,\\r\\n    Violated,\\r\\n    Terminated\\r\\n}\\r\\n\\r\\nstruct Agreement {\\r\\n    uint256 agreementId;\\r\\n    string providerPublicKey;\\r\\n    string consumerPublicKey;\\r\\n    string dataExchangeAgreementHash;\\r\\n    string[2] signatures;\\r\\n    DataOffering dataOffering;\\r\\n    string purpose;\\r\\n    State state;\\r\\n    uint256[3] agreementDates;\\r\\n    IntendedUse intendedUse;\\r\\n    LicenseGrant licenseGrant;\\r\\n    TypeOfData typeOfData;\\r\\n    PricingModel pricingModel;\\r\\n    Violation violation;\\r\\n}\\r\\n\\r\\nstruct TypeOfData {\\r\\n    bool dataStream;\\r\\n    bool personalData;\\r\\n}\\r\\n\\r\\nstruct DataOffering {\\r\\n    string dataOfferingId;\\r\\n    uint256 dataOfferingVersion;\\r\\n    string title;\\r\\n}\\r\\n\\r\\nstruct IntendedUse {\\r\\n    bool processData;\\r\\n    bool shareDataWithThirdParty;\\r\\n    bool editData;\\r\\n}\\r\\n\\r\\nstruct LicenseGrant {\\r\\n    bool transferable;\\r\\n    bool exclusiveness;\\r\\n    bool paidUp;\\r\\n    bool revocable;\\r\\n    bool processing;\\r\\n    bool modifying;\\r\\n    bool analyzing;\\r\\n    bool storingData;\\r\\n    bool storingCopy;\\r\\n    bool reproducing;\\r\\n    bool distributing;\\r\\n    bool loaning;\\r\\n    bool selling;\\r\\n    bool renting;\\r\\n    bool furtherLicensing;\\r\\n    bool leasing;\\r\\n}\\r\\n\\r\\nstruct PricingModel {\\r\\n    string paymentType;\\r\\n    uint256 price;\\r\\n    string currency;\\r\\n    uint256 fee;\\r\\n    PaymentOnSubscription paymentOnSubscription;\\r\\n    bool isFree;\\r\\n}\\r\\n\\r\\nstruct PaymentOnSubscription {\\r\\n    string timeDuration;\\r\\n    string repeat;\\r\\n}\\r\\n\\r\\nenum ViolationType {\\r\\n    NotViolated,\\r\\n    PaymentNotCompleted,\\r\\n    DataNotTransferredAsDescribed,\\r\\n    DataNotAsDescribed,\\r\\n    LicenseViolated\\r\\n}\\r\\n\\r\\nstruct Violation {\\r\\n    ViolationType violationType;\\r\\n    string issuerId;\\r\\n    string[3] penaltyChoices;\\r\\n}\\r\\n\\r\\nstruct Counter {\\r\\n    uint256 activeAgreementCount;\\r\\n    mapping (string => uint) providerCount;\\r\\n    mapping (string => uint) providerActiveCount;\\r\\n    mapping (string => uint) consumerCount;\\r\\n    mapping (string => uint) consumerActiveCount;\\r\\n    mapping (string => uint) dataOfferingCount;\\r\\n}\\r\\n\\r\\nstruct SignedResolution {\\r\\n    string proofType;\\r\\n    string resolutionType;\\r\\n    string resolution;\\r\\n    string dataExchangeId;\\r\\n    uint256 iat;\\r\\n    string iss;\\r\\n    string sub;\\r\\n}\\r\\n\\r\\nlibrary AgreementViolationLibrary {\\r\\n\\r\\n    function evaluateResolution(\\r\\n        Agreement storage agreement,\\r\\n        string memory _proofType,\\r\\n        string memory _type,\\r\\n        string memory _resolution,\\r\\n        string memory _dataExchangeId,\\r\\n        uint256 _iat,\\r\\n        string memory _iss,\\r\\n        string memory _sub,\\r\\n        Counter storage counter) public {\\r\\n\\r\\n        SignedResolution memory signedResolution;\\r\\n        signedResolution.proofType = _proofType;\\r\\n        signedResolution.resolutionType = _type;\\r\\n        signedResolution.resolution = _resolution;\\r\\n        signedResolution.dataExchangeId = _dataExchangeId;\\r\\n        signedResolution.iat = _iat;\\r\\n        signedResolution.iss = _iss;   \\r\\n        signedResolution.sub = _sub;\\r\\n\\r\\n        if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"completed\\\"))){\\r\\n            delete agreement.violation.penaltyChoices;   \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"notCompleted\\\"))) { \\r\\n                issueViolation(agreement, ViolationType.DataNotTransferredAsDescribed, signedResolution.sub); \\r\\n                agreement.state = State.Violated; \\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerActiveCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n                \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"accepted\\\"))){ \\r\\n                issueViolation(agreement, ViolationType.DataNotTransferredAsDescribed, signedResolution.sub); \\r\\n                agreement.state = State.Violated; \\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerActiveCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n             }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"denied\\\"))){\\r\\n                delete agreement.violation.penaltyChoices;  \\r\\n        }\\r\\n\\r\\n    }\\r\\n\\r\\n    function issueViolation(Agreement storage agreement, ViolationType _violationType, string memory _issuerId) private {\\r\\n        agreement.violation = Violation(_violationType, _issuerId, [\\\"Terminate\\\", \\\"NewEndDateForAgreement\\\", \\\"NewEndDateForAgreementAndReductionOfPayment\\\"]);\\r\\n    }\\r\\n\\r\\n     function getViolation(Agreement storage agreement) public view returns (Violation memory){\\r\\n        return agreement.violation;\\r\\n    }\\r\\n   \\r\\n    function enforcePenalty (Agreement storage agreement, string memory _chosenPenalty, uint256 _price, uint256 _fee,\\r\\n                             uint256 _newEndDate, Counter storage counter) public {\\r\\n\\r\\n        if(agreement.violation.violationType == ViolationType.DataNotTransferredAsDescribed){\\r\\n                if (keccak256(abi.encodePacked(_chosenPenalty)) == \\\"NewEndDateForAgreement\\\"){\\r\\n                    require(_newEndDate > block.timestamp, \\\"New end date must be after current date\\\");\\r\\n                    agreement.agreementDates[2] = _newEndDate;\\r\\n                }\\r\\n                else if (keccak256(abi.encodePacked(_chosenPenalty)) == (keccak256(abi.encodePacked(\\\"NewEndDateForAgreementAndReductionOfPayment\\\")))){\\r\\n                    require(_newEndDate > block.timestamp, \\\"New end date must be after current date.\\\");\\r\\n                    agreement.agreementDates[2] = _newEndDate;\\r\\n                    agreement.pricingModel.price = _price;\\r\\n                    agreement.pricingModel.fee = _fee;\\r\\n                }\\r\\n            agreement.state = State.Active;\\r\\n            counter.activeAgreementCount++;\\r\\n            counter.providerActiveCount[agreement.providerPublicKey]++;\\r\\n            counter.consumerActiveCount[agreement.consumerPublicKey]++; \\r\\n        }    \\r\\n    }\\r\\n}\\r\\n    \\r\\nlibrary AgreementLib {\\r\\n\\r\\n    function createAgreement(\\r\\n        string memory _providerPublicKey,\\r\\n        string memory _consumerPublicKey,\\r\\n        string memory _dataExchangeAgreementHash,\\r\\n        string[2] memory _signatures,\\r\\n        DataOffering memory dataOffering,\\r\\n        string memory _purpose,\\r\\n        uint256[] memory dates,\\r\\n        IntendedUse memory intendedUse,\\r\\n        LicenseGrant memory licenseGrant,\\r\\n        PricingModel memory pricingModel,\\r\\n        TypeOfData memory typeOfData,\\r\\n        Counter storage counter\\r\\n    ) internal returns (Agreement memory agreement)\\r\\n    {\\r\\n        agreement.providerPublicKey = _providerPublicKey;\\r\\n        agreement.consumerPublicKey = _consumerPublicKey;\\r\\n        agreement.dataExchangeAgreementHash = _dataExchangeAgreementHash;\\r\\n        agreement.signatures = _signatures;\\r\\n        agreement.dataOffering.dataOfferingId = dataOffering.dataOfferingId;\\r\\n        agreement.dataOffering.dataOfferingVersion = dataOffering.dataOfferingVersion;\\r\\n        agreement.dataOffering.title = dataOffering.title;\\r\\n        agreement.purpose = _purpose;\\r\\n\\r\\n        agreement.state = State.Active;\\r\\n        agreement.agreementDates[0] = dates[0];\\r\\n        agreement.agreementDates[1] = dates[1];\\r\\n\\r\\n        require(\\r\\n            dates[1] >= agreement.agreementDates[0],\\r\\n            \\\"Start date must be after creation date.\\\"\\r\\n        );\\r\\n        require(dates[2] > dates[1], \\\"End date must be after start date.\\\");\\r\\n        agreement.agreementDates[2] = dates[2];\\r\\n        agreement.intendedUse = intendedUse;\\r\\n        agreement.licenseGrant = licenseGrant;\\r\\n        agreement.pricingModel = pricingModel;\\r\\n\\r\\n        agreement.typeOfData.dataStream = typeOfData.dataStream;\\r\\n        agreement.typeOfData.personalData = typeOfData.personalData;\\r\\n       \\r\\n        counter.activeAgreementCount++;\\r\\n        counter.providerCount[_providerPublicKey]++;\\r\\n        counter.consumerCount[_consumerPublicKey]++; \\r\\n        counter.providerActiveCount[_providerPublicKey]++;\\r\\n        counter.consumerActiveCount[_consumerPublicKey]++; \\r\\n        counter.dataOfferingCount[dataOffering.dataOfferingId]++;\\r\\n    \\r\\n    }\\r\\n\\r\\n    function terminateAgreement(Agreement storage agreement, bool terminate, Counter storage counter) public {\\r\\n        if(agreement.agreementDates[2]<=block.timestamp || terminate){ \\r\\n            if(agreement.state == State.Active){\\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerActiveCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n            }     \\r\\n            agreement.state = State.Terminated;\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary GetAgreementsLibrary {\\r\\n     function getAgreementsByConsumer(Agreement[] storage agreements, string[] memory _consumerPublicKeys, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        uint256 k = 0;\\r\\n        uint256 length = 0;\\r\\n        Agreement[] memory consumerAgreements;\\r\\n        if(active) {\\r\\n            for(uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                length += counter.consumerActiveCount[_consumerPublicKeys[j]];\\r\\n            consumerAgreements = new Agreement[](length); \\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                     if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKeys[j]))){\\r\\n                        console.log(i);\\r\\n                        consumerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }  \\r\\n        }\\r\\n        else {\\r\\n            for(uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                length += counter.consumerCount[_consumerPublicKeys[j]];\\r\\n            consumerAgreements = new Agreement[](length);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _consumerPublicKeys.length; j++)\\r\\n                     if (keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKeys[j]))){\\r\\n                        consumerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }\\r\\n        }\\r\\n        return consumerAgreements;\\r\\n    }\\r\\n\\r\\n    function getAgreementsByProvider(Agreement[] storage agreements, string[] memory _providerPublicKeys, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        uint256 k = 0;\\r\\n        uint256 length = 0;\\r\\n        Agreement[] memory providerAgreements;\\r\\n        if(active) {\\r\\n            for(uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                length += counter.providerActiveCount[_providerPublicKeys[j]];\\r\\n            providerAgreements = new Agreement[](length); \\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                     if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKeys[j]))){\\r\\n                        console.log(i);\\r\\n                        providerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }  \\r\\n        }\\r\\n        else {\\r\\n            for(uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                length += counter.providerCount[_providerPublicKeys[j]];\\r\\n            providerAgreements = new Agreement[](length);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                for( uint j= 0; j < _providerPublicKeys.length; j++)\\r\\n                     if (keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKeys[j]))){\\r\\n                        providerAgreements[k] = agreements[i];\\r\\n                        k++;\\r\\n                    }\\r\\n        }\\r\\n        return providerAgreements;\\r\\n    }\\r\\n}\\r\\n\\r\\nlibrary RetrieveAgreementsLibrary {\\r\\n\\r\\n    function checkActiveAgreements (Agreement[] storage agreements, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = new Agreement[](counter.activeAgreementCount); \\r\\n        uint k = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if(agreements[i].state == State.Active) {   \\r\\n                activeAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return activeAgreements;\\r\\n    }\\r\\n\\r\\n    function checkAgreementsByDataOffering (Agreement[] storage agreements, string memory _dataOffering, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory dataOfferingAgreements = new Agreement[](counter.dataOfferingCount[_dataOffering]);\\r\\n        uint k = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (keccak256(abi.encodePacked(agreements[i].dataOffering.dataOfferingId)) == keccak256(abi.encodePacked(_dataOffering))) {\\r\\n                dataOfferingAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return dataOfferingAgreements;\\r\\n    }\\r\\n\\r\\n    function retrieveAgreements (Agreement[] storage agreements, string memory _consumerPublicKey, Counter storage counter) external view returns (Agreement[] memory, uint256 k) {\\r\\n\\r\\n        Agreement[] memory consumerPublicKeyAgreements = new Agreement[](counter.consumerActiveCount[_consumerPublicKey]);\\r\\n     \\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (agreements[i].state == State.Active && agreements[i].agreementDates[1]<=block.timestamp && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))) {\\r\\n                consumerPublicKeyAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return (consumerPublicKeyAgreements, k);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DataSharingAgreement {\\r\\n\\r\\n    using AgreementLib for Agreement;\\r\\n\\r\\n    using AgreementLib for Counter;\\r\\n    \\r\\n    using RetrieveAgreementsLibrary for Agreement;\\r\\n\\r\\n    using GetAgreementsLibrary for Agreement;\\r\\n    \\r\\n    using AgreementViolationLibrary for Agreement;\\r\\n\\r\\n    Counter counter;\\r\\n\\r\\n    Agreement[] public agreements;\\r\\n\\r\\n    mapping (string => bool) isPublicKeyProvider;\\r\\n    mapping (string => bool) isPublicKeyConsumer;\\r\\n\\r\\n    event AgreementActive(string providerPublicKey, string consumerPublicKey, uint256 id);\\r\\n    event PenaltyChoices(string consumerPublicKey, uint256 id, string[3] penaltyChoices);\\r\\n    event AgreeOnPenalty(string providerPublicKey, string consumerPublicKey, uint256 id, string chosenPenalty, uint256 newEndDate, uint256 price, uint256 fee);\\r\\n    event AgreementTerminated(string providerPublicKey, string consumerPublicKey,uint256 id);\\r\\n\\r\\n    function createAgreement(\\r\\n        string memory _providerPublicKey,\\r\\n        string memory _consumerPublicKey,\\r\\n        string memory _dataExchangeAgreementHash,\\r\\n        string[2] memory _signatures,\\r\\n        DataOffering memory dataOffering,\\r\\n        string memory _purpose,\\r\\n        uint256[] memory dates,\\r\\n        IntendedUse memory intendedUse,\\r\\n        LicenseGrant memory licenseGrant,\\r\\n        PricingModel memory pricingModel,\\r\\n        TypeOfData memory typeOfData\\r\\n    ) public {\\r\\n        require (isPublicKeyProvider[_providerPublicKey] == false, \\\"Provider pK should be unique.\\\");\\r\\n        require (isPublicKeyConsumer[_consumerPublicKey] == false, \\\"Consumer pK should be unique.\\\");\\r\\n        Agreement memory agreement = AgreementLib.createAgreement(\\r\\n            _providerPublicKey,\\r\\n            _consumerPublicKey,\\r\\n            _dataExchangeAgreementHash,\\r\\n            _signatures,\\r\\n            dataOffering,\\r\\n            _purpose,\\r\\n            dates,\\r\\n            intendedUse,\\r\\n            licenseGrant,\\r\\n            pricingModel,\\r\\n            typeOfData,\\r\\n            counter\\r\\n        );\\r\\n        agreement.agreementId = agreements.length;\\r\\n        agreements.push(agreement);\\r\\n        isPublicKeyProvider[_providerPublicKey] = true;\\r\\n        isPublicKeyConsumer[_consumerPublicKey] = true;\\r\\n        emit AgreementActive(_providerPublicKey, _consumerPublicKey, agreements.length - 1);\\r\\n    }\\r\\n\\r\\n    function getAgreement(uint256 id) public view returns (Agreement memory) {\\r\\n        return agreements[id];\\r\\n    }\\r\\n\\r\\n    function getAgreementsLength() public view returns (uint256) {\\r\\n        return agreements.length;\\r\\n    } \\r\\n\\r\\n     function retrievePricingModel(uint256 _agreementId) public view returns (PricingModel memory){\\r\\n        return agreements[_agreementId].pricingModel;\\r\\n    }\\r\\n\\r\\n    function getState(uint256 id) public view returns (State) {\\r\\n        return agreements[id].state;\\r\\n    } \\r\\n\\r\\n    function checkActiveAgreements() public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = RetrieveAgreementsLibrary.checkActiveAgreements(agreements, counter);\\r\\n        return activeAgreements;\\r\\n    }\\r\\n\\r\\n     function getAgreementsByProvider(string[] memory _providerPublicKeys, bool active) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByProvider = GetAgreementsLibrary.getAgreementsByProvider(agreements,_providerPublicKeys, active, counter);\\r\\n        return agreementsByProvider;\\r\\n    }\\r\\n   \\r\\n    function getAgreementsByConsumer(string[] memory _consumerPublicKeys, bool active) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByConsumer = GetAgreementsLibrary.getAgreementsByConsumer(agreements,_consumerPublicKeys, active, counter);\\r\\n        return agreementsByConsumer;\\r\\n    }\\r\\n\\r\\n     function checkAgreementsByDataOffering(string memory _dataOfferingId) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByDataOffering = RetrieveAgreementsLibrary.checkAgreementsByDataOffering(agreements,_dataOfferingId, counter);\\r\\n        return agreementsByDataOffering;\\r\\n    }\\r\\n\\r\\n    function retrieveAgreements(string memory _consumerPublicKey) external view returns (Agreement[] memory, uint256 k) {\\r\\n        return RetrieveAgreementsLibrary.retrieveAgreements(agreements,_consumerPublicKey, counter);\\r\\n    }\\r\\n\\r\\n    function evaluateSignedResolution(uint256 _agreementId, string memory _proofType, string memory _type, string memory _resolution,\\r\\n                                string memory _dataExchangeId, uint256 _iat, string memory _iss, string memory _sub) public{ \\r\\n\\r\\n      AgreementViolationLibrary.evaluateResolution(agreements[_agreementId], _proofType, _type, _resolution, _dataExchangeId, _iat, _iss, _sub, counter);\\r\\n      emit PenaltyChoices(agreements[_agreementId].consumerPublicKey, _agreementId, agreements[_agreementId].violation.penaltyChoices);\\r\\n    }\\r\\n\\r\\n   \\r\\n\\r\\n    function terminateAgreement(uint256 _agreementId, bool terminate) public{ \\r\\n      AgreementLib.terminateAgreement(agreements[_agreementId], terminate, counter);\\r\\n      if(agreements[_agreementId].state == State.Terminated){\\r\\n            emit AgreementTerminated(agreements[_agreementId].providerPublicKey, agreements[_agreementId].consumerPublicKey, _agreementId); \\r\\n      }\\r\\n\\t}\\r\\n\\r\\n    function enforcePenalty ( uint256 _id, string memory _chosenPenalty, uint256 _price, uint256 _fee, uint256 _newEndDate) public {\\r\\n        require((agreements[_id].state == State.Violated), \\\"Agreement must be violated in order to enforce penalty\\\");\\r\\n        if(keccak256(abi.encodePacked(_chosenPenalty)) == keccak256(abi.encodePacked(\\\"Terminate\\\"))){\\r\\n            terminateAgreement(_id, true);\\r\\n        }\\r\\n        else{\\r\\n            AgreementViolationLibrary.enforcePenalty (agreements[_id], _chosenPenalty, _price, _fee, _newEndDate, counter);\\r\\n            emit AgreeOnPenalty(agreements[_id].providerPublicKey, agreements[_id].consumerPublicKey,\\r\\n                 agreements[_id].agreementId, _chosenPenalty, _newEndDate,_price, _fee);\\r\\n        }\\r\\n        \\r\\n    }\\r\\n\\r\\n    function notifyConsentRevoked( string memory _dataOfferingId) public view returns (string[] memory) {    \\r\\n        string[] memory consumers = new string[](counter.dataOfferingCount[_dataOfferingId]); \\r\\n        uint256 k = 0; \\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (keccak256(abi.encodePacked(agreements[i].dataOffering.dataOfferingId)) == keccak256(abi.encodePacked(_dataOfferingId))) {\\r\\n                consumers[k++]=agreements[i].consumerPublicKey; \\r\\n            }\\r\\n        }\\r\\n        return consumers;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x83dcfcf6120d41337e7e1f2f5985fa961fb38791ca2814e88263a39efee17d10\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806344c9af2811610097578063bd14de9611610066578063bd14de9614610218578063d8414b0214610243578063dd4be34b14610256578063ee4b2db51461026957600080fd5b806344c9af28146101b25780634dffbf0d146101d25780634f9f6fe6146101e5578063667a8beb1461020557600080fd5b80631c510ea9116100d35780631c510ea91461014b57806330937f3a1461015c57806332893afb1461017d578063375e893b1461019d57600080fd5b8063063bd15a146100fa57806311403a80146101185780631371b64a1461012b575b600080fd5b61010261027c565b60405161010f919061367f565b60405180910390f35b610102610126366004613850565b610315565b61013e610139366004613913565b6103b4565b60405161010f919061392c565b60065460405190815260200161010f565b61016f61016a36600461393f565b610672565b60405161010f929190613974565b61019061018b36600461393f565b610710565b60405161010f9190613996565b6101b06101ab3660046139f8565b6108fd565b005b6101c56101c0366004613913565b610a7d565b60405161010f9190613a28565b6101026101e036600461393f565b610aaf565b6101f86101f3366004613913565b610b4b565b60405161010f9190613a36565b6101b0610213366004613a49565b611613565b61022b610226366004613913565b61187a565b60405161010f9c9b9a99989796959493929190613aab565b610102610251366004613850565b6121d7565b6101b0610264366004613ba7565b61221a565b6101b06102773660046140ec565b612340565b604051632e4e974560e21b81526006600482015260006024820181905260609173__$75e7f22b9b402b73b18aa123ef2235f582$__9063b93a5d149060440160006040518083038186803b1580156102d357600080fd5b505af41580156102e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261030f91908101906149c4565b92915050565b6060600073__$2d66fcc483cad6bd344cfa2bce294ad753$__630abfe6d66006868660006040518563ffffffff1660e01b815260040161035894939291906149f9565b60006040518083038186803b15801561037057600080fd5b505af4158015610384573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103ac91908101906149c4565b949350505050565b6103bc612da6565b600682815481106103cf576103cf614a72565b90600052602060002090601d02016011016040518060c00160405290816000820180546103fb90614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461042790614a88565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b505050505081526020016001820154815260200160028201805461049790614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546104c390614a88565b80156105105780601f106104e557610100808354040283529160200191610510565b820191906000526020600020905b8154815290600101906020018083116104f357829003601f168201915b50505050508152602001600382015481526020016004820160405180604001604052908160008201805461054390614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461056f90614a88565b80156105bc5780601f10610591576101008083540402835291602001916105bc565b820191906000526020600020905b81548152906001019060200180831161059f57829003601f168201915b505050505081526020016001820180546105d590614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461060190614a88565b801561064e5780601f106106235761010080835404028352916020019161064e565b820191906000526020600020905b81548152906001019060200180831161063157829003601f168201915b5050509190925250505081526006919091015460ff16151560209091015292915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__631b6bcbbf60068560006040518463ffffffff1660e01b81526004016106b393929190614ac3565b60006040518083038186803b1580156106cb57600080fd5b505af41580156106df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107079190810190614aec565b91509150915091565b6060600080600501836040516107269190614b33565b90815260200160405180910390205467ffffffffffffffff81111561074d5761074d613692565b60405190808252806020026020018201604052801561078057816020015b606081526020019060019003908161076b5790505b5090506000805b6006548110156108f457846040516020016107a29190614b33565b60405160208183030381529060405280519060200120600682815481106107cb576107cb614a72565b90600052602060002090601d02016006016000016040516020016107ef9190614b4f565b6040516020818303038152906040528051906020012014156108e2576006818154811061081e5761081e614a72565b90600052602060002090601d0201600201805461083a90614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461086690614a88565b80156108b35780601f10610888576101008083540402835291602001916108b3565b820191906000526020600020905b81548152906001019060200180831161089657829003601f168201915b50505050508383806108c490614bd7565b9450815181106108d6576108d6614a72565b60200260200101819052505b806108ec81614bd7565b915050610787565b50909392505050565b73__$b6264364eb2f1db0035d8bfd2272b8857e$__63c7cdb3616006848154811061092a5761092a614a72565b6000918252602082206040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152601d9092020160048201528415156024820152604481019190915260640160006040518083038186803b15801561099557600080fd5b505af41580156109a9573d6000803e3d6000fd5b50600292506109b6915050565b600683815481106109c9576109c9614a72565b60009182526020909120600a601d90920201015460ff1660028111156109f1576109f1613260565b1415610a79577f8fdec0edc19a1eb9147642be05b326b7f5d42bf96f5ba734530bfca33bc8d7e960068381548110610a2b57610a2b614a72565b90600052602060002090601d020160010160068481548110610a4f57610a4f614a72565b90600052602060002090601d020160020184604051610a7093929190614c69565b60405180910390a15b5050565b600060068281548110610a9257610a92614a72565b60009182526020909120600a601d90920201015460ff1692915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__63e41ecb3b60068560006040518463ffffffff1660e01b8152600401610af093929190614ac3565b60006040518083038186803b158015610b0857600080fd5b505af4158015610b1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4491908101906149c4565b9392505050565b610b53612df7565b60068281548110610b6657610b66614a72565b90600052602060002090601d0201604051806101c001604052908160008201548152602001600182018054610b9a90614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc690614a88565b8015610c135780601f10610be857610100808354040283529160200191610c13565b820191906000526020600020905b815481529060010190602001808311610bf657829003601f168201915b50505050508152602001600282018054610c2c90614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5890614a88565b8015610ca55780601f10610c7a57610100808354040283529160200191610ca5565b820191906000526020600020905b815481529060010190602001808311610c8857829003601f168201915b50505050508152602001600382018054610cbe90614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610cea90614a88565b8015610d375780601f10610d0c57610100808354040283529160200191610d37565b820191906000526020600020905b815481529060010190602001808311610d1a57829003601f168201915b5050509183525050604080518082019091526020909101906004830160026000835b82821015610dfc578382018054610d6f90614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9b90614a88565b8015610de85780601f10610dbd57610100808354040283529160200191610de8565b820191906000526020600020905b815481529060010190602001808311610dcb57829003601f168201915b505050505081526020019060010190610d59565b50505050815260200160068201604051806060016040529081600082018054610e2490614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5090614a88565b8015610e9d5780601f10610e7257610100808354040283529160200191610e9d565b820191906000526020600020905b815481529060010190602001808311610e8057829003601f168201915b5050505050815260200160018201548152602001600282018054610ec090614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610eec90614a88565b8015610f395780601f10610f0e57610100808354040283529160200191610f39565b820191906000526020600020905b815481529060010190602001808311610f1c57829003601f168201915b5050505050815250508152602001600982018054610f5690614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8290614a88565b8015610fcf5780601f10610fa457610100808354040283529160200191610fcf565b820191906000526020600020905b815481529060010190602001808311610fb257829003601f168201915b5050509183525050600a82015460209091019060ff166002811115610ff657610ff6613260565b600281111561100757611007613260565b815260408051606081019182905260209092019190600b84019060039082845b8154815260200190600101908083116110275750505091835250506040805160608082018352600e85015460ff80821615158452610100808304821615156020868101919091526201000093849004831615158688015280880195909552855161020081018752600f89015480841615158252828104841615158288015293840483161515818801526301000000840483161515818601526401000000008404831615156080808301919091526501000000000085048416151560a0830152660100000000000085048416151560c08084019190915267010000000000000086048516151560e0840152680100000000000000008604851615158385015269010000000000000000008604851615156101208401526a0100000000000000000000860485161515610140840152600160581b860485161515610160840152600160601b860485161515610180840152600160681b8604851615156101a0840152600160701b8604851615156101c0840152600160781b909504841615156101e0830152878901919091528651808801885260108a0154808516151582529290920490921615159481019490945291850192909252825191820190925260118401805492909301929091829082906111fd90614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461122990614a88565b80156112765780601f1061124b57610100808354040283529160200191611276565b820191906000526020600020905b81548152906001019060200180831161125957829003601f168201915b505050505081526020016001820154815260200160028201805461129990614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546112c590614a88565b80156113125780601f106112e757610100808354040283529160200191611312565b820191906000526020600020905b8154815290600101906020018083116112f557829003601f168201915b50505050508152602001600382015481526020016004820160405180604001604052908160008201805461134590614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461137190614a88565b80156113be5780601f10611393576101008083540402835291602001916113be565b820191906000526020600020905b8154815290600101906020018083116113a157829003601f168201915b505050505081526020016001820180546113d790614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461140390614a88565b80156114505780601f1061142557610100808354040283529160200191611450565b820191906000526020600020905b81548152906001019060200180831161143357829003601f168201915b5050509190925250505081526006919091015460ff9081161515602092830152918352604080516060810190915260188501805494909201939092839116600481111561149f5761149f613260565b60048111156114b0576114b0613260565b81526020016001820180546114c490614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546114f090614a88565b801561153d5780601f106115125761010080835404028352916020019161153d565b820191906000526020600020905b81548152906001019060200180831161152057829003601f168201915b505050918352505060408051606081019091526020909101906002830160036000835b8282101561160357838201805461157690614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546115a290614a88565b80156115ef5780601f106115c4576101008083540402835291602001916115ef565b820191906000526020600020905b8154815290600101906020018083116115d257829003601f168201915b505050505081526020019060010190611560565b5050509152505090525092915050565b60016006868154811061162857611628614a72565b60009182526020909120600a601d90920201015460ff16600281111561165057611650613260565b146116c85760405162461bcd60e51b815260206004820152603660248201527f41677265656d656e74206d7573742062652076696f6c6174656420696e206f7260448201527f64657220746f20656e666f7263652070656e616c74790000000000000000000060648201526084015b60405180910390fd5b604051685465726d696e61746560b81b602082015260290160405160208183030381529060405280519060200120846040516020016117079190614b33565b6040516020818303038152906040528051906020012014156117335761172e8560016108fd565b611873565b73__$fd670a7a8cf286bc46dd07184f1e6a9adc$__63cb5893c96006878154811061176057611760614a72565b90600052602060002090601d02018686868660006040518763ffffffff1660e01b815260040161179596959493929190614c9f565b60006040518083038186803b1580156117ad57600080fd5b505af41580156117c1573d6000803e3d6000fd5b505050507f6a5b41877c1e19e7405feb10468979239b83616b44fef14f87bc82641810bcde600686815481106117f9576117f9614a72565b90600052602060002090601d02016001016006878154811061181d5761181d614a72565b90600052602060002090601d02016002016006888154811061184157611841614a72565b90600052602060002090601d0201600001548785888860405161186a9796959493929190614cdd565b60405180910390a15b5050505050565b6006818154811061188a57600080fd5b60009182526020909120601d909102018054600182018054919350906118af90614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546118db90614a88565b80156119285780601f106118fd57610100808354040283529160200191611928565b820191906000526020600020905b81548152906001019060200180831161190b57829003601f168201915b50505050509080600201805461193d90614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461196990614a88565b80156119b65780601f1061198b576101008083540402835291602001916119b6565b820191906000526020600020905b81548152906001019060200180831161199957829003601f168201915b5050505050908060030180546119cb90614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546119f790614a88565b8015611a445780601f10611a1957610100808354040283529160200191611a44565b820191906000526020600020905b815481529060010190602001808311611a2757829003601f168201915b50505050509080600601604051806060016040529081600082018054611a6990614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9590614a88565b8015611ae25780601f10611ab757610100808354040283529160200191611ae2565b820191906000526020600020905b815481529060010190602001808311611ac557829003601f168201915b5050505050815260200160018201548152602001600282018054611b0590614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3190614a88565b8015611b7e5780601f10611b5357610100808354040283529160200191611b7e565b820191906000526020600020905b815481529060010190602001808311611b6157829003601f168201915b50505050508152505090806009018054611b9790614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611bc390614a88565b8015611c105780601f10611be557610100808354040283529160200191611c10565b820191906000526020600020905b815481529060010190602001808311611bf357829003601f168201915b505050600a8401546040805160608082018352600e88015460ff818116151584526101008083048216151560208087019190915262010000938490048316151586880152865161020081018852600f8d0154808516151582528381048516151582840152948504841615158189015263010000008504841615159581019590955264010000000084048316151560808601526501000000000084048316151560a0860152660100000000000084048316151560c08087019190915267010000000000000085048416151560e0870152680100000000000000008504841615158684015269010000000000000000008504841615156101208701526a0100000000000000000000850484161515610140870152600160581b850484161515610160870152600160601b850484161515610180870152600160681b8504841615156101a0870152600160701b8504841615156101c0870152600160781b909404831615156101e08601528651808801885260108d015480851615158252929092048316151590820152855192830190955260118a018054999a9190961698939750919550929390929182908290611dc490614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611df090614a88565b8015611e3d5780601f10611e1257610100808354040283529160200191611e3d565b820191906000526020600020905b815481529060010190602001808311611e2057829003601f168201915b5050505050815260200160018201548152602001600282018054611e6090614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611e8c90614a88565b8015611ed95780601f10611eae57610100808354040283529160200191611ed9565b820191906000526020600020905b815481529060010190602001808311611ebc57829003601f168201915b505050505081526020016003820154815260200160048201604051806040016040529081600082018054611f0c90614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611f3890614a88565b8015611f855780601f10611f5a57610100808354040283529160200191611f85565b820191906000526020600020905b815481529060010190602001808311611f6857829003601f168201915b50505050508152602001600182018054611f9e90614a88565b80601f0160208091040260200160405190810160405280929190818152602001828054611fca90614a88565b80156120175780601f10611fec57610100808354040283529160200191612017565b820191906000526020600020905b815481529060010190602001808311611ffa57829003601f168201915b5050509190925250505081526006919091015460ff9081161515602090920191909152604080516060810190915260188401805493949391929091839116600481111561206657612066613260565b600481111561207757612077613260565b815260200160018201805461208b90614a88565b80601f01602080910402602001604051908101604052809291908181526020018280546120b790614a88565b80156121045780601f106120d957610100808354040283529160200191612104565b820191906000526020600020905b8154815290600101906020018083116120e757829003601f168201915b505050918352505060408051606081019091526020909101906002830160036000835b828210156121ca57838201805461213d90614a88565b80601f016020809104026020016040519081016040528092919081815260200182805461216990614a88565b80156121b65780601f1061218b576101008083540402835291602001916121b6565b820191906000526020600020905b81548152906001019060200180831161219957829003601f168201915b505050505081526020019060010190612127565b505050508152505090508c565b6060600073__$2d66fcc483cad6bd344cfa2bce294ad753$__63d0aed2c16006868660006040518563ffffffff1660e01b815260040161035894939291906149f9565b73__$fd670a7a8cf286bc46dd07184f1e6a9adc$__6311a55ede60068a8154811061224757612247614a72565b90600052602060002090601d02018989898989898960006040518a63ffffffff1660e01b815260040161228299989796959493929190614d3c565b60006040518083038186803b15801561229a57600080fd5b505af41580156122ae573d6000803e3d6000fd5b505050507ff1acc7c95db58afeb3d94de0a26290e01e681eaeae56c25b1115faf2541227f2600689815481106122e6576122e6614a72565b90600052602060002090601d02016002018960068b8154811061230b5761230b614a72565b90600052602060002090601d020160180160020160405161232e93929190614dd8565b60405180910390a15050505050505050565b60078b6040516123509190614b33565b9081526040519081900360200190205460ff16156123b05760405162461bcd60e51b815260206004820152601d60248201527f50726f766964657220704b2073686f756c6420626520756e697175652e00000060448201526064016116bf565b60088a6040516123c09190614b33565b9081526040519081900360200190205460ff16156124205760405162461bcd60e51b815260206004820152601d60248201527f436f6e73756d657220704b2073686f756c6420626520756e697175652e00000060448201526064016116bf565b60006124378c8c8c8c8c8c8c8c8c8c8c6000612a34565b600680548083526001810182556000919091528151601d9091027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101918255602080840151805194955085946124b5937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4001929190910190612f54565b50604082015180516124d1916002840191602090910190612f54565b50606082015180516124ed916003840191602090910190612f54565b5060808201516125039060048301906002612fd8565b5060a082015180518051600684019161252191839160200190612f54565b506020828101516001830155604083015180516125449260028501920190612f54565b50505060c08201518051612562916009840191602090910190612f54565b5060e0820151600a8201805460ff1916600183600281111561258657612586613260565b02179055506101008201516125a190600b8301906003613024565b5061012082015181600e0160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff021916908315150217905550505061014082015181600f0160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160000160026101000a81548160ff02191690831515021790555060608201518160000160036101000a81548160ff02191690831515021790555060808201518160000160046101000a81548160ff02191690831515021790555060a08201518160000160056101000a81548160ff02191690831515021790555060c08201518160000160066101000a81548160ff02191690831515021790555060e08201518160000160076101000a81548160ff0219169083151502179055506101008201518160000160086101000a81548160ff0219169083151502179055506101208201518160000160096101000a81548160ff02191690831515021790555061014082015181600001600a6101000a81548160ff02191690831515021790555061016082015181600001600b6101000a81548160ff02191690831515021790555061018082015181600001600c6101000a81548160ff0219169083151502179055506101a082015181600001600d6101000a81548160ff0219169083151502179055506101c082015181600001600e6101000a81548160ff0219169083151502179055506101e082015181600001600f6101000a81548160ff02191690831515021790555050506101608201518160100160008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548160ff0219169083151502179055505050610180820151816011016000820151816000019080519060200190612894929190612f54565b506020828101516001830155604083015180516128b79260028501920190612f54565b506060820151600382015560808201518051805160048401916128df91839160200190612f54565b5060208281015180516128f89260018501920190612f54565b50505060a091909101516006909101805491151560ff199283161790556101a0830151805160188401805492939092839116600183600481111561293e5761293e613260565b0217905550602082810151805161295b9260018501920190612f54565b5060408201516129719060028301906003613051565b5050505050600160078d6040516129889190614b33565b908152604051908190036020018120805492151560ff19909316929092179091556001906008906129ba908e90614b33565b908152604051908190036020019020805491151560ff199092169190911790556006547f40f080228d46fb72660eddafe315e4a5b47df236dc33b76fcd122bcbea89b01d908d908d90612a0f90600190614e3d565b604051612a1e93929190614e54565b60405180910390a1505050505050505050505050565b612a3c612df7565b60208181018e905260408083018e9052606083018d9052608083018c90528a5160a084018051919091528b8301518151909301929092528a8101519151015260c08101889052600060e082018190528751889190612a9c57612a9c614a72565b6020026020010151816101000151600060038110612abc57612abc614a72565b6020020152865187906001908110612ad657612ad6614a72565b6020026020010151816101000151600160038110612af657612af6614a72565b602002015261010081015151875188906001908110612b1757612b17614a72565b60200260200101511015612b7d5760405162461bcd60e51b815260206004820152602760248201527f53746172742064617465206d757374206265206166746572206372656174696f60448201526637103230ba329760c91b60648201526084016116bf565b86600181518110612b9057612b90614a72565b602002602001015187600281518110612bab57612bab614a72565b602002602001015111612c0b5760405162461bcd60e51b815260206004820152602260248201527f456e642064617465206d75737420626520616674657220737461727420646174604482015261329760f11b60648201526084016116bf565b86600281518110612c1e57612c1e614a72565b6020026020010151816101000151600260038110612c3e57612c3e614a72565b602090810291909101919091526101208201879052610140820186905261018082018590528351610160830180519115159091528482015190519015159101528154826000612c8c83614bd7565b9190505550816001018d604051612ca39190614b33565b9081526040519081900360200190208054906000612cc083614bd7565b9190505550816003018c604051612cd79190614b33565b9081526040519081900360200190208054906000612cf483614bd7565b9190505550816002018d604051612d0b9190614b33565b9081526040519081900360200190208054906000612d2883614bd7565b9190505550816004018c604051612d3f9190614b33565b9081526040519081900360200190208054906000612d5c83614bd7565b909155505088516040516005840191612d7491614b33565b9081526040519081900360200190208054906000612d9183614bd7565b91905055509c9b505050505050505050505050565b6040518060c0016040528060608152602001600081526020016060815260200160008152602001612dea604051806040016040528060608152602001606081525090565b8152600060209091015290565b604051806101c0016040528060008152602001606081526020016060815260200160608152602001612e27613091565b8152602001612e5060405180606001604052806060815260200160008152602001606081525090565b81526060602082015260400160008152602001612e6b6130b8565b81526040805160608101825260008082526020828101829052928201529101908152604080516102008101825260008082526020828101829052928201819052606082018190526080820181905260a0820181905260c0820181905260e08201819052610100820181905261012082018190526101408201819052610160820181905261018082018190526101a082018190526101c082018190526101e08201529101908152602001612f3560405180604001604052806000151581526020016000151581525090565b8152602001612f42612da6565b8152602001612f4f6130d6565b905290565b828054612f6090614a88565b90600052602060002090601f016020900481019282612f825760008555612fc8565b82601f10612f9b57805160ff1916838001178555612fc8565b82800160010185558215612fc8579182015b82811115612fc8578251825591602001919060010190612fad565b50612fd49291506130f5565b5090565b8260028101928215613018579160200282015b828111156130185782518051613008918491602090910190612f54565b5091602001919060010190612feb565b50612fd492915061310a565b8260038101928215612fc85791602002820182811115612fc8578251825591602001919060010190612fad565b8260038101928215613018579160200282015b828111156130185782518051613081918491602090910190612f54565b5091602001919060010190613064565b60405180604001604052806002905b60608152602001906001900390816130a05790505090565b60405180606001604052806003906020820280368337509192915050565b6040805160608082018352600082526020820152908101612f4f613127565b5b80821115612fd457600081556001016130f6565b80821115612fd457600061311e8282613141565b5060010161310a565b6040805160608082019092529081526002602082016130a0565b50805461314d90614a88565b6000825580601f1061315d575050565b601f01602090049060005260206000209081019061317b91906130f5565b50565b60005b83811015613199578181015183820152602001613181565b838111156131a8576000848401525b50505050565b600081518084526131c681602086016020860161317e565b601f01601f19169290920160200192915050565b600082604081018360005b60028110156132145783830387526131fe8383516131ae565b60209788019790935091909101906001016131e5565b509095945050505050565b600081516060845261323460608501826131ae565b9050602083015160208501526040830151848203604086015261325782826131ae565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b6003811061328657613286613260565b9052565b8060005b60038110156131a857815184526020938401939091019060010161328e565b80511515825260208101516132c6602084018215159052565b5060408101516132da604084018215159052565b5060608101516132ee606084018215159052565b506080810151613302608084018215159052565b5060a081015161331660a084018215159052565b5060c081015161332a60c084018215159052565b5060e081015161333e60e084018215159052565b5061010081810151151590830152610120808201511515908301526101408082015115159083015261016080820151151590830152610180808201511515908301526101a0808201511515908301526101c0808201511515908301526101e080820151801515828501526131a8565b6000815160c084526133c260c08501826131ae565b905060208301516020850152604083015184820360408601526133e582826131ae565b915050606083015160608501526080830151848203608086015280516040835261341260408401826131ae565b905060208201519150828103602084015261342d81836131ae565b9250505060a0830151151560a08501528091505092915050565b600081516005811061345b5761345b613260565b8084525060208083015160608286015261347860608601826131ae565b905060408401518582036040870152818290506060830160005b60038110156134bd5784820383526134ab8285516131ae565b93860193928601929150600101613492565b50979650505050505050565b60006104408251845260208301518160208601526134e9828601826131ae565b9150506040830151848203604086015261350382826131ae565b9150506060830151848203606086015261351d82826131ae565b9150506080830151848203608086015261353782826131da565b91505060a083015184820360a0860152613551828261321f565b91505060c083015184820360c086015261356b82826131ae565b91505060e083015161358060e0860182613276565b50610100808401516135948287018261328a565b50506101208301516101606135c5818701838051151582526020808201511515908301526040908101511515910152565b61014085015191506135db6101c08701836132ad565b840151805115156103c08701526020015115156103e08601525061018083015184820361040086015261360e82826133ad565b9150506101a08301518482036104208601526132578282613447565b600081518084526020808501808196508360051b8101915082860160005b858110156136725782840389526136608483516134c9565b98850198935090840190600101613648565b5091979650505050505050565b602081526000610b44602083018461362a565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156136cb576136cb613692565b60405290565b604051610200810167ffffffffffffffff811182821017156136cb576136cb613692565b6040805190810167ffffffffffffffff811182821017156136cb576136cb613692565b60405160c0810167ffffffffffffffff811182821017156136cb576136cb613692565b6040516101c0810167ffffffffffffffff811182821017156136cb576136cb613692565b604051601f8201601f1916810167ffffffffffffffff8111828210171561378857613788613692565b604052919050565b600067ffffffffffffffff8211156137aa576137aa613692565b5060051b60200190565b600067ffffffffffffffff8211156137ce576137ce613692565b50601f01601f191660200190565b600082601f8301126137ed57600080fd5b81356138006137fb826137b4565b61375f565b81815284602083860101111561381557600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461317b57600080fd5b803561384b81613832565b919050565b6000806040838503121561386357600080fd5b823567ffffffffffffffff8082111561387b57600080fd5b818501915085601f83011261388f57600080fd5b8135602061389f6137fb83613790565b82815260059290921b840181019181810190898411156138be57600080fd5b8286015b848110156138f6578035868111156138da5760008081fd5b6138e88c86838b01016137dc565b8452509183019183016138c2565b5096506139069050878201613840565b9450505050509250929050565b60006020828403121561392557600080fd5b5035919050565b602081526000610b4460208301846133ad565b60006020828403121561395157600080fd5b813567ffffffffffffffff81111561396857600080fd5b6103ac848285016137dc565b604081526000613987604083018561362a565b90508260208301529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156139eb57603f198886030184526139d98583516131ae565b945092850192908501906001016139bd565b5092979650505050505050565b60008060408385031215613a0b57600080fd5b823591506020830135613a1d81613832565b809150509250929050565b6020810161030f8284613276565b602081526000610b4460208301846134c9565b600080600080600060a08688031215613a6157600080fd5b85359450602086013567ffffffffffffffff811115613a7f57600080fd5b613a8b888289016137dc565b959895975050505060408401359360608101359360809091013592509050565b60006103c08e8352806020840152613ac58184018f6131ae565b90508281036040840152613ad9818e6131ae565b90508281036060840152613aed818d6131ae565b90508281036080840152613b01818c61321f565b905082810360a0840152613b15818b6131ae565b9050613b2460c084018a613276565b8751151560e08401526020880151151561010084015260408801511515610120840152613b556101408401886132ad565b8551151561034084015260208601511515610360840152828103610380840152613b7f81866133ad565b90508281036103a0840152613b948185613447565b9f9e505050505050505050505050505050565b600080600080600080600080610100898b031215613bc457600080fd5b88359750602089013567ffffffffffffffff80821115613be357600080fd5b613bef8c838d016137dc565b985060408b0135915080821115613c0557600080fd5b613c118c838d016137dc565b975060608b0135915080821115613c2757600080fd5b613c338c838d016137dc565b965060808b0135915080821115613c4957600080fd5b613c558c838d016137dc565b955060a08b0135945060c08b0135915080821115613c7257600080fd5b613c7e8c838d016137dc565b935060e08b0135915080821115613c9457600080fd5b50613ca18b828c016137dc565b9150509295985092959890939650565b600082601f830112613cc257600080fd5b613cca6136f5565b806040840185811115613cdc57600080fd5b845b8181101561321457803567ffffffffffffffff811115613cfe5760008081fd5b613d0a888289016137dc565b85525060209384019301613cde565b600060608284031215613d2b57600080fd5b613d336136a8565b9050813567ffffffffffffffff80821115613d4d57600080fd5b613d59858386016137dc565b8352602084013560208401526040840135915080821115613d7957600080fd5b50613d86848285016137dc565b60408301525092915050565b600082601f830112613da357600080fd5b81356020613db36137fb83613790565b82815260059290921b84018101918181019086841115613dd257600080fd5b8286015b84811015613ded5780358352918301918301613dd6565b509695505050505050565b600060608284031215613e0a57600080fd5b613e126136a8565b90508135613e1f81613832565b81526020820135613e2f81613832565b60208201526040820135613e4281613832565b604082015292915050565b60006102008284031215613e6057600080fd5b613e686136d1565b9050613e7382613840565b8152613e8160208301613840565b6020820152613e9260408301613840565b6040820152613ea360608301613840565b6060820152613eb460808301613840565b6080820152613ec560a08301613840565b60a0820152613ed660c08301613840565b60c0820152613ee760e08301613840565b60e0820152610100613efa818401613840565b90820152610120613f0c838201613840565b90820152610140613f1e838201613840565b90820152610160613f30838201613840565b90820152610180613f42838201613840565b908201526101a0613f54838201613840565b908201526101c0613f66838201613840565b908201526101e0613f78838201613840565b9082015292915050565b600060408284031215613f9457600080fd5b613f9c6136f5565b9050813567ffffffffffffffff80821115613fb657600080fd5b613fc2858386016137dc565b83526020840135915080821115613fd857600080fd5b50613fe5848285016137dc565b60208301525092915050565b600060c0828403121561400357600080fd5b61400b613718565b9050813567ffffffffffffffff8082111561402557600080fd5b614031858386016137dc565b835260208401356020840152604084013591508082111561405157600080fd5b61405d858386016137dc565b604084015260608401356060840152608084013591508082111561408057600080fd5b5061408d84828501613f82565b60808301525061409f60a08301613840565b60a082015292915050565b6000604082840312156140bc57600080fd5b6140c46136f5565b905081356140d181613832565b815260208201356140e181613832565b602082015292915050565b60008060008060008060008060008060006103a08c8e03121561410e57600080fd5b67ffffffffffffffff808d35111561412557600080fd5b6141328e8e358f016137dc565b9b508060208e0135111561414557600080fd5b6141558e60208f01358f016137dc565b9a508060408e0135111561416857600080fd5b6141788e60408f01358f016137dc565b99508060608e0135111561418b57600080fd5b61419b8e60608f01358f01613cb1565b98508060808e013511156141ae57600080fd5b6141be8e60808f01358f01613d19565b97508060a08e013511156141d157600080fd5b6141e18e60a08f01358f016137dc565b96508060c08e013511156141f457600080fd5b6142048e60c08f01358f01613d92565b95506142138e60e08f01613df8565b94506142238e6101408f01613e4d565b9350806103408e0135111561423757600080fd5b506142498d6103408e01358e01613ff1565b91506142598d6103608e016140aa565b90509295989b509295989b9093969950565b600082601f83011261427c57600080fd5b815161428a6137fb826137b4565b81815284602083860101111561429f57600080fd5b6103ac82602083016020870161317e565b600082601f8301126142c157600080fd5b6142c96136f5565b8060408401858111156142db57600080fd5b845b8181101561321457805167ffffffffffffffff8111156142fd5760008081fd5b6143098882890161426b565b855250602093840193016142dd565b60006060828403121561432a57600080fd5b6143326136a8565b9050815167ffffffffffffffff8082111561434c57600080fd5b6143588583860161426b565b835260208401516020840152604084015191508082111561437857600080fd5b50613d868482850161426b565b80516003811061384b57600080fd5b600082601f8301126143a557600080fd5b6143ad6136a8565b8060608401858111156143bf57600080fd5b845b818110156132145780518452602093840193016143c1565b805161384b81613832565b6000606082840312156143f657600080fd5b6143fe6136a8565b9050815161440b81613832565b8152602082015161441b81613832565b60208201526040820151613e4281613832565b6000610200828403121561444157600080fd5b6144496136d1565b9050614454826143d9565b8152614462602083016143d9565b6020820152614473604083016143d9565b6040820152614484606083016143d9565b6060820152614495608083016143d9565b60808201526144a660a083016143d9565b60a08201526144b760c083016143d9565b60c08201526144c860e083016143d9565b60e08201526101006144db8184016143d9565b908201526101206144ed8382016143d9565b908201526101406144ff8382016143d9565b908201526101606145118382016143d9565b908201526101806145238382016143d9565b908201526101a06145358382016143d9565b908201526101c06145478382016143d9565b908201526101e0613f788382016143d9565b60006040828403121561456b57600080fd5b6145736136f5565b9050815161458081613832565b815260208201516140e181613832565b6000604082840312156145a257600080fd5b6145aa6136f5565b9050815167ffffffffffffffff808211156145c457600080fd5b6145d08583860161426b565b835260208401519150808211156145e657600080fd5b50613fe58482850161426b565b600060c0828403121561460557600080fd5b61460d613718565b9050815167ffffffffffffffff8082111561462757600080fd5b6146338583860161426b565b835260208401516020840152604084015191508082111561465357600080fd5b61465f8583860161426b565b604084015260608401516060840152608084015191508082111561468257600080fd5b5061468f84828501614590565b60808301525061409f60a083016143d9565b6000606082840312156146b357600080fd5b6146bb6136a8565b90508151600581106146cc57600080fd5b815260208281015167ffffffffffffffff808211156146ea57600080fd5b6146f68683870161426b565b83850152604085015191508082111561470e57600080fd5b818501915085601f83011261472257600080fd5b61472a6136a8565b80606084018881111561473c57600080fd5b845b81811015614770578051858111156147565760008081fd5b6147628b82890161426b565b85525092860192860161473e565b50506040860152509295945050505050565b600082601f83011261479357600080fd5b815160206147a36137fb83613790565b82815260059290921b840181019181810190868411156147c257600080fd5b8286015b84811015613ded57805167ffffffffffffffff808211156147e75760008081fd5b90880190610440828b03601f19018113156148025760008081fd5b61480a61373b565b878401518152604080850151848111156148245760008081fd5b6148328e8b8389010161426b565b8a840152506060808601518581111561484b5760008081fd5b6148598f8c838a010161426b565b83850152506080915081860151858111156148745760008081fd5b6148828f8c838a010161426b565b82850152505060a0808601518581111561489c5760008081fd5b6148aa8f8c838a01016142b0565b838501525060c0915081860151858111156148c55760008081fd5b6148d38f8c838a0101614318565b82850152505060e080860151858111156148ed5760008081fd5b6148fb8f8c838a010161426b565b83850152506101009150614910828701614385565b908301526101206149238e878301614394565b8284015261018091506149388e8388016143e4565b9083015261494a8d6101e0870161442e565b61014083015261495e8d6103e08701614559565b610160830152610420850151848111156149785760008081fd5b6149868e8b838901016145f3565b828401525050818401519150828211156149a05760008081fd5b6149ae8c89848701016146a1565b6101a082015286525050509183019183016147c6565b6000602082840312156149d657600080fd5b815167ffffffffffffffff8111156149ed57600080fd5b6103ac84828501614782565b600060808201868352602060808185015281875180845260a08601915060a08160051b870101935082890160005b82811015614a5557609f19888703018452614a438683516131ae565b95509284019290840190600101614a27565b505050509415156040840152606090920192909252949350505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680614a9c57607f821691505b60208210811415614abd57634e487b7160e01b600052602260045260246000fd5b50919050565b838152606060208201526000614adc60608301856131ae565b9050826040830152949350505050565b60008060408385031215614aff57600080fd5b825167ffffffffffffffff811115614b1657600080fd5b614b2285828601614782565b925050602083015190509250929050565b60008251614b4581846020870161317e565b9190910192915050565b6000808354614b5d81614a88565b60018281168015614b755760018114614b8657614bb5565b60ff19841687528287019450614bb5565b8760005260208060002060005b85811015614bac5781548a820152908401908201614b93565b50505082870194505b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415614beb57614beb614bc1565b5060010190565b60008154614bff81614a88565b808552602060018381168015614c1c5760018114614c3057614c5e565b60ff19851688840152604088019550614c5e565b866000528260002060005b85811015614c565781548a8201860152908301908401614c3b565b890184019650505b505050505092915050565b606081526000614c7c6060830186614bf2565b8281036020840152614c8e8186614bf2565b915050826040830152949350505050565b86815260c060208201526000614cb860c08301886131ae565b90508560408301528460608301528360808301528260a0830152979650505050505050565b60e081526000614cf060e083018a614bf2565b8281036020840152614d02818a614bf2565b90508760408401528281036060840152614d1c81886131ae565b6080840196909652505060a081019290925260c090910152949350505050565b60006101208b8352806020840152614d568184018c6131ae565b90508281036040840152614d6a818b6131ae565b90508281036060840152614d7e818a6131ae565b90508281036080840152614d9281896131ae565b90508660a084015282810360c0840152614dac81876131ae565b905082810360e0840152614dc081866131ae565b915050826101008301529a9950505050505050505050565b606081526000614deb6060830186614bf2565b6020838101869052838203604085015281606081018660005b6003811015614e2e578583038452614e1c8383614bf2565b93850193925060019182019101614e04565b50909998505050505050505050565b600082821015614e4f57614e4f614bc1565b500390565b606081526000614e6760608301866131ae565b8281036020840152614c8e81866131ae56fea2646970667358221220528f21c175b9e5e96e9874e5c29f35cd68eb5813a1eeab765dcee90e94400b8d64736f6c63430008090033",
  "libraries": {
    "AgreementLib": "0xf14A88831c5E4e35807F1967e20b918Bf984d18e",
    "AgreementViolationLibrary": "0x06261880A45ee0a43E968Be616cEcf5E295F5200",
    "RetrieveAgreementsLibrary": "0x2C1482eF7f8d035dA4629917327aD71a58c6186C",
    "GetAgreementsLibrary": "0xA7c0A442Fa06b5A6a757D5c0E47C9bf93D72F6C3"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1560,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "counter",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)156_storage"
      },
      {
        "astId": 1564,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreements",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Agreement)46_storage)dyn_storage"
      },
      {
        "astId": 1568,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "isPublicKeyProvider",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      },
      {
        "astId": 1572,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "isPublicKeyConsumer",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_string_memory_ptr,t_bool)"
      }
    ],
    "types": {
      "t_array(t_string_storage)2_storage": {
        "base": "t_string_storage",
        "encoding": "inplace",
        "label": "string[2]",
        "numberOfBytes": "64"
      },
      "t_array(t_string_storage)3_storage": {
        "base": "t_string_storage",
        "encoding": "inplace",
        "label": "string[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_struct(Agreement)46_storage)dyn_storage": {
        "base": "t_struct(Agreement)46_storage",
        "encoding": "dynamic_array",
        "label": "struct Agreement[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)6": {
        "encoding": "inplace",
        "label": "enum State",
        "numberOfBytes": "1"
      },
      "t_enum(ViolationType)123": {
        "encoding": "inplace",
        "label": "enum ViolationType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_bool)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Agreement)46_storage": {
        "encoding": "inplace",
        "label": "struct Agreement",
        "members": [
          {
            "astId": 8,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 10,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerPublicKey",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerPublicKey",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 14,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataExchangeAgreementHash",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "signatures",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_string_storage)2_storage"
          },
          {
            "astId": 21,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOffering",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(DataOffering)58_storage"
          },
          {
            "astId": 23,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "purpose",
            "offset": 0,
            "slot": "9",
            "type": "t_string_storage"
          },
          {
            "astId": 26,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "state",
            "offset": 0,
            "slot": "10",
            "type": "t_enum(State)6"
          },
          {
            "astId": 30,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementDates",
            "offset": 0,
            "slot": "11",
            "type": "t_array(t_uint256)3_storage"
          },
          {
            "astId": 33,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "intendedUse",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(IntendedUse)65_storage"
          },
          {
            "astId": 36,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "licenseGrant",
            "offset": 0,
            "slot": "15",
            "type": "t_struct(LicenseGrant)98_storage"
          },
          {
            "astId": 39,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "typeOfData",
            "offset": 0,
            "slot": "16",
            "type": "t_struct(TypeOfData)51_storage"
          },
          {
            "astId": 42,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "pricingModel",
            "offset": 0,
            "slot": "17",
            "type": "t_struct(PricingModel)112_storage"
          },
          {
            "astId": 45,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "violation",
            "offset": 0,
            "slot": "24",
            "type": "t_struct(Violation)133_storage"
          }
        ],
        "numberOfBytes": "928"
      },
      "t_struct(Counter)156_storage": {
        "encoding": "inplace",
        "label": "struct Counter",
        "members": [
          {
            "astId": 135,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "activeAgreementCount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 139,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerCount",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 143,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerActiveCount",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 147,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerCount",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 151,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerActiveCount",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 155,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingCount",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(DataOffering)58_storage": {
        "encoding": "inplace",
        "label": "struct DataOffering",
        "members": [
          {
            "astId": 53,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 55,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingVersion",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 57,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(IntendedUse)65_storage": {
        "encoding": "inplace",
        "label": "struct IntendedUse",
        "members": [
          {
            "astId": 60,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "processData",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 62,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "shareDataWithThirdParty",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 64,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "editData",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(LicenseGrant)98_storage": {
        "encoding": "inplace",
        "label": "struct LicenseGrant",
        "members": [
          {
            "astId": 67,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "transferable",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 69,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "exclusiveness",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 71,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paidUp",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 73,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "revocable",
            "offset": 3,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 75,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "processing",
            "offset": 4,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 77,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "modifying",
            "offset": 5,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 79,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "analyzing",
            "offset": 6,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 81,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "storingData",
            "offset": 7,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 83,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "storingCopy",
            "offset": 8,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 85,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "reproducing",
            "offset": 9,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 87,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "distributing",
            "offset": 10,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 89,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "loaning",
            "offset": 11,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 91,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "selling",
            "offset": 12,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 93,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "renting",
            "offset": 13,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 95,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "furtherLicensing",
            "offset": 14,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 97,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "leasing",
            "offset": 15,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(PaymentOnSubscription)117_storage": {
        "encoding": "inplace",
        "label": "struct PaymentOnSubscription",
        "members": [
          {
            "astId": 114,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "timeDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 116,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "repeat",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(PricingModel)112_storage": {
        "encoding": "inplace",
        "label": "struct PricingModel",
        "members": [
          {
            "astId": 100,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paymentType",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 102,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 104,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "currency",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 106,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "fee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 109,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paymentOnSubscription",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(PaymentOnSubscription)117_storage"
          },
          {
            "astId": 111,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "isFree",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(TypeOfData)51_storage": {
        "encoding": "inplace",
        "label": "struct TypeOfData",
        "members": [
          {
            "astId": 48,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataStream",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 50,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "personalData",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Violation)133_storage": {
        "encoding": "inplace",
        "label": "struct Violation",
        "members": [
          {
            "astId": 126,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "violationType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ViolationType)123"
          },
          {
            "astId": 128,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "issuerId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 132,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "penaltyChoices",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)3_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}