{
  "address": "0xb4b93E635a8969bCFBaC0880470Ebb619B9248dE",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementSigned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        }
      ],
      "name": "ConsentRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "penalties",
          "type": "string[]"
        }
      ],
      "name": "SignedResolutionEvaluated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "agreements",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "purpose",
          "type": "string"
        },
        {
          "internalType": "enum State",
          "name": "state",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "qualityOfData",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "characteristics",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "dataAvailability",
              "type": "bool"
            }
          ],
          "internalType": "struct Obligation",
          "name": "obligation",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "copyData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "pricingModel",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "enum ViolationType",
              "name": "violationType",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "issuerId",
              "type": "string"
            },
            {
              "internalType": "string[3]",
              "name": "penaltyChoices",
              "type": "string[3]"
            }
          ],
          "internalType": "struct Violation",
          "name": "violation",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "checkActiveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "qualityOfData",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "characteristics",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "dataAvailability",
                  "type": "bool"
                }
              ],
              "internalType": "struct Obligation",
              "name": "obligation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "checkAgreementsByConsumer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "qualityOfData",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "characteristics",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "dataAvailability",
                  "type": "bool"
                }
              ],
              "internalType": "struct Obligation",
              "name": "obligation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        }
      ],
      "name": "checkAgreementsByDataOffering",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "qualityOfData",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "characteristics",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "dataAvailability",
                  "type": "bool"
                }
              ],
              "internalType": "struct Obligation",
              "name": "obligation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "active",
          "type": "bool"
        }
      ],
      "name": "checkAgreementsByProvider",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "qualityOfData",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "characteristics",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "dataAvailability",
                  "type": "bool"
                }
              ],
              "internalType": "struct Obligation",
              "name": "obligation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeAgreementHash",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "dataOfferingId",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dataOfferingVersion",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            }
          ],
          "internalType": "struct DataOffering",
          "name": "dataOffering",
          "type": "tuple"
        },
        {
          "internalType": "string",
          "name": "_purpose",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "qualityOfData",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "characteristics",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "dataAvailability",
              "type": "bool"
            }
          ],
          "internalType": "struct Obligation",
          "name": "obligation",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "copyData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "pricingModel",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_chosenPenalty",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newEndDate",
          "type": "uint256"
        }
      ],
      "name": "enforcePenalty",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_proofType",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_type",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_resolution",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataExchangeId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_iat",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_iss",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_sub",
          "type": "string"
        }
      ],
      "name": "evaluateSignedResolution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAgreement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "qualityOfData",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "characteristics",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "dataAvailability",
                  "type": "bool"
                }
              ],
              "internalType": "struct Obligation",
              "name": "obligation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAgreementsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getState",
      "outputs": [
        {
          "internalType": "enum State",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        }
      ],
      "name": "notifyConsentRevoked",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        }
      ],
      "name": "retrieveAgreements",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "agreementId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "providerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "consumerPublicKey",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "dataExchangeAgreementHash",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "dataOfferingId",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "dataOfferingVersion",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "title",
                  "type": "string"
                }
              ],
              "internalType": "struct DataOffering",
              "name": "dataOffering",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "purpose",
              "type": "string"
            },
            {
              "internalType": "enum State",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256[3]",
              "name": "agreementDates",
              "type": "uint256[3]"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "qualityOfData",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "characteristics",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "dataAvailability",
                  "type": "bool"
                }
              ],
              "internalType": "struct Obligation",
              "name": "obligation",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "processData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "shareDataWithThirdParty",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "editData",
                  "type": "bool"
                }
              ],
              "internalType": "struct IntendedUse",
              "name": "intendedUse",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "copyData",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "transferable",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "exclusiveness",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                }
              ],
              "internalType": "struct LicenseGrant",
              "name": "licenseGrant",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "dataStream",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "personalData",
                  "type": "bool"
                }
              ],
              "internalType": "struct TypeOfData",
              "name": "typeOfData",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "paymentType",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "string",
                  "name": "currency",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "timeDuration",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "repeat",
                      "type": "string"
                    }
                  ],
                  "internalType": "struct PaymentOnSubscription",
                  "name": "paymentOnSubscription",
                  "type": "tuple"
                },
                {
                  "internalType": "bool",
                  "name": "isFree",
                  "type": "bool"
                }
              ],
              "internalType": "struct PricingModel",
              "name": "pricingModel",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "enum ViolationType",
                  "name": "violationType",
                  "type": "uint8"
                },
                {
                  "internalType": "string",
                  "name": "issuerId",
                  "type": "string"
                },
                {
                  "internalType": "string[3]",
                  "name": "penaltyChoices",
                  "type": "string[3]"
                }
              ],
              "internalType": "struct Violation",
              "name": "violation",
              "type": "tuple"
            }
          ],
          "internalType": "struct Agreement[]",
          "name": "",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "k",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        }
      ],
      "name": "retrievePricingModel",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "paymentType",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "currency",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "fee",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "timeDuration",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "repeat",
                  "type": "string"
                }
              ],
              "internalType": "struct PaymentOnSubscription",
              "name": "paymentOnSubscription",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "isFree",
              "type": "bool"
            }
          ],
          "internalType": "struct PricingModel",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        }
      ],
      "name": "signAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_agreementId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_chosenPenalty",
          "type": "string"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_providerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_consumerPublicKey",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_dataOfferingId",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_purpose",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "dates",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "qualityOfData",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "characteristics",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "dataAvailability",
              "type": "bool"
            }
          ],
          "internalType": "struct Obligation",
          "name": "obligation",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "processData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "shareDataWithThirdParty",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "editData",
              "type": "bool"
            }
          ],
          "internalType": "struct IntendedUse",
          "name": "intendedUse",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "copyData",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "transferable",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "exclusiveness",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "internalType": "struct LicenseGrant",
          "name": "licenseGrant",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "dataStream",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "personalData",
              "type": "bool"
            }
          ],
          "internalType": "struct TypeOfData",
          "name": "typeOfData",
          "type": "tuple"
        }
      ],
      "name": "updateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x36c24e90ea6dcdc916ef23460beab490c2e76f0f9b818c0a6e7bd2d164d4db7a",
  "receipt": {
    "to": null,
    "from": "0x580d142D0c2958d843499553275e427Da4Ab7Eb5",
    "contractAddress": "0xb4b93E635a8969bCFBaC0880470Ebb619B9248dE",
    "transactionIndex": 0,
    "gasUsed": "4036755",
    "logsBloom": "0x
    "blockHash": "0x0c8b6ffed2bbe5bc4ce734c0d72b89c31681d93dc1518e84211bd559fee2bb47",
    "transactionHash": "0x36c24e90ea6dcdc916ef23460beab490c2e76f0f9b818c0a6e7bd2d164d4db7a",
    "logs": [],
    "blockNumber": 531895,
    "cumulativeGasUsed": "4036755",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d58c33f96fb054993f2702aaba338f0c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementSigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"AgreementUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"}],\"name\":\"ConsentRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"penalties\",\"type\":\"string[]\"}],\"name\":\"SignedResolutionEvaluated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"agreements\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkActiveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"checkAgreementsByConsumer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"}],\"name\":\"checkAgreementsByDataOffering\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"checkAgreementsByProvider\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"}],\"name\":\"createAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_chosenPenalty\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newEndDate\",\"type\":\"uint256\"}],\"name\":\"enforcePenalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_proofType\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_type\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_resolution\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataExchangeId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_iat\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_iss\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_sub\",\"type\":\"string\"}],\"name\":\"evaluateSignedResolution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAgreement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAgreementsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getState\",\"outputs\":[{\"internalType\":\"enum State\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"}],\"name\":\"notifyConsentRevoked\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"}],\"name\":\"retrieveAgreements\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dataExchangeAgreementHash\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dataOfferingVersion\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"}],\"internalType\":\"struct DataOffering\",\"name\":\"dataOffering\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"purpose\",\"type\":\"string\"},{\"internalType\":\"enum State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256[3]\",\"name\":\"agreementDates\",\"type\":\"uint256[3]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"pricingModel\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"enum ViolationType\",\"name\":\"violationType\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"issuerId\",\"type\":\"string\"},{\"internalType\":\"string[3]\",\"name\":\"penaltyChoices\",\"type\":\"string[3]\"}],\"internalType\":\"struct Violation\",\"name\":\"violation\",\"type\":\"tuple\"}],\"internalType\":\"struct Agreement[]\",\"name\":\"\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"k\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"}],\"name\":\"retrievePricingModel\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"paymentType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"timeDuration\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"repeat\",\"type\":\"string\"}],\"internalType\":\"struct PaymentOnSubscription\",\"name\":\"paymentOnSubscription\",\"type\":\"tuple\"},{\"internalType\":\"bool\",\"name\":\"isFree\",\"type\":\"bool\"}],\"internalType\":\"struct PricingModel\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"}],\"name\":\"signAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_agreementId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_chosenPenalty\",\"type\":\"string\"}],\"name\":\"terminateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_providerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_consumerPublicKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dataOfferingId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_purpose\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"dates\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"qualityOfData\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"characteristics\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"dataAvailability\",\"type\":\"bool\"}],\"internalType\":\"struct Obligation\",\"name\":\"obligation\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"processData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"shareDataWithThirdParty\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"editData\",\"type\":\"bool\"}],\"internalType\":\"struct IntendedUse\",\"name\":\"intendedUse\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"copyData\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"transferable\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"exclusiveness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"internalType\":\"struct LicenseGrant\",\"name\":\"licenseGrant\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"dataStream\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"personalData\",\"type\":\"bool\"}],\"internalType\":\"struct TypeOfData\",\"name\":\"typeOfData\",\"type\":\"tuple\"}],\"name\":\"updateAgreement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Agreement.sol\":\"DataSharingAgreement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":500},\"remappings\":[]},\"sources\":{\"contracts/Agreement.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"hardhat/console.sol\\\";\\r\\n\\r\\nenum State {\\r\\n    Created,\\r\\n    Active,\\r\\n    Updated,\\r\\n    Violated,\\r\\n    Terminated\\r\\n}\\r\\n\\r\\nstruct Agreement {\\r\\n    uint256 agreementId;\\r\\n    string providerPublicKey;\\r\\n    string consumerPublicKey;\\r\\n    string dataExchangeAgreementHash;\\r\\n    DataOffering dataOffering;\\r\\n    string purpose;\\r\\n    State state;\\r\\n    uint256[3] agreementDates;\\r\\n    Obligation obligation;\\r\\n    IntendedUse intendedUse;\\r\\n    LicenseGrant licenseGrant;\\r\\n    TypeOfData typeOfData;\\r\\n    PricingModel pricingModel;\\r\\n    Violation violation;\\r\\n}\\r\\n\\r\\nstruct TypeOfData {\\r\\n    bool dataStream;\\r\\n    bool personalData;\\r\\n}\\r\\n\\r\\nstruct DataOffering {\\r\\n    string dataOfferingId;\\r\\n    uint256 dataOfferingVersion;\\r\\n    string title;\\r\\n}\\r\\n\\r\\n  struct Obligation {\\r\\n    uint256 qualityOfData;\\r\\n    string characteristics;\\r\\n    bool dataAvailability;\\r\\n}\\r\\n\\r\\nstruct IntendedUse {\\r\\n    bool processData;\\r\\n    bool shareDataWithThirdParty;\\r\\n    bool editData;\\r\\n}\\r\\n\\r\\nstruct LicenseGrant {\\r\\n    bool copyData;\\r\\n    bool transferable;\\r\\n    bool exclusiveness;\\r\\n    bool revocable;\\r\\n}\\r\\n\\r\\nstruct PricingModel {\\r\\n    string paymentType;\\r\\n    uint256 price;\\r\\n    string currency;\\r\\n    uint256 fee;\\r\\n    PaymentOnSubscription paymentOnSubscription;\\r\\n    bool isFree;\\r\\n}\\r\\n\\r\\nstruct PaymentOnSubscription {\\r\\n    string timeDuration;\\r\\n    string repeat;\\r\\n}\\r\\n\\r\\nenum ViolationType {\\r\\n    NotViolated,\\r\\n    PaymentNotCompleted,\\r\\n    DataNotTransferredAsDescribed,\\r\\n    DataNotAsDescribed,\\r\\n    LicenseViolated\\r\\n}\\r\\n\\r\\nstruct Violation {\\r\\n    ViolationType violationType;\\r\\n    string issuerId;\\r\\n    string[3] penaltyChoices;\\r\\n    // string chosenPenalty; \\r\\n}\\r\\n\\r\\nstruct Counter {\\r\\n    uint256 activeAgreementCount;\\r\\n    mapping (string => uint) providerCount;\\r\\n    mapping (string => uint) providerActiveCount;\\r\\n    mapping (string => uint) consumerCount;\\r\\n    mapping (string => uint) consumerActiveCount;\\r\\n    mapping (string => uint) dataOfferingCount;\\r\\n}\\r\\n\\r\\nstruct SignedResolution {\\r\\n    string proofType;\\r\\n    string resolutionType;\\r\\n    string resolution;\\r\\n    string dataExchangeId;\\r\\n    uint256 iat;\\r\\n    string iss;\\r\\n    string sub;\\r\\n}\\r\\n\\r\\nlibrary AgreementViolationLibrary {\\r\\n\\r\\n    event PenaltyTerminate(string providerPublicKey, string consumerPublicKey, uint256 id);\\r\\n    event PenaltyNewEndDate(string providerPublicKey, string consumerPublicKey, uint256 id, uint256 newEndDate);\\r\\n    event PenaltyNewEndDateAndPricing(string providerPublicKey, string consumerPublicKey, uint256 id, uint256 newEndDate, uint256 price, uint256 fee);\\r\\n    event PenaltyChoices(string[3] penaltyChoices);\\r\\n\\r\\n    function evaluateResolution(\\r\\n        Agreement storage agreement,\\r\\n        string memory _proofType,\\r\\n        string memory _type,\\r\\n        string memory _resolution,\\r\\n        string memory _dataExchangeId,\\r\\n        uint256 _iat,\\r\\n        string memory _iss,\\r\\n        string memory _sub) public{ \\r\\n\\r\\n        SignedResolution memory signedResolution;\\r\\n        signedResolution.proofType = _proofType;\\r\\n        signedResolution.resolutionType = _type;\\r\\n        signedResolution.resolution = _resolution;\\r\\n        signedResolution.dataExchangeId = _dataExchangeId;\\r\\n        signedResolution.iat = _iat;\\r\\n        signedResolution.iss = _iss;   \\r\\n        signedResolution.sub = _sub;\\r\\n\\r\\n        if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"completed\\\"))){\\r\\n            delete agreement.violation.penaltyChoices;   \\r\\n            agreement.state = State.Active;   \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"notCompleted\\\"))) { \\r\\n                issueViolation(agreement, ViolationType.DataNotTransferredAsDescribed, signedResolution.sub); \\r\\n                agreement.state = State.Violated; \\r\\n        }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"accepted\\\"))){ \\r\\n                issueViolation(agreement, ViolationType.DataNotTransferredAsDescribed, signedResolution.sub); \\r\\n                agreement.state = State.Violated; \\r\\n             }\\r\\n        else if(keccak256(abi.encodePacked(signedResolution.resolution)) == keccak256(abi.encodePacked(\\\"denied\\\"))){\\r\\n                delete agreement.violation.penaltyChoices;  \\r\\n                agreement.state = State.Active; \\r\\n        }\\r\\n\\r\\n        emit PenaltyChoices(agreement.violation.penaltyChoices);\\r\\n    }\\r\\n\\r\\n    \\r\\n    function issueViolation(Agreement storage agreement, ViolationType _violationType, string memory _issuerId) private {\\r\\n        agreement.violation = Violation(_violationType, _issuerId, [\\\"Terminate\\\", \\\"NewEndDateForAgreement\\\", \\\"NewEndDateForAgreementAndReductionOfPayment\\\"]);\\r\\n    }\\r\\n\\r\\n     function getViolation(Agreement storage agreement) public view returns (Violation memory){\\r\\n        return agreement.violation;\\r\\n    }\\r\\n   \\r\\n    function enforcePenalty (Agreement storage agreement, string memory _chosenPenalty, uint256 _price, uint256 _fee, uint256 _newEndDate) public {\\r\\n        if(agreement.violation.violationType == ViolationType.DataNotTransferredAsDescribed){\\r\\n                if (keccak256(abi.encodePacked(_chosenPenalty)) == \\\"NewEndDateForAgreement\\\"){\\r\\n                    require(_newEndDate>block.timestamp, \\\"Date must be greaten than block.timestamp\\\");\\r\\n                    agreement.agreementDates[2] = _newEndDate;\\r\\n                    emit PenaltyNewEndDate(agreement.providerPublicKey, agreement.consumerPublicKey, agreement.agreementId, _newEndDate);\\r\\n                }\\r\\n                else if (keccak256(abi.encodePacked(_chosenPenalty)) == (keccak256(abi.encodePacked(\\\"NewEndDateForAgreementAndReductionOfPayment\\\")))){\\r\\n                    require(_newEndDate>block.timestamp, \\\"Date must be greaten than block.timestamp\\\");\\r\\n                    agreement.agreementDates[2] = _newEndDate;\\r\\n                    agreement.pricingModel.price = _price;\\r\\n                    agreement.pricingModel.fee = _fee;\\r\\n                    emit PenaltyNewEndDateAndPricing(agreement.providerPublicKey, agreement.consumerPublicKey, agreement.agreementId, _newEndDate,_price, _fee);\\r\\n                }\\r\\n            agreement.state = State.Active;\\r\\n        }    \\r\\n\\r\\n    }\\r\\n}\\r\\n    \\r\\nlibrary AgreementLib {\\r\\n\\r\\n    event AgreementTerminated(string providerPublicKey, string consumerPublicKey,uint256 id);\\r\\n\\r\\n    function createAgreement(\\r\\n        string memory _providerPublicKey,\\r\\n        string memory _consumerPublicKey,\\r\\n        string memory _dataExchangeAgreementHash,\\r\\n        DataOffering memory dataOffering,\\r\\n        string memory _purpose,\\r\\n        uint256[] memory dates,\\r\\n        Obligation memory obligation,\\r\\n        IntendedUse memory intendedUse,\\r\\n        LicenseGrant memory licenseGrant,\\r\\n        PricingModel memory pricingModel,\\r\\n        TypeOfData memory typeOfData,\\r\\n        Counter storage counter\\r\\n    ) internal returns (Agreement memory agreement)\\r\\n    {\\r\\n        agreement.providerPublicKey = _providerPublicKey;\\r\\n        agreement.consumerPublicKey = _consumerPublicKey;\\r\\n        agreement.dataExchangeAgreementHash = _dataExchangeAgreementHash;\\r\\n        agreement.dataOffering.dataOfferingId = dataOffering.dataOfferingId;\\r\\n        agreement.dataOffering.dataOfferingVersion = dataOffering.dataOfferingVersion;\\r\\n        agreement.dataOffering.title = dataOffering.title;\\r\\n        agreement.purpose = _purpose;\\r\\n\\r\\n        agreement.state = State.Created;\\r\\n        agreement.agreementDates[0] = dates[0];\\r\\n        agreement.agreementDates[1] = dates[1];\\r\\n\\r\\n        require(\\r\\n            dates[1] >= agreement.agreementDates[0],\\r\\n            \\\"Start date must be after creation date.\\\"\\r\\n        );\\r\\n        require(dates[2] > dates[1], \\\"End date must be after start date.\\\");\\r\\n        agreement.agreementDates[2] = dates[2];\\r\\n        agreement.obligation = obligation;\\r\\n        agreement.intendedUse = intendedUse;\\r\\n        agreement.licenseGrant = licenseGrant;\\r\\n        agreement.pricingModel = pricingModel;\\r\\n\\r\\n        agreement.typeOfData.dataStream = typeOfData.dataStream;\\r\\n        agreement.typeOfData.personalData = typeOfData.personalData;\\r\\n\\r\\n        counter.providerCount[_providerPublicKey]++;\\r\\n        counter.consumerCount[_consumerPublicKey]++; \\r\\n        counter.dataOfferingCount[dataOffering.dataOfferingId]++;\\r\\n    \\r\\n    }\\r\\n\\r\\n    function signAgreement(Agreement[] storage agreements, uint256 _id, string memory _consumerPublicKey, Counter storage counter) public {\\r\\n        \\r\\n        require (keccak256(abi.encodePacked(agreements[_id].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey)), \\\"Not the consumer of agreement.\\\" );\\r\\n\\r\\n        if(agreements[_id].agreementDates[2]>=block.timestamp) {\\r\\n            agreements[_id].state = State.Active;\\r\\n            counter.activeAgreementCount += 1;\\r\\n            counter.providerActiveCount[agreements[_id].providerPublicKey]++;\\r\\n            counter.consumerActiveCount[_consumerPublicKey]++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function updateAgreement(Agreement storage agreement,\\r\\n                            string memory _providerPublicKey,\\r\\n                            string memory _consumerPublicKey,\\r\\n                            string memory _dataOfferingId,\\r\\n                            string memory _purpose,\\r\\n                            uint256[] memory dates,   \\r\\n                            Obligation memory obligation,\\r\\n                            IntendedUse memory intendedUse,\\r\\n                            LicenseGrant memory licenseGrant,\\r\\n                            TypeOfData memory typeOfData,\\r\\n                            Counter storage counter) public {\\r\\n\\r\\n        require (keccak256(abi.encodePacked(agreement.providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKey)), \\\"Not the provider of the agreement\\\" ); \\r\\n        \\r\\n        if(agreement.state == State.Active)\\r\\n        {\\r\\n            agreement.purpose = _purpose;\\r\\n            agreement.agreementDates[1] = dates[0];\\r\\n     \\r\\n            require ( dates[0] >= agreement.agreementDates[0], \\\"Start date must be after creation date.\\\" );\\r\\n            require ( dates[1] > dates[0], \\\"End date must be after start date.\\\" );\\r\\n            agreement.agreementDates[2] = dates[1];\\r\\n\\r\\n            agreement.obligation = obligation;\\r\\n            agreement.intendedUse = intendedUse;\\r\\n            agreement.licenseGrant = licenseGrant;\\r\\n            agreement.state = State.Updated;\\r\\n\\r\\n            counter.activeAgreementCount--;\\r\\n            counter.providerActiveCount[_providerPublicKey]--;\\r\\n            counter.consumerActiveCount[_consumerPublicKey]--;\\r\\n\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function terminateAgreement(Agreement storage agreement, string memory _chosenPenalty, Counter storage counter) public {\\r\\n        if(agreement.agreementDates[2]<=block.timestamp || keccak256(abi.encodePacked(_chosenPenalty)) == keccak256(abi.encodePacked(\\\"Terminate\\\"))){\\r\\n            if(agreement.state == State.Active){\\r\\n                counter.activeAgreementCount--;\\r\\n                counter.providerCount[agreement.providerPublicKey]--;\\r\\n                counter.consumerActiveCount[agreement.consumerPublicKey]--;\\r\\n            }     \\r\\n            agreement.state = State.Terminated;\\r\\n            emit AgreementTerminated(agreement.providerPublicKey, agreement.consumerPublicKey, agreement.agreementId);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    \\r\\n}\\r\\n\\r\\nlibrary RetrieveAgreementsLibrary {\\r\\n\\r\\n    function checkActiveAgreements (Agreement[] storage agreements, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = new Agreement[](counter.activeAgreementCount); \\r\\n        uint k = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if(agreements[i].state == State.Active) {   \\r\\n                activeAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return activeAgreements;\\r\\n    }\\r\\n\\r\\n    \\r\\n    function checkAgreementsByConsumer(Agreement[] storage agreements, string memory _consumerPublicKey, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        uint256 k = 0;\\r\\n        Agreement[] memory consumerAgreements;\\r\\n        if(active) {\\r\\n            consumerAgreements = new Agreement[](counter.consumerActiveCount[_consumerPublicKey]); \\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))){\\r\\n                    consumerAgreements[k++] = agreements[i];\\r\\n                }  \\r\\n        }\\r\\n        else {\\r\\n            consumerAgreements = new Agreement[](counter.consumerCount[_consumerPublicKey]);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                if (keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))){\\r\\n                    consumerAgreements[k++] = agreements[i];\\r\\n                }\\r\\n        }\\r\\n        return consumerAgreements;\\r\\n    }\\r\\n\\r\\n    function checkAgreementsByProvider (Agreement[] storage agreements, string memory _providerPublicKey, bool active, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        uint256 k = 0;\\r\\n        Agreement[] memory providerAgreements;\\r\\n        if(active) {\\r\\n            providerAgreements = new Agreement[](counter.providerActiveCount[_providerPublicKey]);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                if (agreements[i].state == State.Active && keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKey))){\\r\\n                    providerAgreements[k++] = agreements[i];\\r\\n                }  \\r\\n        }\\r\\n        else {\\r\\n            providerAgreements = new Agreement[](counter.providerCount[_providerPublicKey]);\\r\\n            for (uint i = 0; i < agreements.length; i++)\\r\\n                if (keccak256(abi.encodePacked(agreements[i].providerPublicKey)) == keccak256(abi.encodePacked(_providerPublicKey))){\\r\\n                    providerAgreements[k++] = agreements[i];\\r\\n                }\\r\\n        }\\r\\n        return providerAgreements;\\r\\n    }\\r\\n\\r\\n\\r\\n    function checkAgreementsByDataOffering (Agreement[] storage agreements, string memory _dataOffering, Counter storage counter) external view returns (Agreement[] memory) {\\r\\n        Agreement[] memory dataOfferingAgreements = new Agreement[](counter.dataOfferingCount[_dataOffering]);\\r\\n        uint k = 0;\\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (keccak256(abi.encodePacked(agreements[i].dataOffering.dataOfferingId)) == keccak256(abi.encodePacked(_dataOffering))) {\\r\\n                dataOfferingAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return dataOfferingAgreements;\\r\\n    }\\r\\n\\r\\n      \\r\\n    function retrieveAgreements (Agreement[] storage agreements, string memory _consumerPublicKey, Counter storage counter) external view returns (Agreement[] memory, uint256 k) {\\r\\n\\r\\n        Agreement[] memory consumerPublicKeyAgreements = new Agreement[](counter.consumerActiveCount[_consumerPublicKey]);\\r\\n     \\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (agreements[i].state == State.Active && agreements[i].agreementDates[1]<=block.timestamp && keccak256(abi.encodePacked(agreements[i].consumerPublicKey)) == keccak256(abi.encodePacked(_consumerPublicKey))) {\\r\\n                consumerPublicKeyAgreements[k++] = agreements[i];\\r\\n            }\\r\\n        }\\r\\n        return (consumerPublicKeyAgreements, k);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract DataSharingAgreement {\\r\\n\\r\\n    using AgreementLib for Agreement;\\r\\n\\r\\n    using AgreementLib for Counter;\\r\\n    \\r\\n    using RetrieveAgreementsLibrary for Agreement;\\r\\n    \\r\\n    using AgreementViolationLibrary for Agreement;\\r\\n\\r\\n    Counter counter;\\r\\n\\r\\n    Agreement[] public agreements;\\r\\n\\r\\n    mapping(uint256 => string[]) agreementIdToPenalties;   \\r\\n\\r\\n    event AgreementCreated(string providerPublicKey, string consumerPublicKey, uint256 id);\\r\\n    event AgreementUpdated(string providerPublicKey, string consumerPublicKey, uint256 id);\\r\\n    event AgreementSigned(string providerPublicKey, string consumerPublicKey, uint256 id);\\r\\n    event SignedResolutionEvaluated(string providerPublicKey, string consumerPublicKey, uint256 id, string[] penalties);\\r\\n    event ConsentRevoked(string consumerPublicKey); \\r\\n\\r\\n    function createAgreement(\\r\\n        string memory _providerPublicKey,\\r\\n        string memory _consumerPublicKey,\\r\\n        string memory _dataExchangeAgreementHash,\\r\\n        DataOffering memory dataOffering,\\r\\n        string memory _purpose,\\r\\n        uint256[] memory dates,\\r\\n        Obligation memory obligation,\\r\\n        IntendedUse memory intendedUse,\\r\\n        LicenseGrant memory licenseGrant,\\r\\n        PricingModel memory pricingModel,\\r\\n        TypeOfData memory typeOfData\\r\\n    ) public {\\r\\n        Agreement memory agreement = AgreementLib.createAgreement(\\r\\n            _providerPublicKey,\\r\\n            _consumerPublicKey,\\r\\n            _dataExchangeAgreementHash,\\r\\n            dataOffering,\\r\\n            _purpose,\\r\\n            dates,\\r\\n            obligation,\\r\\n            intendedUse,\\r\\n            licenseGrant,\\r\\n            pricingModel,\\r\\n            typeOfData,\\r\\n            counter\\r\\n        );\\r\\n        agreement.agreementId = agreements.length;\\r\\n        agreements.push(agreement);\\r\\n        emit AgreementCreated(_providerPublicKey, _consumerPublicKey, agreements.length - 1);\\r\\n    }\\r\\n\\r\\n    function signAgreement(uint256 _id, string memory _consumerPublicKey) public {\\r\\n       AgreementLib.signAgreement(agreements, _id, _consumerPublicKey, counter);\\r\\n       emit AgreementSigned(agreements[_id].providerPublicKey, _consumerPublicKey, _id);\\r\\n    }\\r\\n\\r\\n     function updateAgreement(uint256 _id,\\r\\n                            string memory _providerPublicKey,\\r\\n                            string memory _consumerPublicKey,\\r\\n                            string memory _dataOfferingId,\\r\\n                            string memory _purpose,\\r\\n                            uint256[] memory dates,\\r\\n                            Obligation memory obligation,\\r\\n                            IntendedUse memory intendedUse,\\r\\n                            LicenseGrant memory licenseGrant,\\r\\n                            TypeOfData memory typeOfData) public {\\r\\n\\r\\n        AgreementLib.updateAgreement(agreements[_id], _providerPublicKey, _consumerPublicKey, _dataOfferingId, _purpose,\\r\\n                            dates, obligation, intendedUse, licenseGrant, typeOfData, counter);    \\r\\n        emit AgreementUpdated(_providerPublicKey, _consumerPublicKey, _id);\\r\\n                            \\r\\n    }\\r\\n\\r\\n    function getAgreement(uint256 id) public view returns (Agreement memory) {\\r\\n        return agreements[id];\\r\\n    }\\r\\n\\r\\n    function getAgreementsLength() public view returns (uint256) {\\r\\n        return agreements.length;\\r\\n    } \\r\\n\\r\\n    function getState(uint256 id) public view returns (State) {\\r\\n        return agreements[id].state;\\r\\n    } \\r\\n\\r\\n    function checkActiveAgreements() public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory activeAgreements = RetrieveAgreementsLibrary.checkActiveAgreements(agreements, counter);\\r\\n        return activeAgreements;\\r\\n    }\\r\\n\\r\\n    function checkAgreementsByProvider(string memory _providerPublicKey, bool active) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByProvider = RetrieveAgreementsLibrary.checkAgreementsByProvider(agreements, _providerPublicKey, active, counter);\\r\\n        return agreementsByProvider;\\r\\n    }\\r\\n\\r\\n    function checkAgreementsByConsumer(string memory _consumerPublicKey, bool active) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByConsumer = RetrieveAgreementsLibrary.checkAgreementsByConsumer(agreements,_consumerPublicKey, active, counter);\\r\\n        return agreementsByConsumer;\\r\\n    }\\r\\n\\r\\n     function checkAgreementsByDataOffering(string memory _dataOfferingId) public view returns(Agreement[] memory) {\\r\\n        Agreement[] memory agreementsByDataOffering = RetrieveAgreementsLibrary.checkAgreementsByDataOffering(agreements,_dataOfferingId, counter);\\r\\n        return agreementsByDataOffering;\\r\\n    }\\r\\n\\r\\n    function retrieveAgreements(string memory _consumerPublicKey) external view returns (Agreement[] memory, uint256 k) {\\r\\n        return RetrieveAgreementsLibrary.retrieveAgreements(agreements,_consumerPublicKey, counter);\\r\\n    }\\r\\n\\r\\n    function evaluateSignedResolution(uint256 _agreementId, string memory _proofType, string memory _type, string memory _resolution,\\r\\n                                string memory _dataExchangeId, uint256 _iat, string memory _iss, string memory _sub) public{ \\r\\n\\r\\n      AgreementViolationLibrary.evaluateResolution(agreements[_agreementId], _proofType, _type, _resolution, _dataExchangeId, _iat, _iss, _sub);\\r\\n\\t}\\r\\n\\r\\n    function retrievePricingModel(uint256 _agreementId) public view returns (PricingModel memory){\\r\\n        return agreements[_agreementId].pricingModel;\\r\\n    }\\r\\n\\r\\n    function terminateAgreement(uint256 _agreementId, string memory _chosenPenalty) public{ \\r\\n      AgreementLib.terminateAgreement(agreements[_agreementId],_chosenPenalty, counter);\\r\\n\\t}\\r\\n\\r\\n    function enforcePenalty ( uint256 _id, string memory _chosenPenalty, uint256 _price, uint256 _fee, uint256 _newEndDate) public {\\r\\n        require((agreements[_id].state == State.Violated), \\\"Agreement must be violated in order to enforce penalty\\\");\\r\\n        if(keccak256(abi.encodePacked(_chosenPenalty)) == keccak256(abi.encodePacked(\\\"Terminate\\\"))){\\r\\n            terminateAgreement(_id, _chosenPenalty);\\r\\n        }\\r\\n        else{\\r\\n            AgreementViolationLibrary.enforcePenalty (agreements[_id], _chosenPenalty, _price, _fee, _newEndDate);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function notifyConsentRevoked( string memory _dataOfferingId) public view returns (string[] memory) {    \\r\\n        string[] memory consumers = new string[](counter.dataOfferingCount[_dataOfferingId]); \\r\\n        uint256 k = 0; \\r\\n        for (uint i = 0; i < agreements.length; i++){\\r\\n            if (keccak256(abi.encodePacked(agreements[i].dataOffering.dataOfferingId)) == keccak256(abi.encodePacked(_dataOfferingId))) {\\r\\n                consumers[k++]=agreements[i].consumerPublicKey; \\r\\n            }\\r\\n        }\\r\\n        return consumers;\\r\\n    }\\r\\n\\r\\n   \\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x14bac1d35c41fb34c2189b360cc325bdd9c86f0cbbeabaf0b40f82a46db5c787\",\"license\":\"GPL-3.0\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061010b5760003560e01c80634dffbf0d116100a2578063a630518911610071578063a630518914610241578063a6d4240714610254578063bd14de9614610267578063d5461f2c14610293578063dd4be34b146102a657600080fd5b80634dffbf0d146101e85780634f9f6fe6146101fb57806365fa865f1461021b578063667a8beb1461022e57600080fd5b806330937f3a116100de57806330937f3a1461017457806332893afb1461019557806344c9af28146101b5578063482e2203146101d557600080fd5b8063063bd15a146101105780630fa6e3201461012e5780631371b64a146101435780631c510ea914610163575b600080fd5b6101186102b9565b6040516101259190613020565b60405180910390f35b61014161013c3660046133af565b610352565b005b6101566101513660046134e6565b610435565b60405161012591906134ff565b600654604051908152602001610125565b610187610182366004613512565b6106f3565b604051610125929190613547565b6101a86101a3366004613512565b610791565b6040516101259190613569565b6101c86101c33660046134e6565b61097e565b60405161012591906135cb565b6101186101e33660046135de565b6109b0565b6101186101f6366004613512565b610a4f565b61020e6102093660046134e6565b610aeb565b6040516101259190613630565b6101186102293660046135de565b6114bf565b61014161023c366004613643565b611502565b61014161024f3660046136a5565b6116b8565b6101416102623660046136a5565b611789565b61027a6102753660046134e6565b611819565b6040516101259d9c9b9a999897969594939291906136ec565b6101416102a13660046139c2565b612154565b6101416102b4366004613b41565b612527565b604051632e4e974560e21b81526006600482015260006024820181905260609173__$75e7f22b9b402b73b18aa123ef2235f582$__9063b93a5d149060440160006040518083038186803b15801561031057600080fd5b505af4158015610324573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261034c91908101906142f6565b92915050565b73__$b6264364eb2f1db0035d8bfd2272b8857e$__63bdb5044460068c8154811061037f5761037f61432b565b90600052602060002090601e02018b8b8b8b8b8b8b8b8b60006040518c63ffffffff1660e01b81526004016103be9b9a99989796959493929190614341565b60006040518083038186803b1580156103d657600080fd5b505af41580156103ea573d6000803e3d6000fd5b505050507fe45a4efc7be91ee38226641b8dfb0a53e062696831d4052b7b79903b7d39301189898c6040516104219392919061446e565b60405180910390a150505050505050505050565b61043d6128bb565b600682815481106104505761045061432b565b90600052602060002090601e02016012016040518060c001604052908160008201805461047c906144a4565b80601f01602080910402602001604051908101604052809291908181526020018280546104a8906144a4565b80156104f55780601f106104ca576101008083540402835291602001916104f5565b820191906000526020600020905b8154815290600101906020018083116104d857829003601f168201915b5050505050815260200160018201548152602001600282018054610518906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610544906144a4565b80156105915780601f1061056657610100808354040283529160200191610591565b820191906000526020600020905b81548152906001019060200180831161057457829003601f168201915b5050505050815260200160038201548152602001600482016040518060400160405290816000820180546105c4906144a4565b80601f01602080910402602001604051908101604052809291908181526020018280546105f0906144a4565b801561063d5780601f106106125761010080835404028352916020019161063d565b820191906000526020600020905b81548152906001019060200180831161062057829003601f168201915b50505050508152602001600182018054610656906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610682906144a4565b80156106cf5780601f106106a4576101008083540402835291602001916106cf565b820191906000526020600020905b8154815290600101906020018083116106b257829003601f168201915b5050509190925250505081526006919091015460ff16151560209091015292915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__631b6bcbbf60068560006040518463ffffffff1660e01b8152600401610734939291906144df565b60006040518083038186803b15801561074c57600080fd5b505af4158015610760573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107889190810190614508565b91509150915091565b6060600080600501836040516107a7919061454f565b90815260200160405180910390205467ffffffffffffffff8111156107ce576107ce613033565b60405190808252806020026020018201604052801561080157816020015b60608152602001906001900390816107ec5790505b5090506000805b6006548110156109755784604051602001610823919061454f565b604051602081830303815290604052805190602001206006828154811061084c5761084c61432b565b90600052602060002090601e0201600401600001604051602001610870919061456b565b604051602081830303815290604052805190602001201415610963576006818154811061089f5761089f61432b565b90600052602060002090601e020160020180546108bb906144a4565b80601f01602080910402602001604051908101604052809291908181526020018280546108e7906144a4565b80156109345780601f1061090957610100808354040283529160200191610934565b820191906000526020600020905b81548152906001019060200180831161091757829003601f168201915b5050505050838380610945906145f3565b9450815181106109575761095761432b565b60200260200101819052505b8061096d816145f3565b915050610808565b50909392505050565b6000600682815481106109935761099361432b565b600091825260209091206008601e90920201015460ff1692915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__635e5cf2c26006868660006040518563ffffffff1660e01b81526004016109f3949392919061460e565b60006040518083038186803b158015610a0b57600080fd5b505af4158015610a1f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a4791908101906142f6565b949350505050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__63e41ecb3b60068560006040518463ffffffff1660e01b8152600401610a90939291906144df565b60006040518083038186803b158015610aa857600080fd5b505af4158015610abc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ae491908101906142f6565b9392505050565b610af361290c565b60068281548110610b0657610b0661432b565b90600052602060002090601e0201604051806101c001604052908160008201548152602001600182018054610b3a906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610b66906144a4565b8015610bb35780601f10610b8857610100808354040283529160200191610bb3565b820191906000526020600020905b815481529060010190602001808311610b9657829003601f168201915b50505050508152602001600282018054610bcc906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf8906144a4565b8015610c455780601f10610c1a57610100808354040283529160200191610c45565b820191906000526020600020905b815481529060010190602001808311610c2857829003601f168201915b50505050508152602001600382018054610c5e906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8a906144a4565b8015610cd75780601f10610cac57610100808354040283529160200191610cd7565b820191906000526020600020905b815481529060010190602001808311610cba57829003601f168201915b5050505050815260200160048201604051806060016040529081600082018054610d00906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2c906144a4565b8015610d795780601f10610d4e57610100808354040283529160200191610d79565b820191906000526020600020905b815481529060010190602001808311610d5c57829003601f168201915b5050505050815260200160018201548152602001600282018054610d9c906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610dc8906144a4565b8015610e155780601f10610dea57610100808354040283529160200191610e15565b820191906000526020600020905b815481529060010190602001808311610df857829003601f168201915b5050505050815250508152602001600782018054610e32906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5e906144a4565b8015610eab5780601f10610e8057610100808354040283529160200191610eab565b820191906000526020600020905b815481529060010190602001808311610e8e57829003601f168201915b5050509183525050600882015460209091019060ff166004811115610ed257610ed2612c97565b6004811115610ee357610ee3612c97565b815260408051606081019182905260209092019190600984019060039082845b815481526020019060010190808311610f035750505050508152602001600c820160405180606001604052908160008201548152602001600182018054610f49906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610f75906144a4565b8015610fc25780601f10610f9757610100808354040283529160200191610fc2565b820191906000526020600020905b815481529060010190602001808311610fa557829003601f168201915b50505091835250506002919091015460ff90811615156020928301529183526040805160608082018352600f870154808616151583526101008082048716151584870152620100009182900487161515848601528786019390935283516080808201865260108a015480891615158352858104891615158389015292830488161515828701526301000000909204871615158184015284880152835180850185526011890154808816151582529390930490951615159382019390935291840191909152805160c0810190915260128401805492909301929091829082906110a9906144a4565b80601f01602080910402602001604051908101604052809291908181526020018280546110d5906144a4565b80156111225780601f106110f757610100808354040283529160200191611122565b820191906000526020600020905b81548152906001019060200180831161110557829003601f168201915b5050505050815260200160018201548152602001600282018054611145906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611171906144a4565b80156111be5780601f10611193576101008083540402835291602001916111be565b820191906000526020600020905b8154815290600101906020018083116111a157829003601f168201915b5050505050815260200160038201548152602001600482016040518060400160405290816000820180546111f1906144a4565b80601f016020809104026020016040519081016040528092919081815260200182805461121d906144a4565b801561126a5780601f1061123f5761010080835404028352916020019161126a565b820191906000526020600020905b81548152906001019060200180831161124d57829003601f168201915b50505050508152602001600182018054611283906144a4565b80601f01602080910402602001604051908101604052809291908181526020018280546112af906144a4565b80156112fc5780601f106112d1576101008083540402835291602001916112fc565b820191906000526020600020905b8154815290600101906020018083116112df57829003601f168201915b5050509190925250505081526006919091015460ff9081161515602092830152918352604080516060810190915260198501805494909201939092839116600481111561134b5761134b612c97565b600481111561135c5761135c612c97565b8152602001600182018054611370906144a4565b80601f016020809104026020016040519081016040528092919081815260200182805461139c906144a4565b80156113e95780601f106113be576101008083540402835291602001916113e9565b820191906000526020600020905b8154815290600101906020018083116113cc57829003601f168201915b505050918352505060408051606081019091526020909101906002830160036000835b828210156114af578382018054611422906144a4565b80601f016020809104026020016040519081016040528092919081815260200182805461144e906144a4565b801561149b5780601f106114705761010080835404028352916020019161149b565b820191906000526020600020905b81548152906001019060200180831161147e57829003601f168201915b50505050508152602001906001019061140c565b5050509152505090525092915050565b6060600073__$75e7f22b9b402b73b18aa123ef2235f582$__6319e5b3b76006868660006040518563ffffffff1660e01b81526004016109f3949392919061460e565b6003600686815481106115175761151761432b565b600091825260209091206008601e90920201015460ff16600481111561153f5761153f612c97565b146115b75760405162461bcd60e51b815260206004820152603660248201527f41677265656d656e74206d7573742062652076696f6c6174656420696e206f7260448201527f64657220746f20656e666f7263652070656e616c74790000000000000000000060648201526084015b60405180910390fd5b604051685465726d696e61746560b81b602082015260290160405160208183030381529060405280519060200120846040516020016115f6919061454f565b6040516020818303038152906040528051906020012014156116215761161c8585611789565b6116b1565b73__$fd670a7a8cf286bc46dd07184f1e6a9adc$__6375fcea566006878154811061164e5761164e61432b565b90600052602060002090601e0201868686866040518663ffffffff1660e01b815260040161168095949392919061463a565b60006040518083038186803b15801561169857600080fd5b505af41580156116ac573d6000803e3d6000fd5b505050505b5050505050565b604051634a4df76760e01b815273__$b6264364eb2f1db0035d8bfd2272b8857e$__90634a4df767906116f79060069086908690600090600401614670565b60006040518083038186803b15801561170f57600080fd5b505af4158015611723573d6000803e3d6000fd5b505050507faf3cbb721f27933bb22b42ea3324fba0c7cf12a6fc685cbf705ba7674aaad1b26006838154811061175b5761175b61432b565b90600052602060002090601e0201600101828460405161177d939291906146a0565b60405180910390a15050565b73__$b6264364eb2f1db0035d8bfd2272b8857e$__63625060b5600684815481106117b6576117b661432b565b90600052602060002090601e02018360006040518463ffffffff1660e01b81526004016117e5939291906144df565b60006040518083038186803b1580156117fd57600080fd5b505af4158015611811573d6000803e3d6000fd5b505050505050565b6006818154811061182957600080fd5b60009182526020909120601e9091020180546001820180549193509061184e906144a4565b80601f016020809104026020016040519081016040528092919081815260200182805461187a906144a4565b80156118c75780601f1061189c576101008083540402835291602001916118c7565b820191906000526020600020905b8154815290600101906020018083116118aa57829003601f168201915b5050505050908060020180546118dc906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611908906144a4565b80156119555780601f1061192a57610100808354040283529160200191611955565b820191906000526020600020905b81548152906001019060200180831161193857829003601f168201915b50505050509080600301805461196a906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611996906144a4565b80156119e35780601f106119b8576101008083540402835291602001916119e3565b820191906000526020600020905b8154815290600101906020018083116119c657829003601f168201915b50505050509080600401604051806060016040529081600082018054611a08906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611a34906144a4565b8015611a815780601f10611a5657610100808354040283529160200191611a81565b820191906000526020600020905b815481529060010190602001808311611a6457829003601f168201915b5050505050815260200160018201548152602001600282018054611aa4906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad0906144a4565b8015611b1d5780601f10611af257610100808354040283529160200191611b1d565b820191906000526020600020905b815481529060010190602001808311611b0057829003601f168201915b50505050508152505090806007018054611b36906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611b62906144a4565b8015611baf5780601f10611b8457610100808354040283529160200191611baf565b820191906000526020600020905b815481529060010190602001808311611b9257829003601f168201915b5050505050908060080160009054906101000a900460ff169080600c0160405180606001604052908160008201548152602001600182018054611bf1906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611c1d906144a4565b8015611c6a5780601f10611c3f57610100808354040283529160200191611c6a565b820191906000526020600020905b815481529060010190602001808311611c4d57829003601f168201915b50505091835250506002919091015460ff90811615156020928301526040805160608082018352600f87015480851615158352610100808204861615158488015262010000918290048616151584860152845160808101865260108a01548088161515825282810488161515828a01529283048716151581870152630100000090920486161515928201929092528351808501855260118901548087161515825292909204909416151594810194909452815160c081019092526012860180549596919593949391929182908290611d41906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611d6d906144a4565b8015611dba5780601f10611d8f57610100808354040283529160200191611dba565b820191906000526020600020905b815481529060010190602001808311611d9d57829003601f168201915b5050505050815260200160018201548152602001600282018054611ddd906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611e09906144a4565b8015611e565780601f10611e2b57610100808354040283529160200191611e56565b820191906000526020600020905b815481529060010190602001808311611e3957829003601f168201915b505050505081526020016003820154815260200160048201604051806040016040529081600082018054611e89906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611eb5906144a4565b8015611f025780601f10611ed757610100808354040283529160200191611f02565b820191906000526020600020905b815481529060010190602001808311611ee557829003601f168201915b50505050508152602001600182018054611f1b906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054611f47906144a4565b8015611f945780601f10611f6957610100808354040283529160200191611f94565b820191906000526020600020905b815481529060010190602001808311611f7757829003601f168201915b5050509190925250505081526006919091015460ff90811615156020909201919091526040805160608101909152601984018054939493919290918391166004811115611fe357611fe3612c97565b6004811115611ff457611ff4612c97565b8152602001600182018054612008906144a4565b80601f0160208091040260200160405190810160405280929190818152602001828054612034906144a4565b80156120815780601f1061205657610100808354040283529160200191612081565b820191906000526020600020905b81548152906001019060200180831161206457829003601f168201915b505050918352505060408051606081019091526020909101906002830160036000835b828210156121475783820180546120ba906144a4565b80601f01602080910402602001604051908101604052809291908181526020018280546120e6906144a4565b80156121335780601f1061210857610100808354040283529160200191612133565b820191906000526020600020905b81548152906001019060200180831161211657829003601f168201915b5050505050815260200190600101906120a4565b505050508152505090508d565b600061216b8c8c8c8c8c8c8c8c8c8c8c60006125c6565b600680548083526001810182556000919091528151601e9091027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101918255602080840151805194955085946121e9937ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4001929190910190612a2a565b5060408201518051612205916002840191602090910190612a2a565b5060608201518051612221916003840191602090910190612a2a565b50608082015180518051600484019161223f91839160200190612a2a565b506020828101516001830155604083015180516122629260028501920190612a2a565b50505060a08201518051612280916007840191602090910190612a2a565b5060c082015160088201805460ff191660018360048111156122a4576122a4612c97565b021790555060e08201516122be9060098301906003612aae565b506101008201518051600c830190815560208083015180516122e692600d8701920190612a2a565b506040918201516002909101805491151560ff199092169190911790556101208301518051600f840180546020808501519486015115156201000090810262ff00001996151561010090810261ff0019971515881661ffff199687161717979097161790935561014088015180516010890180548385015199840151606090940151151563010000000263ff000000199415159097029390931663ffff000019991515890292151588169386169390931791909117979097161792909217909455610160860151805160118701805492840151151590950290151590931694169390931717905561018083015180518051919260128501926123eb9284920190612a2a565b5060208281015160018301556040830151805161240e9260028501920190612a2a565b5060608201516003820155608082015180518051600484019161243691839160200190612a2a565b50602082810151805161244f9260018501920190612a2a565b50505060a091909101516006909101805491151560ff199283161790556101a0830151805160198401805492939092839116600183600481111561249557612495612c97565b021790555060208281015180516124b29260018501920190612a2a565b5060408201516124c89060028301906003612adb565b50505050507f6435418332f1be3deea10416eedb87e64daa2a2b4a284b051f39244cc3a0dfa68c8c60016006805490506125029190614730565b6040516125119392919061446e565b60405180910390a1505050505050505050505050565b73__$fd670a7a8cf286bc46dd07184f1e6a9adc$__635694954c60068a815481106125545761255461432b565b90600052602060002090601e0201898989898989896040518963ffffffff1660e01b815260040161258c989796959493929190614747565b60006040518083038186803b1580156125a457600080fd5b505af41580156125b8573d6000803e3d6000fd5b505050505050505050505050565b6125ce61290c565b60208181018e905260408083018e9052606083018d90528b51608084018051919091528c8301518151909301929092528b8101519151015260a08101899052600060c0820181905288518991906126275761262761432b565b60200260200101518160e001516000600381106126465761264661432b565b60200201528751889060019081106126605761266061432b565b60200260200101518160e0015160016003811061267f5761267f61432b565b602002015260e08101515188518990600190811061269f5761269f61432b565b602002602001015110156127055760405162461bcd60e51b815260206004820152602760248201527f53746172742064617465206d757374206265206166746572206372656174696f60448201526637103230ba329760c91b60648201526084016115ae565b876001815181106127185761271861432b565b6020026020010151886002815181106127335761273361432b565b6020026020010151116127935760405162461bcd60e51b815260206004820152602260248201527f456e642064617465206d75737420626520616674657220737461727420646174604482015261329760f11b60648201526084016115ae565b876002815181106127a6576127a661432b565b60200260200101518160e001516002600381106127c5576127c561432b565b6020908102919091019190915261010082018890526101208201879052610140820186905261018082018590528351610160830180519115159091528482015190519015159101526040516001830190612820908f9061454f565b908152604051908190036020019020805490600061283d836145f3565b9190505550816003018c604051612854919061454f565b9081526040519081900360200190208054906000612871836145f3565b9091555050895160405160058401916128899161454f565b90815260405190819003602001902080549060006128a6836145f3565b91905055509c9b505050505050505050505050565b6040518060c00160405280606081526020016000815260200160608152602001600081526020016128ff604051806040016040528060608152602001606081525090565b8152600060209091015290565b604051806101c001604052806000815260200160608152602001606081526020016060815260200161295860405180606001604052806060815260200160008152602001606081525090565b81526060602082015260400160008152602001612973612b27565b815260200161299e604051806060016040528060008152602001606081526020016000151581525090565b81526040805160608101825260008082526020828101829052928201529101908152604080516080810182526000808252602082810182905292820181905260608201529101908152602001612a0b60405180604001604052806000151581526020016000151581525090565b8152602001612a186128bb565b8152602001612a25612b45565b905290565b828054612a36906144a4565b90600052602060002090601f016020900481019282612a585760008555612a9e565b82601f10612a7157805160ff1916838001178555612a9e565b82800160010185558215612a9e579182015b82811115612a9e578251825591602001919060010190612a83565b50612aaa929150612b64565b5090565b8260038101928215612a9e5791602002820182811115612a9e578251825591602001919060010190612a83565b8260038101928215612b1b579160200282015b82811115612b1b5782518051612b0b918491602090910190612a2a565b5091602001919060010190612aee565b50612aaa929150612b79565b60405180606001604052806003906020820280368337509192915050565b6040805160608082018352600082526020820152908101612a25612b96565b5b80821115612aaa5760008155600101612b65565b80821115612aaa576000612b8d8282612bbd565b50600101612b79565b60405180606001604052806003905b6060815260200190600190039081612ba55790505090565b508054612bc9906144a4565b6000825580601f10612bd9575050565b601f016020900490600052602060002090810190612bf79190612b64565b50565b60005b83811015612c15578181015183820152602001612bfd565b83811115612c24576000848401525b50505050565b60008151808452612c42816020860160208601612bfa565b601f01601f19169290920160200192915050565b6000815160608452612c6b6060850182612c2a565b90506020830151602085015260408301518482036040860152612c8e8282612c2a565b95945050505050565b634e487b7160e01b600052602160045260246000fd5b60058110612bf757634e487b7160e01b600052602160045260246000fd5b612cd481612cad565b9052565b8060005b6003811015612c24578151845260209384019390910190600101612cdc565b805182526000602082015160606020850152612d1a6060850182612c2a565b6040938401511515949093019390935250919050565b6000815160c08452612d4560c0850182612c2a565b90506020830151602085015260408301518482036040860152612d688282612c2a565b9150506060830151606085015260808301518482036080860152805160408352612d956040840182612c2a565b9050602082015191508281036020840152612db08183612c2a565b9250505060a0830151151560a08501528091505092915050565b60008151612dd781612cad565b80845250602080830151606082860152612df46060860182612c2a565b905060408401518582036040870152818290506060830160005b6003811015612e39578482038352612e27828551612c2a565b93860193928601929150600101612e0e565b50979650505050505050565b60006102c0825184526020830151816020860152612e6582860182612c2a565b91505060408301518482036040860152612e7f8282612c2a565b91505060608301518482036060860152612e998282612c2a565b91505060808301518482036080860152612eb38282612c56565b91505060a083015184820360a0860152612ecd8282612c2a565b91505060c0830151612ee260c0860182612ccb565b5060e0830151612ef560e0860182612cd8565b5061010083015161014085830381870152612f108383612cfb565b92506101208501519150610160612f43818801848051151582526020808201511515908301526040908101511515910152565b90850151805115156101c088015260208082015115156101e089015260408201511515610200890152606090910151151561022088015290850151805115156102408801520151151561026086015250610180830151848203610280860152612fac8282612d30565b9150506101a08301518482036102a0860152612c8e8282612dca565b600082825180855260208086019550808260051b84010181860160005b8481101561301357601f19868403018952613001838351612e45565b98840198925090830190600101612fe5565b5090979650505050505050565b602081526000610ae46020830184612fc8565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561306c5761306c613033565b60405290565b6040516080810167ffffffffffffffff8111828210171561306c5761306c613033565b6040805190810167ffffffffffffffff8111828210171561306c5761306c613033565b60405160c0810167ffffffffffffffff8111828210171561306c5761306c613033565b6040516101c0810167ffffffffffffffff8111828210171561306c5761306c613033565b604051601f8201601f1916810167ffffffffffffffff8111828210171561312857613128613033565b604052919050565b600067ffffffffffffffff82111561314a5761314a613033565b50601f01601f191660200190565b600082601f83011261316957600080fd5b813561317c61317782613130565b6130ff565b81815284602083860101111561319157600080fd5b816020850160208301376000918101602001919091529392505050565b600067ffffffffffffffff8211156131c8576131c8613033565b5060051b60200190565b600082601f8301126131e357600080fd5b813560206131f3613177836131ae565b82815260059290921b8401810191818101908684111561321257600080fd5b8286015b8481101561322d5780358352918301918301613216565b509695505050505050565b8015158114612bf757600080fd5b803561325181613238565b919050565b60006060828403121561326857600080fd5b613270613049565b905081358152602082013567ffffffffffffffff81111561329057600080fd5b61329c84828501613158565b60208301525060408201356132b081613238565b604082015292915050565b6000606082840312156132cd57600080fd5b6132d5613049565b905081356132e281613238565b815260208201356132f281613238565b602082015260408201356132b081613238565b60006080828403121561331757600080fd5b61331f613072565b9050813561332c81613238565b8152602082013561333c81613238565b6020820152604082013561334f81613238565b6040820152606082013561336281613238565b606082015292915050565b60006040828403121561337f57600080fd5b613387613095565b9050813561339481613238565b815260208201356133a481613238565b602082015292915050565b6000806000806000806000806000806102008b8d0312156133cf57600080fd5b8a35995060208b013567ffffffffffffffff808211156133ee57600080fd5b6133fa8e838f01613158565b9a5060408d013591508082111561341057600080fd5b61341c8e838f01613158565b995060608d013591508082111561343257600080fd5b61343e8e838f01613158565b985060808d013591508082111561345457600080fd5b6134608e838f01613158565b975060a08d013591508082111561347657600080fd5b6134828e838f016131d2565b965060c08d013591508082111561349857600080fd5b506134a58d828e01613256565b9450506134b58c60e08d016132bb565b92506134c58c6101408d01613305565b91506134d58c6101c08d0161336d565b90509295989b9194979a5092959850565b6000602082840312156134f857600080fd5b5035919050565b602081526000610ae46020830184612d30565b60006020828403121561352457600080fd5b813567ffffffffffffffff81111561353b57600080fd5b610a4784828501613158565b60408152600061355a6040830185612fc8565b90508260208301529392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156135be57603f198886030184526135ac858351612c2a565b94509285019290850190600101613590565b5092979650505050505050565b602081016135d883612cad565b91905290565b600080604083850312156135f157600080fd5b823567ffffffffffffffff81111561360857600080fd5b61361485828601613158565b925050602083013561362581613238565b809150509250929050565b602081526000610ae46020830184612e45565b600080600080600060a0868803121561365b57600080fd5b85359450602086013567ffffffffffffffff81111561367957600080fd5b61368588828901613158565b959895975050505060408401359360608101359360809091013592509050565b600080604083850312156136b857600080fd5b82359150602083013567ffffffffffffffff8111156136d657600080fd5b6136e285828601613158565b9150509250929050565b8d81526102606020820152600061370761026083018f612c2a565b8281036040840152613719818f612c2a565b9050828103606084015261372d818e612c2a565b90508281036080840152613741818d612c56565b905082810360a0840152613755818c612c2a565b905061376460c084018b612ccb565b82810360e0840152613776818a612cfb565b88511515610100850152602089015115156101208501526040890151151561014085015290508651151561016084015260208701511515610180840152604087015115156101a0840152606087015115156101c0840152855115156101e0840152602086015115156102008401528281036102208401526137f78186612d30565b905082810361024084015261380c8185612dca565b9150509e9d5050505050505050505050505050565b60006060828403121561383357600080fd5b61383b613049565b9050813567ffffffffffffffff8082111561385557600080fd5b61386185838601613158565b835260208401356020840152604084013591508082111561388157600080fd5b5061388e84828501613158565b60408301525092915050565b6000604082840312156138ac57600080fd5b6138b4613095565b9050813567ffffffffffffffff808211156138ce57600080fd5b6138da85838601613158565b835260208401359150808211156138f057600080fd5b506138fd84828501613158565b60208301525092915050565b600060c0828403121561391b57600080fd5b6139236130b8565b9050813567ffffffffffffffff8082111561393d57600080fd5b61394985838601613158565b835260208401356020840152604084013591508082111561396957600080fd5b61397585838601613158565b604084015260608401356060840152608084013591508082111561399857600080fd5b506139a58482850161389a565b6080830152506139b760a08301613246565b60a082015292915050565b60008060008060008060008060008060006102208c8e0312156139e457600080fd5b67ffffffffffffffff808d3511156139fb57600080fd5b613a088e8e358f01613158565b9b508060208e01351115613a1b57600080fd5b613a2b8e60208f01358f01613158565b9a508060408e01351115613a3e57600080fd5b613a4e8e60408f01358f01613158565b99508060608e01351115613a6157600080fd5b613a718e60608f01358f01613821565b98508060808e01351115613a8457600080fd5b613a948e60808f01358f01613158565b97508060a08e01351115613aa757600080fd5b613ab78e60a08f01358f016131d2565b96508060c08e01351115613aca57600080fd5b613ada8e60c08f01358f01613256565b9550613ae98e60e08f016132bb565b9450613af98e6101408f01613305565b9350806101c08e01351115613b0d57600080fd5b50613b1f8d6101c08e01358e01613909565b9150613b2f8d6101e08e0161336d565b90509295989b509295989b9093969950565b600080600080600080600080610100898b031215613b5e57600080fd5b88359750602089013567ffffffffffffffff80821115613b7d57600080fd5b613b898c838d01613158565b985060408b0135915080821115613b9f57600080fd5b613bab8c838d01613158565b975060608b0135915080821115613bc157600080fd5b613bcd8c838d01613158565b965060808b0135915080821115613be357600080fd5b613bef8c838d01613158565b955060a08b0135945060c08b0135915080821115613c0c57600080fd5b613c188c838d01613158565b935060e08b0135915080821115613c2e57600080fd5b50613c3b8b828c01613158565b9150509295985092959890939650565b600082601f830112613c5c57600080fd5b8151613c6a61317782613130565b818152846020838601011115613c7f57600080fd5b610a47826020830160208701612bfa565b600060608284031215613ca257600080fd5b613caa613049565b9050815167ffffffffffffffff80821115613cc457600080fd5b613cd085838601613c4b565b8352602084015160208401526040840151915080821115613cf057600080fd5b5061388e84828501613c4b565b60058110612bf757600080fd5b805161325181613cfd565b600082601f830112613d2657600080fd5b6040516060810181811067ffffffffffffffff82111715613d4957613d49613033565b604052806060840185811115613d5e57600080fd5b845b81811015613d78578051835260209283019201613d60565b509195945050505050565b805161325181613238565b600060608284031215613da057600080fd5b613da8613049565b905081518152602082015167ffffffffffffffff811115613dc857600080fd5b613dd484828501613c4b565b60208301525060408201516132b081613238565b600060608284031215613dfa57600080fd5b613e02613049565b90508151613e0f81613238565b81526020820151613e1f81613238565b602082015260408201516132b081613238565b600060808284031215613e4457600080fd5b613e4c613072565b90508151613e5981613238565b81526020820151613e6981613238565b60208201526040820151613e7c81613238565b6040820152606082015161336281613238565b600060408284031215613ea157600080fd5b613ea9613095565b90508151613eb681613238565b815260208201516133a481613238565b600060408284031215613ed857600080fd5b613ee0613095565b9050815167ffffffffffffffff80821115613efa57600080fd5b613f0685838601613c4b565b83526020840151915080821115613f1c57600080fd5b506138fd84828501613c4b565b600060c08284031215613f3b57600080fd5b613f436130b8565b9050815167ffffffffffffffff80821115613f5d57600080fd5b613f6985838601613c4b565b8352602084015160208401526040840151915080821115613f8957600080fd5b613f9585838601613c4b565b6040840152606084015160608401526080840151915080821115613fb857600080fd5b50613fc584828501613ec6565b6080830152506139b760a08301613d83565b600060608284031215613fe957600080fd5b613ff1613049565b90508151613ffe81613cfd565b815260208281015167ffffffffffffffff8082111561401c57600080fd5b61402886838701613c4b565b83850152604085015191508082111561404057600080fd5b818501915085601f83011261405457600080fd5b61405c613049565b80606084018881111561406e57600080fd5b845b818110156140a2578051858111156140885760008081fd5b6140948b828901613c4b565b855250928601928601614070565b50506040860152509295945050505050565b600082601f8301126140c557600080fd5b815160206140d5613177836131ae565b82815260059290921b840181019181810190868411156140f457600080fd5b8286015b8481101561322d57805167ffffffffffffffff808211156141195760008081fd5b908801906102c0828b03601f19018113156141345760008081fd5b61413c6130db565b878401518152604080850151848111156141565760008081fd5b6141648e8b83890101613c4b565b8a840152506060808601518581111561417d5760008081fd5b61418b8f8c838a0101613c4b565b83850152506080915081860151858111156141a65760008081fd5b6141b48f8c838a0101613c4b565b82850152505060a080860151858111156141ce5760008081fd5b6141dc8f8c838a0101613c90565b838501525060c0915081860151858111156141f75760008081fd5b6142058f8c838a0101613c4b565b82850152505060e0614218818701613d0a565b82840152610100915061422d8e838801613d15565b9083015261016085810151858111156142465760008081fd5b6142548f8c838a0101613d8e565b8385015250610180915061426a8e838801613de8565b61012084015261427e8e6101e08801613e32565b6101408401526142928e6102608801613e8f565b908301526102a0850151848111156142aa5760008081fd5b6142b88e8b83890101613f29565b828401525050818401519150828211156142d25760008081fd5b6142e08c8984870101613fd7565b6101a082015286525050509183019183016140f8565b60006020828403121561430857600080fd5b815167ffffffffffffffff81111561431f57600080fd5b610a47848285016140b4565b634e487b7160e01b600052603260045260246000fd5b60006102208d83526020818185015261435c8285018f612c2a565b91508382036040850152614370828e612c2a565b91508382036060850152614384828d612c2a565b91508382036080850152614398828c612c2a565b84810360a08601528a51808252828c0193509082019060005b818110156143cd578451835293830193918301916001016143b1565b505084810360c08601526143e1818b612cfb565b8951151560e087015260208a0151151561010087015260408a01511515610120870152935061440f92505050565b845115156101408301526020850151151561016083015260408501511515610180830152606085015115156101a0830152835115156101c0830152602084015115156101e0830152826102008301529c9b505050505050505050505050565b6060815260006144816060830186612c2a565b82810360208401526144938186612c2a565b915050826040830152949350505050565b600181811c908216806144b857607f821691505b602082108114156144d957634e487b7160e01b600052602260045260246000fd5b50919050565b8381526060602082015260006144f86060830185612c2a565b9050826040830152949350505050565b6000806040838503121561451b57600080fd5b825167ffffffffffffffff81111561453257600080fd5b61453e858286016140b4565b925050602083015190509250929050565b60008251614561818460208701612bfa565b9190910192915050565b6000808354614579816144a4565b6001828116801561459157600181146145a2576145d1565b60ff198416875282870194506145d1565b8760005260208060002060005b858110156145c85781548a8201529084019082016145af565b50505082870194505b50929695505050505050565b634e487b7160e01b600052601160045260246000fd5b6000600019821415614607576146076145dd565b5060010190565b8481526080602082015260006146276080830186612c2a565b9315156040830152506060015292915050565b85815260a06020820152600061465360a0830187612c2a565b604083019590955250606081019290925260809091015292915050565b84815283602082015260806040820152600061468f6080830185612c2a565b905082606083015295945050505050565b6060815260008085546146b2816144a4565b80606086015260806001808416600081146146d457600181146146e857614719565b60ff1985168884015260a088019550614719565b8a60005260208060002060005b868110156147105781548b82018701529084019082016146f5565b8a018501975050505b505050505082810360208401526144938186612c2a565b600082821015614742576147426145dd565b500390565b60006101008a83528060208401526147618184018b612c2a565b90508281036040840152614775818a612c2a565b905082810360608401526147898189612c2a565b9050828103608084015261479d8188612c2a565b90508560a084015282810360c08401526147b78186612c2a565b905082810360e08401526147cb8185612c2a565b9b9a505050505050505050505056fea2646970667358221220fa127ff10da8eb6c246c6a2e6612eb31cf3f68d1bfb790e6b07c3d9857f4387a64736f6c63430008090033",
  "libraries": {
    "AgreementLib": "0x45AdA76Fd47946Da8FF33E1e3ABBf5C827D02A8D",
    "AgreementViolationLibrary": "0x7cC557BeC740FD4edeF58c7f705e89F63fe8D670",
    "RetrieveAgreementsLibrary": "0xBFA7c89cDc1e9F6890d4ef77AA0f3e071faceb50"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1629,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "counter",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)140_storage"
      },
      {
        "astId": 1633,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreements",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_struct(Agreement)47_storage)dyn_storage"
      },
      {
        "astId": 1638,
        "contract": "contracts/Agreement.sol:DataSharingAgreement",
        "label": "agreementIdToPenalties",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_array(t_string_storage)3_storage": {
        "base": "t_string_storage",
        "encoding": "inplace",
        "label": "string[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Agreement)47_storage)dyn_storage": {
        "base": "t_struct(Agreement)47_storage",
        "encoding": "dynamic_array",
        "label": "struct Agreement[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(State)8": {
        "encoding": "inplace",
        "label": "enum State",
        "numberOfBytes": "1"
      },
      "t_enum(ViolationType)107": {
        "encoding": "inplace",
        "label": "enum ViolationType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_uint256)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_string_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string[])",
        "numberOfBytes": "32",
        "value": "t_array(t_string_storage)dyn_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Agreement)47_storage": {
        "encoding": "inplace",
        "label": "struct Agreement",
        "members": [
          {
            "astId": 10,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 12,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerPublicKey",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 14,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerPublicKey",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 16,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataExchangeAgreementHash",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 19,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOffering",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(DataOffering)59_storage"
          },
          {
            "astId": 21,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "purpose",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          },
          {
            "astId": 24,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "state",
            "offset": 0,
            "slot": "8",
            "type": "t_enum(State)8"
          },
          {
            "astId": 28,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "agreementDates",
            "offset": 0,
            "slot": "9",
            "type": "t_array(t_uint256)3_storage"
          },
          {
            "astId": 31,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "obligation",
            "offset": 0,
            "slot": "12",
            "type": "t_struct(Obligation)66_storage"
          },
          {
            "astId": 34,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "intendedUse",
            "offset": 0,
            "slot": "15",
            "type": "t_struct(IntendedUse)73_storage"
          },
          {
            "astId": 37,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "licenseGrant",
            "offset": 0,
            "slot": "16",
            "type": "t_struct(LicenseGrant)82_storage"
          },
          {
            "astId": 40,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "typeOfData",
            "offset": 0,
            "slot": "17",
            "type": "t_struct(TypeOfData)52_storage"
          },
          {
            "astId": 43,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "pricingModel",
            "offset": 0,
            "slot": "18",
            "type": "t_struct(PricingModel)96_storage"
          },
          {
            "astId": 46,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "violation",
            "offset": 0,
            "slot": "25",
            "type": "t_struct(Violation)117_storage"
          }
        ],
        "numberOfBytes": "960"
      },
      "t_struct(Counter)140_storage": {
        "encoding": "inplace",
        "label": "struct Counter",
        "members": [
          {
            "astId": 119,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "activeAgreementCount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 123,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerCount",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 127,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "providerActiveCount",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 131,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerCount",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 135,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "consumerActiveCount",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          },
          {
            "astId": 139,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingCount",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_string_memory_ptr,t_uint256)"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(DataOffering)59_storage": {
        "encoding": "inplace",
        "label": "struct DataOffering",
        "members": [
          {
            "astId": 54,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingId",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 56,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataOfferingVersion",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 58,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "title",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(IntendedUse)73_storage": {
        "encoding": "inplace",
        "label": "struct IntendedUse",
        "members": [
          {
            "astId": 68,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "processData",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 70,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "shareDataWithThirdParty",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 72,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "editData",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(LicenseGrant)82_storage": {
        "encoding": "inplace",
        "label": "struct LicenseGrant",
        "members": [
          {
            "astId": 75,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "copyData",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 77,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "transferable",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 79,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "exclusiveness",
            "offset": 2,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 81,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "revocable",
            "offset": 3,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Obligation)66_storage": {
        "encoding": "inplace",
        "label": "struct Obligation",
        "members": [
          {
            "astId": 61,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "qualityOfData",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 63,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "characteristics",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 65,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataAvailability",
            "offset": 0,
            "slot": "2",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(PaymentOnSubscription)101_storage": {
        "encoding": "inplace",
        "label": "struct PaymentOnSubscription",
        "members": [
          {
            "astId": 98,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "timeDuration",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 100,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "repeat",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(PricingModel)96_storage": {
        "encoding": "inplace",
        "label": "struct PricingModel",
        "members": [
          {
            "astId": 84,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paymentType",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 86,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "price",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "currency",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 90,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "fee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 93,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "paymentOnSubscription",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(PaymentOnSubscription)101_storage"
          },
          {
            "astId": 95,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "isFree",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(TypeOfData)52_storage": {
        "encoding": "inplace",
        "label": "struct TypeOfData",
        "members": [
          {
            "astId": 49,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "dataStream",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 51,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "personalData",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Violation)117_storage": {
        "encoding": "inplace",
        "label": "struct Violation",
        "members": [
          {
            "astId": 110,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "violationType",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(ViolationType)107"
          },
          {
            "astId": 112,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "issuerId",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 116,
            "contract": "contracts/Agreement.sol:DataSharingAgreement",
            "label": "penaltyChoices",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)3_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}