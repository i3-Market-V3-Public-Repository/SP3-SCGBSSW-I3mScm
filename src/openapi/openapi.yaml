openapi: 3.0.0
info:
  title: Smart Contract Manager API
  description: Smart Contract Manager API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: /
  - url: http://95.211.3.249:3333
    variables: {}
security:
  - bearerAuth: []
tags:
  - name: Agreement
    description: Contractual Agreement between Provider and Consumer.
paths:
  /template/{offering_id}:
    get:
      tags:
        - Agreement
      summary: Request template with static and dynamic parameters
      parameters:
        - name: offering_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/template'
      security:
        - bearerAuth: []
  /create_agreement_raw_transaction/{sender_address}:
    post:
      tags:
        - Agreement
      summary: Create agreement
      parameters:
        - name: sender_address
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template' 
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
              example:
                nonce: 6
                to: "0x527F9771A4805E7E539436368D09ed5032bf8f57"
                from: "0xce02fe0c65285ac850d2e9b6494446e59f0b48e6"
                gasLimit: 12500000
                gasPrice: 10000000000
                chainId: 1337
                data: "0x89a8348c00000000000000000000000000000000000000000000000000000000000001c"
      security:
        - bearerAuth: []
  /sign_agreement_raw_transaction:
    put:
      tags:
        - Agreement
      summary: Sign agreement 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sign_agreement'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  # /update_agreement_raw_transaction/{agreement_id}/{sender_address}:
  #   put:
  #     tags:
  #       - Agreement
  #     summary: Update agreement 
  #     parameters:
  #       - name: agreement_id
  #         in: path
  #         required: true
  #         style: simple
  #         explode: false
  #         schema:
  #           type: integer
  #       - name: sender_address
  #         in: path
  #         required: true
  #         style: simple
  #         explode: false
  #         schema:
  #           type: string
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/template'
  #       required: true
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/raw_transaction_template'
  #     security:
  #       - bearerAuth: [] 
  /deploy_signed_transaction:
    post:
      tags:
        - Agreement
      summary: Deploy signed transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_transaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_object'
      security:
        - bearerAuth: []    
  /get_agreement/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agreement_template'
      security:
        - bearerAuth: []
  /get_pricing_model/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get agreement's pricing model
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricing_model_template'
      security:
        - bearerAuth: []
  /check_active_agreements:
    get:
      tags:
        - Agreement
      summary: Check active agreements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_consumer/{consumer_public_key}/{active}:
    get:
      tags:
        - Agreement
      summary: Check agreements by consumer
      parameters:
        - name: consumer_public_key
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: active
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_provider/{provider_public_key}/{active}:
    get:
      tags:
        - Agreement
      summary: Check agreements by provider
      parameters:
        - name: provider_public_key
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: active
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_data_offering/{offering_id}:
    get:
      tags:
        - Agreement
      summary: Check agreements by data offering
      parameters:
        - name: offering_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /get_state/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get the state of the agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/state'
      security:
        - bearerAuth: []
  /retrieve_agreements/{consumer_public_key}:
    get:
      tags:
        - Agreement
      summary: Retrieve the active agreements, which start date is reached, based on consumer public key 
      parameters:
        - name: consumer_public_key
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /evaluate_signed_resolution:
    post:
      tags:
        - Agreement
      summary: Verify a signed resolution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_resolution'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_object'
      security:
        - bearerAuth: []
  # /present_penalty_choices/{agreement_id}:
  #   get:
  #     tags:
  #       - Agreement
  #     summary: Present penalty options
  #     parameters:
  #       - name: agreement_id
  #         in: path
  #         required: true
  #         style: simple
  #         explode: false
  #         schema:
  #           type: integer
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/penalties'
  #     security:
  #       - bearerAuth: []
  # /enforce_penalty:
  #   put:
  #     tags:
  #       - Agreement
  #     summary: Enforce penalty
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/enforce_penalty'
  #       required: true
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/transaction_object'
  #     security:
  #       - bearerAuth: []
  /terminate:
    put:
      tags:
        - Agreement
      summary: Terminate Agreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_object'
      security:
        - bearerAuth: []
  # /give_consent:
  #   post:
  #     tags:
  #       - Agreement
  #     summary: Give consent
  #     requestBody:
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/consent'
  #       required: true
  #     responses:
  #       '200':
  #         description: OK
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/transaction_object'
  #     security:
  #       - bearerAuth: []
components:
  schemas:
    state:
      type: object
      properties:
        state:
          type: string
    sign_msg:
      type: object
      properties:
        msg:
          type: string
    update_msg:
      type: object
      properties:
        msg:
          type: string
    agreement_id:
      type: object
      properties:
        agreement_id:
          type: integer
    raw_transaction_template:
      type: object
      properties:
        nonce:
          type: integer
        to:
          type: string
        from:
          type: string
        gasLimit:
          type: integer
        gasPrice:
          type: integer
        chainId:
          type: integer
        data:
          type: string
    transaction_object:
        type: object
        properties:
          transactionHash:
            type: string
          transactionIndex:
            type: string
          blockHash:
            type: string
          contractAddress:
            type: string
          cumulativeGasUsed:
            type: integer
          to:
            type: string
          from:
            type: string
          gasUsed:
            type: integer
          logsBloom:
            type: string
          logs:
            type: array
            items: 
              type: object
          confirmation:
            type: integer
          status:
            type: integer     
    signed_transaction:
      type: object
      properties:
        signed_transaction:
          type: string
    template:
      type: object
      required:
        - dataOfferingDescription, purpose, dids, parties, duration, obligations, intendedUse, licenseGrant, pricingModel
      properties:
        dataOfferingDescription:
          type: object
          required:
          - dataOfferingId, dataOfferingVersion, active
          properties:
            dataOfferingId:
              type: string
            version:
              type: integer
            category:
              type: string
            active:
              type: boolean
            title:
              type: string
        parties: 
          type: object
          required:
          - providerDid
          properties:
            providerDid:
              type: string
            consumerDid:
              type: string
        purpose:
          type: string
        duration:
          type: object
          required:
          - creationDate, startDate, endDate
          properties:
                creationDate:
                  type: integer
                startDate:
                  type: integer
                endDate:
                  type: integer
        obligations:
          type: object
          properties:
              qualityOfData:
                type: integer
              characteristics:
                type: string
              dataAvailability:
                type: boolean
        intendedUse:
          type: object
          required:
          - processData, shareDataWithThirdParty, editData
          properties:
                processData:
                  type: boolean
                shareDataWithThirdParty:
                  type: boolean
                editData:
                  type: boolean
        licenseGrant:
          type: object
          required:
          - copyData, transferable, exclusiveness, revocable
          properties:
                copyData:
                  type: boolean
                transferable:
                  type: boolean
                exclusiveness:
                  type: boolean
                revocable:
                  type: boolean
        dataStream:
          type: boolean
        personalData:
          type: boolean
        pricingModel:
          type: object
          required:
          - basicPrice, currency, hasFreePrice
          properties:
            paymentType:
              type: string
            pricingModelName:
              type: string
            basicPrice:
              type: integer
            currency:
              type: string
            fee:
              type: integer
            hasPaymentOnSubscription:
              type: object
              properties:
                paymentOnSubscriptionName:
                  type: string
                paymentType:
                  type: string
                timeDuration:
                  type: string
                description:
                  type: string
                repeat:
                  type: string
                hasSubscriptionPrice:
                  type: integer
            # hasPaymentOnApi:
            #   type: object
            #   properties:
            #     description:
            #       type: string
            #     numberOfObject:
            #       type: integer
            #     hasApiPrice:
            #       type: integer
            # hasPaymentOnUnit:
            #   type: object
            #   properties:
            #     paymentOnUnitName:
            #       type: string
            #     description:
            #       type: string
            #     dataUnit:
            #       type: integer
            #     hasUnitPrice:
            #       type: integer
            # hasPaymentOnSize:
            #   type: object
            #   properties:
            #     paymentOnSizeName:
            #       type: string
            #     description:
            #       type: string
            #     dataSize:
            #       type: integer
            #     hasSizePrice:
            #       type: integer
            hasFreePrice:
              type: object
              properties:
                hasPriceFree: 
                  type: boolean
        dataExchangeAgreement:
          type: object
          required:
            - orig, dest
          properties:
            orig:
              type: string
            dest:
              type: string
            encAlg:
              type: string
            signingAlg:
              type: string
            hashAlg:
              type: string
            ledgerContractAddress:
              type: string
            ledgerSignerAddress:
              type: string
            pooToPorDelay:
              type: integer
            pooToPopDelay:
              type: integer
            pooToSecretDelay:
              type: integer
    agreement_template:
      type: object
      properties:
        agreementId: 
          type: integer
        providerPublicKey:
          type: string
        consumerPublicKey:
          type: string
        dataExchangeAgreementHash:
          type: string
        dataOffering:
          type: object
          properties:
            dataOfferingId:
              type: string
            dataOfferingVersion:
              type: integer
            dataOfferingTitle:
              type: string
        purpose:
          type: string
        state:
          type: integer
        agreementDates:
          type: array
          items:
            type: integer
        obligation:
          type: object
          properties:
            qualityOfData:
              type: integer
            characteristics:
              type: string
            dataAvailability:
              type: boolean
        intendedUse:
          type: object
          properties:
            processData:
              type: boolean
            shareDataWithThirdParty:
              type: boolean
            editData:
              type: boolean
        licenseGrant:
          type: object
          properties:
            copydata:
              type: boolean
            transferable:
              type: boolean
            exclusiveness:
              type: boolean
            revocable:
              type: boolean
        dataStream:
          type: boolean
        personalData:
          type: boolean
        pricingModel:
          type: object
          properties:
            paymentType:
              type: string
            price:
              type: integer
            currency:
              type: string
            fee:
              type: integer
            paymentOnSubscription:
              type: object
              properties:
                timeDuration:
                  type: string
                repeat:
                  type: string
            isFree:
              type: boolean
        violation:
          type: object
          properties:
                  violationType:
                    type: integer
                  issuerId:
                    type: string
    pricing_model_template:
      type: object
      properties:
            paymentType:
              type: string
            price:
              type: integer
            currency:
              type: string
            fee:
              type: integer
            paymentOnSubscription:
              type: object
              properties:
                timeDuration:
                  type: string
                repeat:
                  type: string
            isFree:
              type: boolean
    terminate:
      type: object
      properties:
        agreement_id:
          type: integer
          format: int64
        sender_address:
          type: string
    signed_resolution:
      type: object
      properties:
        proof:
          type: string
        sender_address:
          type: string
      example:
        proof: 'eyJhbGciOiJFUzI1NiJ9.eyJwcm9vZlR5cGUiOiJyZXNvbHV0aW9uIiwiZGF0YUV4Y2hhbmdlSWQiOiJTTmg5eUtYYjJlaGxWSFJZQkllay16Z1pVaDJtU1NvMWpwbGg3SWEtNHlRIiwiaWF0IjoxNjQ2OTUxNjM1LCJpc3MiOiJ7XCJhbGdcIjpcIkVTMjU2XCIsXCJjcnZcIjpcIlAtMjU2XCIsXCJkXCI6XCJ1Z1NpSTlJTEdnTWM1TmMwbkFhM3FGTjNBTjBvR2JhMzNJQWFrSHFkdm1nXCIsXCJrdHlcIjpcIkVDXCIsXCJ4XCI6XCJMNldmVlhHYkgwaW82SnBtOTRTMWxwZGk2eUd0VDFPbVo2NUFfa1NfaGs4XCIsXCJ5XCI6XCI2WUUwb1BPcFdCcUM3NURfanRKVWZ5NWxzWGxHak81ZzZRWGl2RHdNREtjXCJ9Iiwic3ViIjoie1wiYWxnXCI6XCJFUzI1NlwiLFwiY3J2XCI6XCJQLTI1NlwiLFwia3R5XCI6XCJFQ1wiLFwieFwiOlwiVlhzQnVPWndWamhvZkpWNGtBaGJhNnduMUVZRHdVSWtnWGIyZlZuTDh4Y1wiLFwieVwiOlwiaDRmTDVRdjRFWXQ3WGRLcWRJeTFaSnM0X1FXWURrWTF6VXpTb0k2MU43WVwifSIsInJlc29sdXRpb24iOiJkZW5pZWQiLCJ0eXBlIjoiZGlzcHV0ZSJ9.TtxUm3E6LfmwEI74cr6RO4-nw-xcFaeARYOZ4z1dBVlc_JU0mCv0Ftr9tCDhggfLiJqb4RIPiNfIytFZMUbx-g'
        sender_address: '0x4d82Bd33baA4Fe5489C45bBdC206019403dcF829'
    enforce_penalty:
      type: object
      properties:
        senderAddress:
          type: string
        agreementId:
          type: integer
          format: int64
        chosenPenalty:
          type: string
        paymentPercentage:
          type: integer
        newEndDate:
          type: integer
          format: int64
    # consent:
    #   type: object
    #   properties:
    #     dataOfferingId:
    #       type: string
    #     consent_form_hash:
    #       type: string
    #     start_date:
    #       type: integer
    #     end_date:
    #       type: integer
    sign_agreement:
      type: object
      properties:
        agreement_id:
          type: integer
        consumer_public_key:
          type: string
        consumer_ethereum_address:
          type: string
    active_agreements:
      type: array
      items:
        $ref: '#/components/schemas/agreement_template'
    penalties:
      type: array
      items:
        type: string
    data_exchange_to_agreement_id:
      type: object
      properties:
        data_exchange_id:
          type: string
        agreement_id:
          type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


