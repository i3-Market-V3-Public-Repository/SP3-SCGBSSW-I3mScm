openapi: 3.0.0
info:
  title: Smart Contract Manager API
  description: Smart Contract Manager API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: /
  - url: http://95.211.3.249:3333
    variables: {}
security:
  - bearerAuth: []
tags:
  - name: Agreement
    description: Contractual Agreement between Provider and Consumer.
paths:
  /template/{offering_id}:
    get:
      tags:
        - Agreement
      summary: Request template with static and dynamic parameters
      parameters:
        - name: offering_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/template'
      security:
        - bearerAuth: []
  /create_agreement_raw_transaction/{sender_address}:
    post:
      tags:
        - Agreement
      summary: Create agreement
      parameters:
        - name: sender_address
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/template' 
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
              example:
                nonce: 6
                to: "0x527F9771A4805E7E539436368D09ed5032bf8f57"
                from: "0xce02fe0c65285ac850d2e9b6494446e59f0b48e6"
                gasLimit: 12500000
                gasPrice: 10000000000
                chainId: 1337
                data: "0x89a8348c00000000000000000000000000000000000000000000000000000000000001c"
      security:
        - bearerAuth: []
  /deploy_signed_transaction:
    post:
      tags:
        - Agreement
      summary: Deploy signed transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_transaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_object'
      security:
        - bearerAuth: []    
  /get_agreement/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/agreement_template'
      security:
        - bearerAuth: []
  /get_pricing_model/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get agreement's pricing model
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pricingModelTemplate'
      security:
        - bearerAuth: []
  /check_active_agreements:
    get:
      tags:
        - Agreement
      summary: Check active agreements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_consumer/{consumer_public_key}/{active}:
    get:
      tags:
        - Agreement
      summary: Check agreements by consumer
      parameters:
        - name: consumer_public_key
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: active
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_provider/{provider_public_key}/{active}:
    get:
      tags:
        - Agreement
      summary: Check agreements by provider
      parameters:
        - name: provider_public_key
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: active
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /check_agreements_by_data_offering/{offering_id}:
    get:
      tags:
        - Agreement
      summary: Check agreements by data offering
      parameters:
        - name: offering_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /agreements/{consumerPublicKeys}/{active}:
    get:
      tags:
        - Agreement
      summary: Get agreements by consumer
      parameters:
        - name: consumerPublicKeys
          in: query
          required: true
          explode: false
          schema:
            type: array
            items:
              type: string
            example: ["", "", ""]
        - name: active
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: boolean
            example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
  /get_state/{agreement_id}:
    get:
      tags:
        - Agreement
      summary: Get the state of the agreement
      parameters:
        - name: agreement_id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/state'
      security:
        - bearerAuth: []
  /retrieve_agreements/{consumer_public_key}:
    get:
      tags:
        - Agreement
      summary: Retrieve the active agreements, which start date is reached, based on consumer public key 
      parameters:
        - name: consumer_public_key
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/active_agreements'
      security:
        - bearerAuth: []
  /evaluate_signed_resolution:
    post:
      tags:
        - Agreement
      summary: Verify a signed resolution
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_resolution_scm'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  /propose_penalty:
    post:
      tags:
        - Agreement 
      summary: Choose penalty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/choose_penalty'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/choose_penalty'
      security:
        - bearerAuth: []
  /enforce_penalty:
    put:
      tags:
        - Agreement 
      summary: Enforce penalty
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enforce_penalty'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  /request_termination:
    put:
      tags:
        - Agreement
      summary: Request Agreement Termination
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/requestTermination'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  /terminate:
    put:
      tags:
        - Agreement
      summary: Terminate Agreement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminate'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  /give_consent:
    post:
      tags:
        - Explicit User Consent
      summary: Give consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/consent'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  /check_consent_status/{dataOfferingId}:
    get:
      tags:
        - Explicit User Consent
      summary: Check consent status
      parameters:
        - name: dataOfferingId
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: string
        - name: consentSubject
          in: query
          required: false
          explode: false
          schema:
            type: string
            default: " "
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent_status'
      security:
        - bearerAuth: []
  /revoke_consent:
    put:
      tags:
        - Explicit User Consent
      summary: Revoke consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/revokeConsent'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/raw_transaction_template'
      security:
        - bearerAuth: []
  /deploy_consent_signed_transaction:
    post:
      tags:
        - Explicit User Consent
      summary: Deploy consent signed transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signed_transaction'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transaction_object'
      security:
        - bearerAuth: []    
components:
  schemas:
    state:
      type: object
      properties:
        state:
          type: string
    agreement_id:
      type: object
      properties:
        agreement_id:
          type: integer
          format: int64
    raw_transaction_template:
      type: object
      properties:
        nonce:
          type: integer
          format: int64
        to:
          type: string
        from:
          type: string
        gasLimit:
          type: integer
          format: int64
        gasPrice:
          type: integer
          format: int64
        chainId:
          type: integer
          format: int64
        data:
          type: string
    transaction_object:
        type: object
        properties:
          transactionHash:
            type: string
          transactionIndex:
            type: string
          blockHash:
            type: string
          contractAddress:
            type: string
          cumulativeGasUsed:
            type: integer
            format: int64
          to:
            type: string
          from:
            type: string
          gasUsed:
            type: integer
            format: int64
          logsBloom:
            type: string
          logs:
            type: array
            items: 
              type: object
          confirmation:
            type: integer
          status:
            type: integer     
    signed_transaction:
      type: object
      properties:
        signedTransaction:
          type: string
    template:
      type: object
      required:
        - dataOfferingDescription
        - parties
        - purpose
        - duration
        - intendedUse
        - licenseGrant
        - dataStream
        - personalData
        - pricingModel
        - dataExchangeAgreement
        - signatures
      properties:
        dataOfferingDescription:
          type: object
          required:
          - dataOfferingId
          - dataOfferingVersion
          - active
          properties:
            dataOfferingId:
              type: string
            version:
              type: integer
            category:
              type: string
            active:
              type: boolean
            title:
              type: string
        parties: 
          type: object
          required:
          - providerDid
          - consumerDid
          properties:
            providerDid:
              type: string
            consumerDid:
              type: string
        purpose:
          type: string
        duration:
          type: object
          required:
          - creationDate
          - startDate
          - endDate
          properties:
                creationDate:
                  type: integer
                  format: int64
                startDate:
                  type: integer
                  format: int64
                endDate:
                  type: integer
                  format: int64
        intendedUse:
          type: object
          required:
          - processData
          - shareDataWithThirdParty
          - editData
          properties:
                processData:
                  type: boolean
                shareDataWithThirdParty:
                  type: boolean
                editData:
                  type: boolean
        licenseGrant:
          type: object
          required:
          - transferable
          - exclusiveness
          - paidUp
          - revocable
          - processing
          - modifying
          - analyzing
          - storingData
          - storingCopy
          - reproducing
          - distributing
          - loaning
          - selling
          - renting
          - furtherLicensing
          - leasing
          properties:
            transferable:
              type: boolean
            exclusiveness:
              type: boolean
            paidUp:
              type: boolean
            revocable:
              type: boolean
            processing:
              type: boolean
            modifying:
              type: boolean
            analyzing:
              type: boolean
            storingData:
              type: boolean
            storingCopy:
              type: boolean
            reproducing:
              type: boolean
            distributing:
              type: boolean
            loaning:
              type: boolean
            selling:
              type: boolean
            renting:
              type: boolean
            furtherLicensing:
              type: boolean
            leasing:
              type: boolean    
        dataStream:
          type: boolean
        personalData:
          type: boolean
        pricingModel:
          type: object
          required:
          - basicPrice
          - currency
          - hasFreePrice
          properties:
            paymentType:
              type: string
            pricingModelName:
              type: string
            basicPrice:
              type: number
              format: float
            currency:
              type: string
            fee:
              type: number
              format: float
            hasPaymentOnSubscription:
              type: object
              properties:
                paymentOnSubscriptionName:
                  type: string
                paymentType:
                  type: string
                timeDuration:
                  type: string
                description:
                  type: string
                repeat:
                  type: string
                hasSubscriptionPrice:
                  type: integer
            hasFreePrice:
              type: object
              properties:
                hasPriceFree: 
                  type: boolean
        dataExchangeAgreement:
          type: object
          required:
            - orig
            - dest
            - encAlg
            - signingAlg
            - hashAlg
            - ledgerContractAddress
            - ledgerSignerAddress
            - pooToPorDelay
            - pooToPopDelay
            - pooToSecretDelay
          properties:
            orig:
              type: string
            dest:
              type: string
            encAlg:
              type: string
            signingAlg:
              type: string
            hashAlg:
              type: string
            ledgerContractAddress:
              type: string
            ledgerSignerAddress:
              type: string
            pooToPorDelay:
              type: integer
            pooToPopDelay:
              type: integer
            pooToSecretDelay:
              type: integer
        signatures:
          type: object
          required:
            - providerSignature
            - consumerSignature
          properties:
            providerSignature:
              type: string
            consumerSignature:
              type: string
    agreement_template:
      type: object
      properties:
        agreementId: 
          type: integer
          format: int64
        providerPublicKey:
          type: string
        consumerPublicKey:
          type: string
        dataExchangeAgreementHash:
          type: string
        dataOffering:
          type: object
          properties:
            dataOfferingId:
              type: string
            dataOfferingVersion:
              type: integer
            dataOfferingTitle:
              type: string
        purpose:
          type: string
        state:
          type: integer
        agreementDates:
          type: array
          items:
            type: integer
            format: int64
        intendedUse:
          type: object
          properties:
            processData:
              type: boolean
            shareDataWithThirdParty:
              type: boolean
            editData:
              type: boolean
        licenseGrant:
          type: object
          properties:
            transferable:
              type: boolean
            exclusiveness:
              type: boolean
            paidUp:
              type: boolean
            revocable:
              type: boolean
            processing:
              type: boolean
            modifying:
              type: boolean
            analyzing:
              type: boolean
            storingData:
              type: boolean
            storingCopy:
              type: boolean
            reproducing:
              type: boolean
            distributing:
              type: boolean
            loaning:
              type: boolean
            selling:
              type: boolean
            renting:
              type: boolean
            furtherLicensing:
              type: boolean
            leasing:
              type: boolean     
        dataStream:
          type: boolean
        personalData:
          type: boolean
        pricingModel:
          type: object
          properties:
            paymentType:
              type: string
            price:
              type: integer
            currency:
              type: string
            fee:
              type: integer
            paymentOnSubscription:
              type: object
              properties:
                timeDuration:
                  type: string
                repeat:
                  type: string
            isFree:
              type: boolean
        violation:
          type: object
          properties:
                  violationType:
                    type: integer
        signatures:
          type: object
          properties:
            providerSigniture:
              type: string
            consumerSigniture:
              type: string
    pricingModelTemplate:
      type: object
      properties:
            paymentType:
              type: string
            price:
              type: integer
            currency:
              type: string
            fee:
              type: integer
            paymentOnSubscription:
              type: object
              properties:
                timeDuration:
                  type: string
                repeat:
                  type: string
            isFree:
              type: boolean
    requestTermination:
      type: object
      properties:
        senderAddress:
          type: string
        agreementId:
          type: integer
          format: int64
        publicKey:
          type: string
    terminate:
      type: object
      properties:
        senderAddress:
          type: string
        agreementId:
          type: integer
          format: int64
        publicKey:
          type: string
    signed_resolution_scm:
      type: object
      properties:
        proof:
          type: string
        sender_address:
          type: string
      example:
        proof: 'eyJhbGciOiJFUzI1NiJ9.eyJwcm9vZlR5cGUiOiJyZXNvbHV0aW9uIiwiZGF0YUV4Y2hhbmdlSWQiOiJTTmg5eUtYYjJlaGxWSFJZQkllay16Z1pVaDJtU1NvMWpwbGg3SWEtNHlRIiwiaWF0IjoxNjQ2OTUxNjM1LCJpc3MiOiJ7XCJhbGdcIjpcIkVTMjU2XCIsXCJjcnZcIjpcIlAtMjU2XCIsXCJkXCI6XCJ1Z1NpSTlJTEdnTWM1TmMwbkFhM3FGTjNBTjBvR2JhMzNJQWFrSHFkdm1nXCIsXCJrdHlcIjpcIkVDXCIsXCJ4XCI6XCJMNldmVlhHYkgwaW82SnBtOTRTMWxwZGk2eUd0VDFPbVo2NUFfa1NfaGs4XCIsXCJ5XCI6XCI2WUUwb1BPcFdCcUM3NURfanRKVWZ5NWxzWGxHak81ZzZRWGl2RHdNREtjXCJ9Iiwic3ViIjoie1wiYWxnXCI6XCJFUzI1NlwiLFwiY3J2XCI6XCJQLTI1NlwiLFwia3R5XCI6XCJFQ1wiLFwieFwiOlwiVlhzQnVPWndWamhvZkpWNGtBaGJhNnduMUVZRHdVSWtnWGIyZlZuTDh4Y1wiLFwieVwiOlwiaDRmTDVRdjRFWXQ3WGRLcWRJeTFaSnM0X1FXWURrWTF6VXpTb0k2MU43WVwifSIsInJlc29sdXRpb24iOiJkZW5pZWQiLCJ0eXBlIjoiZGlzcHV0ZSJ9.TtxUm3E6LfmwEI74cr6RO4-nw-xcFaeARYOZ4z1dBVlc_JU0mCv0Ftr9tCDhggfLiJqb4RIPiNfIytFZMUbx-g'
        sender_address: '0x4d82Bd33baA4Fe5489C45bBdC206019403dcF829'
    choose_penalty:
      type: object
      properties:
        agreementId:
          type: integer
          format: int64
        chosenPenalty:
          type: string
        paymentPercentage:
          type: integer
        newEndDate:
          type: integer
          format: int64
    enforce_penalty:
      type: object
      properties:
        senderAddress:
          type: string
        agreementId:
          type: integer
          format: int64
        chosenPenalty:
          type: string
        paymentPercentage:
          type: integer
        newEndDate:
          type: integer
          format: int64
    consent:
      type: object
      properties:
        dataOfferingId:
          type: string
        consentSubject:
          type: string
        consentFormHash:
          type: string
        startDate:
          type: integer
        endDate:
          type: integer
        senderAddress:
          type: string
    revokeConsent:
      type: object
      properties:
        dataOfferingId:
          type: string
        consentSubjects:
          type: array
          items:
            type: string
        senderAddress:
          type: string
    active_agreements:
      type: array
      items:
        $ref: '#/components/schemas/agreement_template'
    consent_status:
      type: array
      items:
        type: integer
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


